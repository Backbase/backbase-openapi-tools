openapi: 3.0.1
info:
  title: Audit Spec - Client API
  description: Client API specification for Audit
  license:
    name: Copyright Backbase
    url: https://www.backbase.com/legal
  version: v3
servers:
- url: http://localhost:7777/api/audit-service/client-api/v3
  description: Service run locally
tags:
- name: audit client
paths:
  /audit-log/messages:
    description: Operations on messages in the Audit log.
    get:
      tags:
      - audit client
      summary: Get audit messages
      description: Returns all audit messages which pass the provided filters. Supports
        pagination. CSV format is available.
      operationId: getAuditLogMessages
      parameters:
      - name: startDate
        in: query
        description: "Restrict results to audit logs with a timestamp of, or after\
          \ 00:00 of the supplied date, UTC."
        required: false
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        description: "Restrict results to audit logs with a timestamp of, or before\
          \ 23:59 of the supplied date, UTC."
        required: false
        schema:
          type: string
          format: date
      - name: eventCategories
        in: query
        description: Restrict results to audit logs with an event category matching
          any of the supplied values.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: objectType
        in: query
        description: Restrict results to audit logs with an event object type matching
          any of the supplied values. Deprecated. Please use the objectTypes parameter
          as it offers greater freedom.
        required: false
        deprecated: true
        schema:
          type: string
      - name: objectTypes
        in: query
        description: Restrict results to audit logs with an event object type matching
          any of the supplied values.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: eventAction
        in: query
        description: Restrict results to audit logs with an event action matching
          any of the supplied values. Deprecated. Please use the eventActions parameter
          as it offers greater freedom.
        required: false
        deprecated: true
        schema:
          type: string
      - name: eventActions
        in: query
        description: Restrict results to audit logs with an event action matching
          any of the supplied values.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: status
        in: query
        description: Restrict results to audit logs with a status matching any of
          the supplied values.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ipAddresses
        in: query
        description: Restrict results to audit logs with an IP address matching any
          of the supplied values. IPv4 format.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: usernames
        in: query
        description: Restrict results to audit logs with a username matching any of
          the supplied values.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: userId
        in: query
        description: Restrict results to audit logs with an actor user ID matching
          any of the supplied values. Deprecated. Please use the userIds parameter
          as it offers greater freedom.
        required: false
        deprecated: true
        schema:
          type: string
      - name: userIds
        in: query
        description: Restrict results to audit logs with an actor user ID matching
          any of the supplied values.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: legalEntityIds
        in: query
        description: Restrict results to audit logs with a legalEntityId matching
          any of the supplied values.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: serviceAgreementId
        in: query
        description: Restrict results to audit logs with a serviceAgreementId matching
          the supplied value.
        required: false
        schema:
          type: string
      - name: messageSetId
        in: query
        description: Restrict results to audit logs with a message set ID matching
          the supplied value.
        required: false
        schema:
          type: string
      - name: schemaVersions
        in: query
        description: Restrict results to audit logs with a schemaVersion matching
          any of the supplied values. Deprecated. Support for this parameter is incomplete.
        required: false
        deprecated: true
        schema:
          type: array
          items:
            type: string
      - name: userAgents
        in: query
        description: Restrict results to audit logs with a user agent matching any
          of the supplied values.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: errors
        in: query
        description: Restrict results to audit logs with an error matching any of
          the supplied values.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: eventMetaDataKey
        in: query
        description: Restrict results to audit records with a metadata key matching
          the supplied value.
        required: false
        schema:
          type: string
      - name: eventMetaDataValue
        in: query
        description: Restrict results to audit records with a metadata value matching
          that which is supplied. May only be used in conjunction with the eventMetaDataKey
          parameter.
        required: false
        schema:
          type: string
      - name: partialMatchAgainst
        in: query
        description: "Apply partial matching against the provided fields:\n\"eventCategory\"\
          , \"objectType\", \"eventAction\", \"username\", \"userId\", \"legalEntityId\"\
          , \"serviceAgreementId\",\n\"messageSetId\", \"schemaVersion\", \"userAgent\"\
          , \"error\", \"eventMetaDataValue\".\n"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: from
        in: query
        description: Specifies the number of pages to skip. A value of 0 gives the
          starting page. Page size is goverened by the size parameter.
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: Limits the number of audit records returned in the response.
        required: false
        schema:
          type: integer
          default: 25
      - name: orderBy
        in: query
        description: "Sorts the results by one of the following fields:\n\"eventCategory\"\
          , \"objectType\", \"eventAction\", \"username\", \"userId\", \"timestamp\"\
          , \"eventDescription\",\n\"legalEntityId\", \"serviceAgreementId\", \"messageSetId\"\
          .\n"
        required: false
        schema:
          type: string
      - name: direction
        in: query
        description: Sorts the results in asceding (ASC) or descending (DESC) order.
        required: false
        schema:
          type: string
          default: DESC
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Responds with the requested audit messages. Response size can
            be zero.
          headers:
            X-Total-Count:
              $ref: '#/components/headers/TotalCount'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAuditLogMessages'
              example:
                $ref: '#/components/examples/GetAuditLogMessages'
            text/csv:
              example:
                $ref: '#/components/examples/GetAuditLogMessagesCsv'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad-request-error'
              example:
                $ref: '#/components/examples/openapi-lib-bad-request-validation-error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden-error'
              example:
                $ref: '#/components/examples/openapi-lib-forbidden-error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal-server-error'
              example:
                $ref: '#/components/examples/openapi-lib-internal-server-error'
      x-BbAccessControl-resource: Audit
      x-BbAccessControl-function: Audit
      x-BbAccessControl-privilege: view
  /audit-log/export:
    description: Operations to trigger creation of or fetch stored audit content.
    get:
      tags:
      - audit client
      summary: Start Async Export
      description: Start an asynchronous process of creating a CSV file containing
        audit messages which pass the provided filters. The user will be notified
        upon completion and given an exportId with which to fetch the content.
      operationId: getStartAsyncExport
      parameters:
      - name: startDate
        in: query
        description: "Restrict results to audit logs with a timestamp of, or after\
          \ 00:00 of the supplied date, UTC."
        required: false
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        description: "Restrict results to audit logs with a timestamp of, or before\
          \ 23:59 of the supplied date, UTC."
        required: false
        schema:
          type: string
          format: date
      - name: eventCategories
        in: query
        description: Restrict results to audit logs with an event category matching
          any of the supplied values.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: objectType
        in: query
        description: Restrict results to audit logs with an event object type matching
          any of the supplied values. Deprecated. Please use the objectTypes parameter
          as it offers greater freedom.
        required: false
        deprecated: true
        schema:
          type: string
      - name: objectTypes
        in: query
        description: Restrict results to audit logs with an event object type matching
          any of the supplied values.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: eventAction
        in: query
        description: Restrict results to audit logs with an event action matching
          any of the supplied values. Deprecated. Please use the eventActions parameter
          as it offers greater freedom.
        required: false
        deprecated: true
        schema:
          type: string
      - name: eventActions
        in: query
        description: Restrict results to audit logs with an event action matching
          any of the supplied values.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: status
        in: query
        description: Restrict results to audit logs with a status matching any of
          the supplied values.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: ipAddresses
        in: query
        description: Restrict results to audit logs with an IP address matching any
          of the supplied values. IPv4 format.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: usernames
        in: query
        description: Restrict results to audit logs with a username matching any of
          the supplied values.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: userId
        in: query
        description: Restrict results to audit logs with an actor user ID matching
          any of the supplied values. Deprecated. Please use the userIds parameter
          as it offers greater freedom.
        required: false
        deprecated: true
        schema:
          type: string
      - name: userIds
        in: query
        description: Restrict results to audit logs with an actor user ID matching
          any of the supplied values.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: legalEntityIds
        in: query
        description: Restrict results to audit logs with a legalEntityId matching
          any of the supplied values.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: serviceAgreementId
        in: query
        description: Restrict results to audit logs with a serviceAgreementId matching
          the supplied value.
        required: false
        schema:
          type: string
      - name: messageSetId
        in: query
        description: Restrict results to audit logs with a message set ID matching
          the supplied value.
        required: false
        schema:
          type: string
      - name: schemaVersions
        in: query
        description: Restrict results to audit logs with a schemaVersion matching
          any of the supplied values. Deprecated. Support for this parameter is incomplete.
        required: false
        deprecated: true
        schema:
          type: array
          items:
            type: string
      - name: userAgents
        in: query
        description: Restrict results to audit logs with a user agent matching any
          of the supplied values.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: errors
        in: query
        description: Restrict results to audit logs with an error matching any of
          the supplied values.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: eventMetaDataKey
        in: query
        description: Restrict results to audit records with a metadata key matching
          the supplied value.
        required: false
        schema:
          type: string
      - name: eventMetaDataValue
        in: query
        description: Restrict results to audit records with a metadata value matching
          that which is supplied. May only be used in conjunction with the eventMetaDataKey
          parameter.
        required: false
        schema:
          type: string
      - name: partialMatchAgainst
        in: query
        description: "Apply partial matching against the provided fields:\n\"eventCategory\"\
          , \"objectType\", \"eventAction\", \"username\", \"userId\", \"legalEntityId\"\
          , \"serviceAgreementId\",\n\"messageSetId\", \"schemaVersion\", \"userAgent\"\
          , \"error\", \"eventMetaDataValue\".\n"
        required: false
        schema:
          type: array
          items:
            type: string
      - name: from
        in: query
        description: Specifies the number of pages to skip. A value of 0 gives the
          starting page. Page size is goverened by the size parameter.
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: Limits the number of audit records returned in the response.
        required: false
        schema:
          type: integer
          default: 25
      - name: orderBy
        in: query
        description: "Sorts the results by one of the following fields:\n\"eventCategory\"\
          , \"objectType\", \"eventAction\", \"username\", \"userId\", \"timestamp\"\
          , \"eventDescription\",\n\"legalEntityId\", \"serviceAgreementId\", \"messageSetId\"\
          .\n"
        required: false
        schema:
          type: string
      - name: direction
        in: query
        description: Sorts the results in asceding (ASC) or descending (DESC) order.
        required: false
        schema:
          type: string
          default: DESC
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Responds with an exportId of which can later be used to retrieve
            the requested content.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStartAsyncExport'
              example:
                $ref: '#/components/examples/GetStartAsyncExport'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad-request-error'
              example:
                $ref: '#/components/examples/openapi-lib-bad-request-validation-error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden-error'
              example:
                $ref: '#/components/examples/openapi-lib-forbidden-error'
        "429":
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/too-many-requests-error'
              example:
                $ref: '#/components/examples/openapi-lib-too-many-requests-error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal-server-error'
              example:
                $ref: '#/components/examples/openapi-lib-internal-server-error'
      x-BbAccessControl-resource: Audit
      x-BbAccessControl-function: Audit
      x-BbAccessControl-privilege: view
  /audit-log/stored-content:
    get:
      tags:
      - audit client
      summary: Stored Content
      description: Returns stored content matching the provided content identifier.
      operationId: getStoredContent
      parameters:
      - name: contentId
        in: query
        description: Restrict results to content with an identifier matching the supplied
          value.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Responds with the requested content.
          content:
            text/csv:
              example:
                $ref: '#/components/examples/GetAuditLogMessagesCsv'
      x-BbAccessControl-resource: Audit
      x-BbAccessControl-function: Audit
      x-BbAccessControl-privilege: view
  /audit-log/event-categories:
    description: Operations on the event data found in the audit log.
    get:
      tags:
      - audit client
      summary: Get event categories
      description: "Returns a list of all unique event categories, including their\
        \ child object types and event actions."
      operationId: getAuditEventCategories
      responses:
        "200":
          description: Responds with an array of all eventCategory objects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAuditEventCategories'
              example:
                $ref: '#/components/examples/GetAuditEventCategories'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden-error'
              example:
                $ref: '#/components/examples/openapi-lib-forbidden-error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal-server-error'
              example:
                $ref: '#/components/examples/openapi-lib-internal-server-error'
      x-BbAccessControl-resource: Audit
      x-BbAccessControl-function: Audit
      x-BbAccessControl-privilege: view
  /audit-log/legal-entities:
    description: Operations that interact with the LegalEntity service within Entitlements.
    get:
      tags:
      - audit client
      summary: Get legal entities
      description: Returns a list of legal entites whose name contain the provided
        search string.
      operationId: getLegalEntities
      parameters:
      - name: query
        in: query
        description: Restrict results to legal entities whose name contains the supplied
          values.
        required: false
        schema:
          type: string
      - name: from
        in: query
        description: Specifies the number of pages to skip. A value of 0 gives the
          starting page. Page size is goverened by the size parameter.
        required: false
        schema:
          type: integer
          default: 0
      - name: cursor
        in: query
        description: Used as an alternative for specifying 'from'. The audit record
          ID proveded acts as the starting point for the retreived data.
        required: false
        schema:
          type: string
          default: ""
      - name: size
        in: query
        description: Limits the number of legal entities returned in the response.
        required: false
        schema:
          type: integer
          default: 10
      responses:
        "200":
          description: Responds with the requested legalEntity objects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLegalEntities'
              example:
                simple:
                  $ref: '#/components/examples/GetLegalEntities'
                complex:
                  $ref: '#/components/examples/GetLegalEntities'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden-error'
              example:
                $ref: '#/components/examples/openapi-lib-forbidden-error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal-server-error'
              example:
                $ref: '#/components/examples/openapi-lib-internal-server-error'
      x-BbAccessControl-resource: Audit
      x-BbAccessControl-function: Audit
      x-BbAccessControl-privilege: view
components:
  schemas:
    GetAuditLogMessages:
      $ref: '#/components/schemas/audit-messages-get-response'
    audit-messages-get-response:
      required:
      - auditMessages
      - totalCount
      type: object
      properties:
        auditMessages:
          type: array
          description: A collection of audit messages matching the query.
          items:
            $ref: '#/components/schemas/audit-message'
        totalCount:
          type: integer
          description: Total count of all audit messages that would match the query
            if page size were not an issue.
        additions:
          type: object
          additionalProperties:
            type: string
    bad-request-error:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: Any further information
        errors:
          type: array
          description: Detailed error information
          items:
            $ref: '#/components/schemas/error-item'
    forbidden-error:
      type: object
      properties:
        message:
          type: string
          description: Any further information
        errors:
          type: array
          description: Detailed error information
          items:
            $ref: '#/components/schemas/error-item'
    internal-server-error:
      type: object
      properties:
        message:
          type: string
          description: Further Information
      description: Represents HTTP 500 Internal Server Error
    GetStartAsyncExport:
      $ref: '#/components/schemas/audit-export-get-response'
    audit-export-get-response:
      required:
      - exportId
      type: object
      properties:
        exportId:
          type: string
          description: A unique ID that can be used to later retrieve the results
            of the export.
    too-many-requests-error:
      type: object
      properties:
        message:
          type: string
          description: Further Information
      description: Represents HTTP 429 Too many requests error
    GetAuditEventCategories:
      $ref: '#/components/schemas/event-categories-get'
    event-categories-get:
      type: object
      properties:
        eventCategories:
          type: array
          description: "A collection of distinct event categories, including their\
            \ child object types and event actions."
          items:
            $ref: '#/components/schemas/event-category'
        additions:
          type: object
          additionalProperties:
            type: string
    GetLegalEntities:
      $ref: '#/components/schemas/legal-entities-get'
    legal-entities-get:
      type: array
      description: A collection of legal entities.
      items:
        $ref: '#/components/schemas/legal-entity'
    audit-message:
      required:
      - eventAction
      - eventCategory
      - eventDescription
      - objectType
      - status
      - timestamp
      - userId
      - username
      type: object
      properties:
        timestamp:
          type: string
          description: The point in time at which the event occurred.
          format: date-time
        eventCategory:
          maxLength: 35
          minLength: 1
          type: string
          description: The general category of the event.
        objectType:
          maxLength: 35
          minLength: 1
          type: string
          description: The type of entity the event relates to.
        eventAction:
          maxLength: 35
          minLength: 1
          type: string
          description: The action which the event relates to.
        eventDescription:
          maxLength: 511
          minLength: 1
          type: string
          description: "A short summary of the event, containing the most pertinent\
            \ information."
        status:
          $ref: '#/components/schemas/Status'
        ipAddress:
          maxLength: 45
          minLength: 1
          type: string
          description: The originating IP address of the client who triggered the
            event.
        username:
          maxLength: 64
          minLength: 1
          type: string
          description: The username of the client who triggered the event.
        userId:
          maxLength: 36
          minLength: 1
          type: string
          description: The unique ID of the client who triggered the event.
        legalEntityId:
          maxLength: 36
          minLength: 1
          type: string
          description: The legal entity ID on behalf of which the event was triggered.
        serviceAgreementId:
          maxLength: 36
          minLength: 1
          type: string
          description: The service agreement ID under which the event was authorised.
        messageSetId:
          maxLength: 36
          minLength: 36
          type: string
          description: A shared identifier between related audit messages.
        schemaVersion:
          maxLength: 36
          minLength: 1
          type: string
          description: The version of the audit message schema that was current at
            the time the messages was generated.
        userAgent:
          maxLength: 255
          minLength: 1
          type: string
          description: The browser and operating system logged at the time the event
            was triggered.
        error:
          maxLength: 255
          minLength: 1
          type: string
          description: "The error associated with this event, if any."
        eventMetaData:
          maxProperties: 50
          type: object
          additionalProperties:
            type: string
          description: A collection of key-value pairs which provide additional context
            for the event.
        additions:
          type: object
          additionalProperties:
            type: string
      x-java-type: com.backbase.audit.rest.spec.v3.model.AuditMessage
    error-item:
      type: object
      properties:
        message:
          type: string
          description: Any further information.
        key:
          type: string
          description: "{capability-name}.api.{api-key-name}. For generated validation\
            \ errors this is the path in the document the error resolves to. e.g.\
            \ object name + '.' + field"
        context:
          type: object
          additionalProperties:
            type: string
          description: Context can be anything used to construct localised messages.
    event-category:
      type: object
      properties:
        eventCategory:
          type: string
          description: The name of the eventCategory.
        objectTypes:
          type: array
          description: "A collection of distinct object types, including their child\
            \ event actions."
          items:
            $ref: '#/components/schemas/object-type'
        additions:
          type: object
          additionalProperties:
            type: string
      x-java-type: com.backbase.audit.rest.spec.v3.model.EventCategory
    legal-entity:
      required:
      - externalId
      - id
      - name
      - type
      type: object
      properties:
        id:
          maxLength: 36
          minLength: 1
          type: string
          description: The internal ID of the legal entity.
        externalId:
          maxLength: 64
          minLength: 1
          type: string
          description: The external ID of the legal entity.
        name:
          maxLength: 128
          minLength: 1
          type: string
          description: The name of the legal entity.
        type:
          $ref: '#/components/schemas/Type'
        additions:
          type: object
          additionalProperties:
            type: string
      x-java-type: com.backbase.audit.rest.spec.v3.model.LegalEntity
    Status:
      type: string
      description: The status of the event.
      enum:
      - Initiated
      - Successful
      - Failed
    object-type:
      type: object
      properties:
        objectType:
          type: string
          description: The name of the object type.
        eventActions:
          type: array
          description: A collection of distinct eventActions.
          items:
            type: string
            description: The name of the eventAction.
        additions:
          type: object
          additionalProperties:
            type: string
      x-java-type: com.backbase.audit.rest.spec.v3.model.ObjectType
    Type:
      type: string
      description: Type of the legal entity. Bank or Customer.
      enum:
      - CUSTOMER
      - BANK
  examples:
    GetAuditLogMessages:
      value:
        totalCount: 3
        auditMessages:
        - timestamp: 2020-09-24T13:28:57.896Z
          eventCategory: Access Control
          objectType: Data Group
          eventAction: Update
          eventDescription: "JBloggs changed Account Group 'MyAccountGroup'. Added\
            \ account: ABC123"
          status: Initiated
          username: JBloggs
          userId: 8ad6818b682e6e7201682f853a8f0002
          messageSetId: 8ab2b95874742cc201748cf9a8a106768305
          eventMetaData:
            AccountGroup Name: MyAccountGroup
            Account Added: ABC123
        - timestamp: 2020-09-24T13:29:01.549Z
          eventCategory: Access Control
          objectType: Data Group
          eventAction: Update
          eventDescription: "JBloggs changed Account Group 'MyAccountGroup'. Added\
            \ account: ABC123"
          status: Successful
          ipAddress: 86.3.123.123
          username: JBloggs
          userId: 8ad6818b682e6e7201682f853a8f0002
          legalEntityId: 8ad6818b682e6f3c01682f8536c60198
          serviceAgreementId: 8ad6818b682e6f3c01682f85381a0199
          messageSetId: 8ab2b95874742cc201748cf9a8a106768305
          schemaVersion: 1.2.3
          userAgent: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like\
            \ Gecko) Chrome/77.0.3865.90 Safari/537.36"
          eventMetaData:
            AccountGroup Name: MyAccountGroup
            Account Added: ABC123
        - timestamp: 2020-09-24T13:29:01.549Z
          eventCategory: Access Control
          objectType: Data Group
          eventAction: Update
          eventDescription: "JBloggs changed Account Group 'MyAccountGroup'. Added\
            \ account: ABC123"
          status: Failed
          ipAddress: 86.3.123.123
          username: JBloggs
          userId: 8ad6818b682e6e7201682f853a8f0002
          legalEntityId: 8ad6818b682e6f3c01682f8536c60198
          serviceAgreementId: 8ad6818b682e6f3c01682f85381a0199
          messageSetId: 8ab2b95874742cc201748cf9a8a106768305
          schemaVersion: 1.2.3
          userAgent: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like\
            \ Gecko) Chrome/77.0.3865.90 Safari/537.36"
          error: "Cannot update, account 'ABC123' does not exist."
          eventMetaData:
            AccountGroup Name: MyAccountGroup
            Account Added: ABC123
    GetAuditLogMessagesCsv:
      value: "\"timestamp\",\"eventCategory\",\"objectType\",\"eventAction\",\"eventDescription\"\
        ,\"status\",\"username\",\"userId\",\"messageSetId\",\"eventMetaData__AccountGroup\
        \ Name\",\"eventMetaData__Account Added\",\"ipAddress\",\"legalEntityId\"\
        ,\"serviceAgreementId\",\"schemaVersion\",\"userAgent\",\"error\"\n\"2020-09-24T13:28:57.896Z\"\
        ,\"Access Control\",\"Data Group\",\"Update\",\"JBloggs changed Account Group\
        \ 'MyAccountGroup'. Added account: ABC123\",\"Initiated\",\"JBloggs\",\"8ad6818b682e6e7201682f853a8f0002\"\
        ,\"8ab2b95874742cc201748cf9a8a106768305\",\"MyAccountGroup\",\"ABC123\",\"\
        \",\"\",\"\",\"\",\"\",\"\"\n\"2020-09-24T13:29:01.549Z\",\"Access Control\"\
        ,\"Data Group\",\"Update\",\"JBloggs changed Account Group 'MyAccountGroup'.\
        \ Added account: ABC123\",\"Successful\",\"JBloggs\",\"8ad6818b682e6e7201682f853a8f0002\"\
        ,\"8ab2b95874742cc201748cf9a8a106768305\",\"MyAccountGroup\",\"ABC123\",\"\
        86.3.123.123\",\"8ad6818b682e6f3c01682f8536c60198\",\"8ad6818b682e6f3c01682f85381a0199\"\
        ,\"1.2.3\",\"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like\
        \ Gecko) Chrome/77.0.3865.90 Safari/537.36\",\"\"\n\"2020-09-24T13:29:01.549Z\"\
        ,\"Access Control\",\"Data Group\",\"Update\",\"JBloggs changed Account Group\
        \ 'MyAccountGroup'. Added account: ABC123\",\"Failed\",\"JBloggs\",\"8ad6818b682e6e7201682f853a8f0002\"\
        ,\"8ab2b95874742cc201748cf9a8a106768305\",\"MyAccountGroup\",\"ABC123\",\"\
        86.3.123.123\",\"8ad6818b682e6f3c01682f8536c60198\",\"8ad6818b682e6f3c01682f85381a0199\"\
        ,\"1.2.3\",\"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like\
        \ Gecko) Chrome/77.0.3865.90 Safari/537.36\",\"Cannot update, account 'ABC123'\
        \ does not exist.\""
    GetStartAsyncExport:
      value:
        exportId: a892e1e0-b62c-4e2b-bd24-9e2ad9786ae1
    GetAuditEventCategories:
      value:
        eventCategories:
        - eventCategory: Access Control
          objectTypes:
          - objectType: Data Group
            eventActions:
            - Create
            - Update
            - Delete
        - eventCategory: Audit
          objectTypes:
          - objectType: Audit Log
            eventActions:
            - Publish
            - Read
            - Export
    GetLegalEntities:
      value:
      - id: c7a382786d514262b75ab9531b749a2b
        externalId: Bank
        name: My Bank
        type: BANK
      - id: 0f6d14f40e064deeaee351befd53d3e7
        externalId: Backbase Cardiff
        name: Backbase Cardiff
        type: CUSTOMER
    openapi-lib-bad-request-validation-error:
      summary: openapi-lib-bad-request-validation-error
      value:
        message: Bad Request
        errors:
        - message: "Value Exceeded. Must be between {min} and {max}."
          key: common.api.shoesize
          context:
            max: "50"
            min: "1"
    openapi-lib-forbidden-error:
      summary: openapi-lib-forbidden-error
      value:
        message: Access to requested resource denied.
        errors:
        - message: "Resource access denied due to an insufficient user quota of {quota}."
          key: common.api.quota
          context:
            quota: someQuota
    openapi-lib-internal-server-error:
      summary: openapi-lib-internal-server-error
      value:
        message: Description of error
    openapi-lib-too-many-requests-error:
      summary: openapi-lib-too-many-requests-error
      value:
        message: Too many requests for Async export.
  headers:
    TotalCount:
      description: Total count of all audit messages that would match the query if
        page size were not an issue.
      schema:
        type: integer
