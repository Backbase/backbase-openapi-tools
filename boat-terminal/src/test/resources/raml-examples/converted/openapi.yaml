openapi: 3.0.3
info:
  title: Wallet Test Client API
  description: No description available
  version: v1
servers:
- url: /serviceName/
  description: The server
tags:
- name: wallet test client api
paths:
  /client-api/v1/wallet/paymentcards:
    summary: Payment Cards
    description: No description available
    get:
      tags:
      - wallet
      summary: "Returns available payment card details for user, optionally filtered\
        \ by nameOnCard."
      description: "Returns available payment card details for user, optionally filtered\
        \ by nameOnCard"
      operationId: getPaymentCards
      parameters:
      - name: nameOnCard
        in: query
        description: "Filter by the cardholder's name (case-insensitive), can be the\
          \ first one or more characters of one of the words/names"
        required: false
        schema:
          type: string
          example: null
        examples:
          example:
            summary: example
            value: Smi
      - name: dateTimeOnly
        in: query
        description: Creation date in datetime-only format
        required: false
        schema:
          type: string
          format: date-time
          example: null
        examples:
          example:
            summary: example
            value: 2017-10-04T14:54:36
      - name: dateTime
        in: query
        description: Creation date in Zoned RFC3339 Date-time format
        required: false
        schema:
          type: string
          format: date-time
          example: null
        examples:
          example:
            summary: example
            value: 2017-10-04T14:54:36Z
      - name: dateTime2616
        in: query
        description: Zoned RFC2616 Date-time param example
        required: false
        schema:
          type: string
          format: date-time
          example: null
        examples:
          example:
            summary: example
            value: "Wed, 4 Jul 2001 12:08:56 PDT"
      - name: date
        in: query
        description: Date-only param example
        required: false
        schema:
          type: string
          format: date
          example: null
        examples:
          example:
            summary: example
            value: 2017-10-04
      - name: time
        in: query
        description: time-only param example
        required: false
        schema:
          type: string
          format: date-time
          example: null
        examples:
          example:
            summary: example
            value: 14:54:36
      - name: orderBy
        in: query
        description: |
          Order by field: nameOnCard
        required: false
        schema:
          type: string
          example: null
        examples:
          example:
            summary: example
      - name: direction
        in: query
        description: Direction
        required: false
        schema:
          type: string
          example: null
          enum:
          - ASC
          - DESC
          default: DESC
        examples:
          example:
            summary: example
      responses:
        "200":
          description: No description available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCards'
              examples:
                example:
                  value:
                  - id: a5b0fe7d-c4dd-40a7-bd80-dfc7869327e1
                    pan: "5434111122223333"
                    cvc: "123"
                    startDate: "0116"
                    expiryDate: "1219"
                    nameOnCard: Mr Timmy Tester
                    creationDate: 2011-05-30T12:13:14+03:00
                    balance:
                      amount: "2001"
                      currencyCode: EUR
                    apr: 12.75
                  - id: d593c212-70ad-41a6-a547-d5d9232414cb
                    pan: "5434111122224444"
                    cvc: "101"
                    startDate: "0216"
                    expiryDate: "0120"
                    nameOnCard: Mr Timmothy Tester
                    creationDate: 2011-05-30T12:13:14+03:00
                    balance:
                      amount: "4.4399999999999995"
                      currencyCode: GBP
                    apr: 12.75
                  - id: 9635966b-28e9-4479-8121-bb7bc9beeb62
                    pan: "5434121212121212"
                    cvc: "121"
                    startDate: "0115"
                    expiryDate: "1218"
                    nameOnCard: Mr Timmy Tester
                    creationDate: 2011-05-30T12:13:14+03:00
                    balance:
                      amount: "1981"
                      currencyCode: EUR
                    apr: 12.75
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                example:
                  value:
                    message: Bad Request
                    errors:
                    - message: "Value Exceeded. Must be between {min} and {max}."
                      key: common.api.shoesize
                      context:
                        max: "50"
                        min: "1"
        "406":
          description: NotAcceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAcceptableError'
              examples:
                example:
                  value:
                    message: Could not find acceptable representation
                    supportedMediaTypes:
                    - application/json
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              examples:
                example:
                  value:
                    message: Description of error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
              examples:
                example:
                  value:
                    message: Access to requested resource denied.
                    errors:
                    - message: "Resource access denied due to an insufficient user\
                        \ quota of {quota}."
                      key: common.api.quota
                      context:
                        quota: someQuota
        "415":
          description: UnsupportedMediaType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedMediaTypeError'
              examples:
                example:
                  value:
                    message: Unsupported media type.
                    errors:
                    - message: "The request entity has a media type {mediaType} which\
                        \ the resource does not support."
                      key: common.api.mediaType
                      context:
                        mediaType: application/javascript
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
              examples:
                example:
                  value:
                    message: Resource not found.
                    errors:
                    - message: "Unable to find the resource requested resource: {resource}."
                      key: common.api.resource
                      context:
                        resource: aResource
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAltError'
              examples:
                example:
                  value:
                    message: Access to requested resource denied.
                    errors:
                    - message: Resource access denied due to invalid credentials.
                      key: common.api.token
                      context:
                        accessToken: expired
      x-bb-access-control-resource: WALLET
      x-bb-access-control-function: MANAGE_PAYMENT_CARDS
      x-bb-access-control-privilege: READ_PAYMENT_CARD
    post:
      tags:
      - wallet
      summary: Adds a payment card to the user's wallet.
      description: Adds a payment card to the user's wallet
      operationId: postPaymentCards
      parameters:
      - name: X-Request-Id
        in: header
        description: Correlates HTTP requests between a client and server.
        required: false
        schema:
          type: string
          example: null
        examples:
          example:
            summary: example
            value: f058ebd6-02f7-4d3f-942e-904344e8cde5
      requestBody:
        description: Adds a payment card to the user's wallet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCard'
            examples:
              example:
                value:
                  id: a5b0fe7d-c4dd-40a7-bd80-dfc7869327e1
                  pan: "5434111122223333"
                  cvc: "123"
                  startDate: "0116"
                  expiryDate: "1219"
                  nameOnCard: Mr Timmy Tester
                  creationDate: 2011-05-30T12:13:14+03:00
                  balance:
                    amount: "1000"
                    currencyCode: EUR
                  apr: 12.75
      responses:
        "201":
          description: request to create payment card accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCardsPostResponseBody'
              examples:
                example:
                  value:
                    id: a5b0fe7d-c4dd-40a7-bd80-dfc7869327e1
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                example:
                  value:
                    message: Bad Request
                    errors:
                    - message: "Value Exceeded. Must be between {min} and {max}."
                      key: common.api.shoesize
                      context:
                        max: "50"
                        min: "1"
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              examples:
                example:
                  value:
                    message: Description of error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
              examples:
                example:
                  value:
                    message: Access to requested resource denied.
                    errors:
                    - message: "Resource access denied due to an insufficient user\
                        \ quota of {quota}."
                      key: common.api.quota
                      context:
                        quota: someQuota
        "415":
          description: UnsupportedMediaType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedMediaTypeError'
              examples:
                example:
                  value:
                    message: Unsupported media type.
                    errors:
                    - message: "The request entity has a media type {mediaType} which\
                        \ the resource does not support."
                      key: common.api.mediaType
                      context:
                        mediaType: application/javascript
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
              examples:
                example:
                  value:
                    message: Resource not found.
                    errors:
                    - message: "Unable to find the resource requested resource: {resource}."
                      key: common.api.resource
                      context:
                        resource: aResource
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAltError'
              examples:
                example:
                  value:
                    message: Access to requested resource denied.
                    errors:
                    - message: Resource access denied due to invalid credentials.
                      key: common.api.token
                      context:
                        accessToken: expired
      x-bb-access-control-resource: WALLET
      x-bb-access-control-function: MANAGE_PAYMENT_CARDS
      x-bb-access-control-privilege: WRITE_PAYMENT_CARD
  /client-api/v1/wallet/paymentcards/{cardId}:
    summary: Payment Card
    description: No description available
    get:
      tags:
      - wallet
      summary: Returns details of a specific payment card.
      description: Returns details of a specific payment card
      operationId: getPaymentCard
      responses:
        "200":
          description: No description available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCard'
              examples:
                example:
                  value:
                    id: a5b0fe7d-c4dd-40a7-bd80-dfc7869327e1
                    pan: "5434111122223333"
                    cvc: "123"
                    startDate: "0116"
                    expiryDate: "1219"
                    nameOnCard: Mr Timmy Tester
                    creationDate: 2011-05-30T12:13:14+03:00
                    balance:
                      amount: "1000"
                      currencyCode: EUR
                    apr: 12.75
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                example:
                  value:
                    message: Bad Request
                    errors:
                    - message: "Value Exceeded. Must be between {min} and {max}."
                      key: common.api.shoesize
                      context:
                        max: "50"
                        min: "1"
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              examples:
                example:
                  value:
                    message: Description of error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
              examples:
                example:
                  value:
                    message: Access to requested resource denied.
                    errors:
                    - message: "Resource access denied due to an insufficient user\
                        \ quota of {quota}."
                      key: common.api.quota
                      context:
                        quota: someQuota
        "415":
          description: UnsupportedMediaType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedMediaTypeError'
              examples:
                example:
                  value:
                    message: Unsupported media type.
                    errors:
                    - message: "The request entity has a media type {mediaType} which\
                        \ the resource does not support."
                      key: common.api.mediaType
                      context:
                        mediaType: application/javascript
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
              examples:
                example:
                  value:
                    message: Resource not found.
                    errors:
                    - message: "Unable to find the resource requested resource: {resource}."
                      key: common.api.resource
                      context:
                        resource: aResource
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAltError'
              examples:
                example:
                  value:
                    message: Access to requested resource denied.
                    errors:
                    - message: Resource access denied due to invalid credentials.
                      key: common.api.token
                      context:
                        accessToken: expired
      x-bb-access-control-resource: WALLET
      x-bb-access-control-function: MANAGE_PAYMENT_CARDS
      x-bb-access-control-privilege: READ_PAYMENT_CARD
    delete:
      tags:
      - wallet
      summary: Deletes a payment card with a given id.
      description: Deletes a payment card with a given id
      operationId: deletePaymentCard
      responses:
        "204":
          description: Payment card is succesfully deleted
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                example:
                  value:
                    message: Bad Request
                    errors:
                    - message: "Value Exceeded. Must be between {min} and {max}."
                      key: common.api.shoesize
                      context:
                        max: "50"
                        min: "1"
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              examples:
                example:
                  value:
                    message: Description of error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
              examples:
                example:
                  value:
                    message: Access to requested resource denied.
                    errors:
                    - message: "Resource access denied due to an insufficient user\
                        \ quota of {quota}."
                      key: common.api.quota
                      context:
                        quota: someQuota
        "415":
          description: UnsupportedMediaType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedMediaTypeError'
              examples:
                example:
                  value:
                    message: Unsupported media type.
                    errors:
                    - message: "The request entity has a media type {mediaType} which\
                        \ the resource does not support."
                      key: common.api.mediaType
                      context:
                        mediaType: application/javascript
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
              examples:
                example:
                  value:
                    message: Resource not found.
                    errors:
                    - message: "Unable to find the resource requested resource: {resource}."
                      key: common.api.resource
                      context:
                        resource: aResource
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAltError'
              examples:
                example:
                  value:
                    message: Access to requested resource denied.
                    errors:
                    - message: Resource access denied due to invalid credentials.
                      key: common.api.token
                      context:
                        accessToken: expired
      x-bb-access-control-resource: WALLET
      x-bb-access-control-function: MANAGE_PAYMENT_CARDS
      x-bb-access-control-privilege: DELETE_PAYMENT_CARD
    parameters:
    - name: cardId
      in: path
      description: No description available
      required: true
      schema:
        type: string
        example: null
      examples:
        example:
          summary: example
  /client-api/v1/bbt/build-info:
    summary: /build-info
    description: No description available
    get:
      tags:
      - bbt
      summary: Build Information.
      description: Build Information
      operationId: getBuildinfo
      responses:
        "200":
          description: No description available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BbtBuild-infoGetGetResponseBody'
              examples:
                example:
                  value:
                    build-info:
                      build.version: 1.1.111-SNAPSHOT
  /client-api/v1/patch:
    summary: patch
    description: PATCH endpoint for test operations
    patch:
      tags:
      - patch
      summary: patch
      description: Patch Test
      operationId: patchpatch
      parameters:
      - name: X-Request-Id
        in: header
        description: Correlates HTTP requests between a client and server.
        required: false
        schema:
          type: string
          example: null
        examples:
          example:
            summary: example
            value: f058ebd6-02f7-4d3f-942e-904344e8cde5
      responses:
        "200":
          description: No description available
          content: {}
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                example:
                  value:
                    message: Bad Request
                    errors:
                    - message: "Value Exceeded. Must be between {min} and {max}."
                      key: common.api.shoesize
                      context:
                        max: "50"
                        min: "1"
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              examples:
                example:
                  value:
                    message: Description of error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
              examples:
                example:
                  value:
                    message: Access to requested resource denied.
                    errors:
                    - message: "Resource access denied due to an insufficient user\
                        \ quota of {quota}."
                      key: common.api.quota
                      context:
                        quota: someQuota
        "415":
          description: UnsupportedMediaType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedMediaTypeError'
              examples:
                example:
                  value:
                    message: Unsupported media type.
                    errors:
                    - message: "The request entity has a media type {mediaType} which\
                        \ the resource does not support."
                      key: common.api.mediaType
                      context:
                        mediaType: application/javascript
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
              examples:
                example:
                  value:
                    message: Resource not found.
                    errors:
                    - message: "Unable to find the resource requested resource: {resource}."
                      key: common.api.resource
                      context:
                        resource: aResource
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAltError'
              examples:
                example:
                  value:
                    message: Access to requested resource denied.
                    errors:
                    - message: Resource access denied due to invalid credentials.
                      key: common.api.token
                      context:
                        accessToken: expired
  /client-api/v1/test/required-boolean-query-param:
    summary: required boolean query param
    description: arbitrary tests
    get:
      tags:
      - test
      description: No description available
      operationId: getrequiredBooleanQueryParam
      parameters:
      - name: bool
        in: query
        description: Required boolean parameter with no default value
        required: true
        schema:
          type: boolean
          example: null
        examples:
          example:
            summary: example
            value: false
      responses:
        "200":
          description: No description available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequiredbooleanqueryparamGetResponseBody'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                example:
                  value:
                    message: Bad Request
                    errors:
                    - message: "Value Exceeded. Must be between {min} and {max}."
                      key: common.api.shoesize
                      context:
                        max: "50"
                        min: "1"
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              examples:
                example:
                  value:
                    message: Description of error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
              examples:
                example:
                  value:
                    message: Access to requested resource denied.
                    errors:
                    - message: "Resource access denied due to an insufficient user\
                        \ quota of {quota}."
                      key: common.api.quota
                      context:
                        quota: someQuota
        "415":
          description: UnsupportedMediaType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedMediaTypeError'
              examples:
                example:
                  value:
                    message: Unsupported media type.
                    errors:
                    - message: "The request entity has a media type {mediaType} which\
                        \ the resource does not support."
                      key: common.api.mediaType
                      context:
                        mediaType: application/javascript
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
              examples:
                example:
                  value:
                    message: Resource not found.
                    errors:
                    - message: "Unable to find the resource requested resource: {resource}."
                      key: common.api.resource
                      context:
                        resource: aResource
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAltError'
              examples:
                example:
                  value:
                    message: Access to requested resource denied.
                    errors:
                    - message: Resource access denied due to invalid credentials.
                      key: common.api.token
                      context:
                        accessToken: expired
  /client-api/v1/test/values:
    summary: Test Values
    description: Test Values
    get:
      tags:
      - test
      description: No description available
      operationId: getTestValues
      responses:
        "200":
          description: No description available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestValuesGetResponseBody'
              examples:
                example:
                  value:
                    message: a5b0fe7d-c4dd-40a7-bd80-dfc7869327e1
                    number: "102.4"
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              examples:
                example:
                  value:
                    message: Description of error
  /client-api/v1/test/headers:
    summary: Test header propagation
    description: Test header propagation
    get:
      tags:
      - test
      description: No description available
      operationId: getTestHeaderPropagation
      parameters:
      - name: addHops
        in: query
        description: number of additional hops to perform
        required: false
        schema:
          type: integer
          format: int32
          example: null
        examples:
          example:
            summary: example
      responses:
        "200":
          description: No description available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestHeadersResponseBody'
              examples:
                example:
                  value:
                    requests:
                    - name: building-blocks-test-wallet-presentation-service
                      url: /client-api/v1/test/headers
                      headers:
                        correlation-id:
                        - 2ed475b714a3945a
                        accept:
                        - application/json
                        x-bbt-test:
                        - X-BBT-contentVal2
                        connection:
                        - keep-alive
                    - name: building-blocks-test-wallet-pandp-service
                      url: /service-api/v1/test/headers
                      headers:
                        authorization:
                        - Bearer eyJh
                        accept:
                        - "application/xml, text/xml, application/json, application/*+xml,\
                          \ application/*+json"
                        content-type:
                        - application/json
                        x-cxt-user-token:
                        - Bearer ey
                        x-cxt-remote-user:
                        - admin
                        x-cxt-requestuuid:
                        - 72002652-131a-4f28-bd00-16b8080932f5
                        correlation-id:
                        - 2ed475b714a3945a
                        x-bbt-test:
                        - X-BBT-contentVal2
                    - name: building-blocks-test-wallet-pandp-service
                      url: /service-api/v1/test/headers
                      headers:
                        authorization:
                        - Bearer eyJh
                        accept:
                        - "application/xml, text/xml, application/json, application/*+xml,\
                          \ application/*+json"
                        content-type:
                        - application/json
                        x-cxt-user-token:
                        - Bearer ey
                        x-cxt-remote-user:
                        - admin
                        x-cxt-requestuuid:
                        - 72002652-131a-4f28-bd00-16b8080932f5
                        correlation-id:
                        - 2ed475b714a3945a
                        x-bbt-test:
                        - X-BBT-contentVal2
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              examples:
                example:
                  value:
                    message: Description of error
  /client-api/v1/test/date-query-params:
    summary: dateQueryParam
    description: |
      Tests for date/time query parameters in service-apis.  Sends the same query parameters to the equivalent endpoint
      in the pandp service which echoes the given values back in the response body.  Values echoed by the pandp service
      are then returned in the response to this request.
    get:
      tags:
      - test
      description: No description available
      operationId: getdateQueryParam
      parameters:
      - name: dateTimeOnly
        in: query
        description: Creation date in datetime-only format
        required: false
        schema:
          type: string
          format: date-time
          example: null
        examples:
          example:
            summary: example
            value: 2017-10-04T14:54:36
      - name: dateTime
        in: query
        description: Creation date in Zoned RFC3339 Date-time format
        required: false
        schema:
          type: string
          format: date-time
          example: null
        examples:
          example:
            summary: example
            value: 2017-10-04T14:54:36Z
      - name: dateTime2616
        in: query
        description: Zoned RFC2616 Date-time param example
        required: false
        schema:
          type: string
          format: date-time
          example: null
        examples:
          example:
            summary: example
            value: "Wed, 4 Jul 2001 12:08:56 PDT"
      - name: date
        in: query
        description: Date-only param example
        required: false
        schema:
          type: string
          format: date
          example: null
        examples:
          example:
            summary: example
            value: 2017-10-04
      - name: time
        in: query
        description: time-only param example
        required: false
        schema:
          type: string
          format: date-time
          example: null
        examples:
          example:
            summary: example
            value: 14:54:36
      responses:
        "200":
          description: No description available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DateQueryParamGetResponseBody'
components:
  schemas:
    BadRequestError:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: Any further information
          example: null
        errors:
          type: array
          description: Detailed error information
          example: null
          items:
            $ref: '#/components/schemas/ErrorItem'
      example: null
    BbAccessControl:
      required:
      - function
      - privilege
      - resource
      type: object
      properties:
        resource:
          type: string
          description: "Resource being protected, e.g. 'User'"
          example: null
        function:
          type: string
          description: "Business function, e.g. 'Manage Users'"
          example: null
        privilege:
          type: string
          description: "The privilege required, e.g. 'view'"
          example: null
      example: null
    BbApiDeprecation:
      required:
      - deprecatedFromVersion
      - description
      - reason
      - removedFromVersion
      type: object
      properties:
        deprecatedFromVersion:
          type: string
          description: Version of the product from which the endpoint has been deprecated
            and should no longer be used
          example: null
          deprecated: true
        removedFromVersion:
          type: string
          description: Version of the product from which the API endpoint will be
            removed
          example: null
        reason:
          type: string
          description: The reason the API endpoint was deprecated
          example: null
          deprecated: true
        description:
          type: string
          description: "Any further information, e.g. migration information"
          example: null
      example: null
    BbtBuild-infoGetGetResponseBody:
      type: object
      properties:
        build-info:
          type: object
          example: null
      example:
        build-info:
          build.version: 1.1.111-SNAPSHOT
    BbtbuildInfogetgetresponsebody:
      type: object
      properties:
        build-info:
          type: object
          example: null
      example:
        build-info:
          build.version: 1.1.111-SNAPSHOT
    Currency:
      title: Monetary Amount
      required:
      - amount
      - currencyCode
      type: object
      properties:
        amount:
          type: string
          description: The amount in the specified currency
          example: null
        currencyCode:
          pattern: "^[A-Z]{3}$"
          type: string
          description: The alpha-3 code (complying with ISO 4217) of the currency
            that qualifies the amount
          example: null
      description: Schema defining monetary amount in given currency.
      example: null
    DateQueryParamGetResponseBody:
      type: object
      properties:
        dateTimeOnly:
          type: string
          example: null
        dateTimeOnlyParsedValue:
          type: string
          example: null
        dateTime:
          type: string
          example: null
        dateTimeParsedValue:
          type: string
          example: null
        dateTime2616:
          type: string
          example: null
        dateTime2616ParsedValue:
          type: string
          example: null
        date:
          type: string
          example: null
        dateParsedValue:
          type: string
          example: null
        time:
          type: string
          example: null
        timeParsedValue:
          type: string
          example: null
        formatDateTime:
          type: string
          description: "The dateTime parameter formatted as 'date-time', java.util.Date\
            \ or java.time.ZoneDateTime"
          format: date-time
          example: null
        formatDate:
          type: string
          description: "The date parameter formatted as 'date', String or java.time.LocalDate"
          format: date
          example: null
        formatTime:
          type: string
          description: "The time parameter formatted as 'time', String or java.time.LocalTime"
          example: null
        formatUtcMillisec:
          type: string
          description: "The dateTime parameter formatted as 'date', long"
          example: null
      example: null
    ErrorItem:
      type: object
      properties:
        message:
          type: string
          description: Default Message. Any further information.
          example: null
        key:
          type: string
          description: "{capability-name}.api.{api-key-name}. For generated validation\
            \ errors this is the path in the document the error resolves to. e.g.\
            \ object name + '.' + field"
          example: null
        context:
          type: object
          description: Context can be anything used to construct localised messages.
          example: null
      description: A validation error
      example: null
    ForbiddenError:
      type: object
      properties:
        message:
          type: string
          description: Any further information
          example: null
        errors:
          type: array
          description: Detailed error information
          example: null
          items:
            $ref: '#/components/schemas/ErrorItem'
      example: null
    InternalServerError:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: Further Information
          example: null
      description: Represents HTTP 500 Internal Server Error
      example: null
    NotAcceptableError:
      type: object
      properties:
        message:
          type: string
          example: null
        supportedMediaTypes:
          type: array
          description: List of supported media types for this endpoint
          example: null
          items:
            type: string
            example: null
      example: null
    NotFoundError:
      type: object
      properties:
        message:
          type: string
          description: Any further information
          example: null
        errors:
          type: array
          description: Detailed error information
          example: null
          items:
            $ref: '#/components/schemas/ErrorItem'
      example: null
    ObjectWrappingException:
      type: object
      properties:
        message:
          type: string
          example: null
        data:
          type: object
          example: null
      example: null
    PaymentCard:
      required:
      - cvc
      - expiryDate
      - id
      - nameOnCard
      - pan
      - startDate
      type: object
      properties:
        id:
          type: string
          example: null
        pan:
          maxLength: 19
          type: string
          description: "Must be sixteen digits, optionally in blocks of 4 separated\
            \ by a dash"
          example: null
        cvc:
          maxLength: 3
          minLength: 3
          type: string
          description: Card Verification Code
          example: null
        startDate:
          pattern: "^(0[1-9]|1[0-2])/?([0-9]{4}|[0-9]{2})$"
          type: string
          description: "Must be in one of these four formats: MM/YY MMYY MMYYYY MM/YYYY"
          example: null
        expiryDate:
          pattern: "^(0[1-9]|1[0-2])/?([0-9]{4}|[0-9]{2})$"
          type: string
          description: "Must be in one of these four formats: MM/YY MMYY MMYYYY MM/YYYY"
          example: null
        nameOnCard:
          type: string
          example: null
        creationDate:
          type: string
          format: date-time
          example: null
        balance:
          $ref: '#/components/schemas/Currency'
        apr:
          type: number
          example: null
        cardtype:
          type: string
          example: null
          enum:
          - CREDIT
          - DEBIT
          - PREPAID
      example: null
    PaymentCards:
      type: array
      example: null
      items:
        $ref: '#/components/schemas/PaymentCard'
    PaymentCardsPostResponseBody:
      type: object
      properties:
        id:
          type: string
          example: null
      example:
        id: a5b0fe7d-c4dd-40a7-bd80-dfc7869327e1
    RequiredbooleanqueryparamGetResponseBody:
      type: object
      properties:
        message:
          type: string
          example: null
      example: null
    TestHeadersResponseBody:
      type: object
      properties:
        requests:
          type: array
          example: null
          items:
            type: object
            properties:
              name:
                type: string
                example: null
              url:
                type: string
                example: null
              headers:
                type: object
                example: null
            example: null
      example: null
    TestValuesGetResponseBody:
      type: object
      properties:
        message:
          type: string
          example: null
        number:
          type: string
          example: null
      example:
        message: a5b0fe7d-c4dd-40a7-bd80-dfc7869327e1
        number: "102.4"
    UnauthorizedAltError:
      type: object
      properties:
        message:
          type: string
          description: Any further information
          example: null
        errors:
          type: array
          description: Detailed error information
          example: null
          items:
            $ref: '#/components/schemas/ErrorItem'
      example: null
    UnauthorizedError:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          example: null
      example: null
    UnsupportedMediaTypeError:
      type: object
      properties:
        message:
          type: string
          description: Any further information
          example: null
        errors:
          type: array
          description: Detailed error information
          example: null
          items:
            $ref: '#/components/schemas/ErrorItem'
      example: null
