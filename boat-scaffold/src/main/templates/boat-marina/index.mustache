<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>{{{appName}}}</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta charset="UTF-8" />

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css"
          integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">
    <script
            src="https://code.jquery.com/jquery-3.6.0.slim.min.js"
            integrity="sha256-u7e5khyithlIdTpu22PHhENmPcRdFiHRjhAuHcs05RI="
            crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx"
            crossorigin="anonymous"></script>


    <style>
        @import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');
    </style>
    <link rel="stylesheet" href="css/jsonschemaview.css"/>
    <link rel="stylesheet" href="css/jsontreeviewer.css"/>
    <link rel="stylesheet" href="css/prettify.css"/>
    <link rel="stylesheet" href="css/response.css"/>
    <link rel="stylesheet" href="css/styles.css"/>

</head>
<body>
  {{>sidenav}}
  <div id="content">
    <div id="project">
        <h1>{{{appName}}}</h1>
          {{#version}}
              <div class="app-desc">Version: {{{version}}}</div>
          {{/version}}
    </div>
    <div id="header">
      <div id="api-_">
        <div id="app-description" class="app-desc">
            {{{appDescription}}}
        </div>
      </div>
    </div>
    <div id="sections">
      {{#apiInfo}}
        {{#apis}}
          {{#operations}}
            <section id="api-{{baseName}}">
              <h1>{{baseName}}</h1>
              {{#operation}}
                <div id="api-{{baseName}}-{{nickname}}">
                  <article id="api-{{baseName}}-{{nickname}}-0" data-group="User" data-name="{{nickname}}" data-version="0">
                          <h1>{{#summary}}{{.}}{{/summary}}{{^summary}}{{nickname}}{{/summary}}{{#isDeprecated}}<span class="deprecated">Deprecated</span> {{/isDeprecated}}</h1>
                          {{#description}}<p>{{description}}</p>{{/description}}
                    <p class="marked">{{notes}}</p>
                      <br/>
                      {{#vendorExtensions}}
                          <div class="secured-by">
                              <h2>Secured by Backbase Access Control</h2>
                              {{#x-BbAccessControl-resource}}<pre><b>Resource:</b> {{.}}</pre>{{/x-BbAccessControl-resource}}
                              {{#x-BbAccessControl-function}}<pre><b>Function:</b> {{.}}</pre>{{/x-BbAccessControl-function}}
                              {{#x-BbAccessControl-privilege}}<pre><b>Privilege:</b> {{.}}</pre>{{/x-BbAccessControl-privilege}}
                          </div>
                      {{/vendorExtensions}}
                      <pre class="prettyprint language-html prettyprinted"><code><span class="pln"><span  class="http-method" data-type="{{httpMethod}}">{{httpMethod}}</span>{{path}}</span></code></pre>

                      {{#hasAuthMethods}}
                          <h2>Scopes</h2>
                          <table>
                            {{#authMethods}}{{#scopes}}
                              <tr>
                                <td>{{scope}}</td>
                                <td>{{description}}</td>
                              </tr>
                            {{/scopes}}{{/authMethods}}
                          </table>
                      {{/hasAuthMethods}}

                      {{#hasPathParams}}
                        <h2>Path parameters</h2>
                        <div class="json-schema-view">
                            {{#pathParams}}
                              {{>param}}
                            {{/pathParams}}
                        </div>
                      {{/hasPathParams}}

                      {{#hasHeaderParams}}
                        <h2>Header parameters</h2>
                        <div class="json-schema-view">
                          {{#headerParams}}
                              {{>param}}
                          {{/headerParams}}
                        </div>
                      {{/hasHeaderParams}}

                      {{#hasFormParams}}
                        <h2>Form parameters</h2>
                        <div class="json-schema-view">
                          {{#formParams}}
                              {{>param}}
                          {{/formParams}}
                        </div>
                      {{/hasFormParams}}

                      {{#hasQueryParams}}
                        <h2>Query parameters</h2>
                        <div class="json-schema-view">
                          {{#queryParams}}
                            {{>param}}
                          {{/queryParams}}
                        </div>
                      {{/hasQueryParams}}

                      {{#hasBodyParam}}
                          <h2>Request Body Schema</h2>
                          {{#bodyParams}}
                              {{>paramB}}
                          {{/bodyParams}}

                      {{/hasBodyParam}}

                      <h2>Responses</h2>
                      {{#responses}}
                       {{>response}}
                      {{/responses}}
                    </article>
                  </div>
                {{/operation}}
              </section>
            {{/operations}}
          {{/apis}}
        {{/apiInfo}}
      </div>
      <div id="example-area"></div>

{{^hideGenerationTimestamp}}
<div id="generator">
        <div class="content">
          Generated {{generatedDate}}
        </div>
      </div>
{{/hideGenerationTimestamp}}

  </div>
  <script src="js/prettify.js"></script>
  <script src="js/js_bootstrap.js"></script>
  <script src="js/marked.js"></script>
  <script>

      if (!library)
          var library = {};

      library.json = {
          replacer: function(match, pIndent, pKey, pVal, pEnd) {
              var key = '<span class=json-key>';
              var val = '<span class=json-value>';
              var str = '<span class=json-string>';
              var r = pIndent || '';
              if (pKey)
                  r = r + key + pKey.replace(/[": ]/g, '') + '</span>: ';
              if (pVal)
                  r = r + (pVal[0] == '"' ? str : val) + pVal + '</span>';
              return r + (pEnd || '');
          },
          prettyPrint: function(obj) {
              var jsonLine = /^( *)("[\w]+": )?("[^"]*"|[\w.+-]*)?([,[{])?$/mg;
              return JSON.stringify(obj, null, 3)
                      .replace(/&/g, '&amp;').replace(/\\"/g, '&quot;')
                      .replace(/</g, '&lt;').replace(/>/g, '&gt;')
                      .replace(jsonLine, library.json.replacer);
          }
      };

    $( document ).ready(function() {
      marked.setOptions({
        renderer: new marked.Renderer(),
        gfm: true,
        tables: true,
        breaks: false,
        pedantic: false,
        sanitize: false,
        smartLists: true,
        smartypants: false
      });

      var textFile = null;

      /// Function to be used to download a text json schema
      function makeTextFile(text) {

        var data = new Blob([text], {type: 'text/plain'});

        // If we are replacing a previously generated file we need to
        // manually revoke the object URL to avoid memory leaks.
        if (textFile !== null) {
          window.URL.revokeObjectURL(textFile);
        }

        textFile = window.URL.createObjectURL(data);

        var a = document.createElement("a");
        document.body.appendChild(a);
        a.style = "display: none";
        a.href = textFile;
        a.download = 'schema.txt';
        a.click();

        return textFile;
      };

      /// TODO: Implement resizing for expanding within iframe
      function callResize() {
        window.parent.postMessage('resize', "*");
      }

      function processMarked() {
        $(".marked").each(function() {
          $(this).html(marked($(this).html()));
        });
      }

      // Bootstrap Scrollspy
      $('body').scrollspy({ target: '#scrollingNav', offset: 18 });

      // Content-Scroll on Navigation click.
      $('.sidenav').find('a').on('click', function(e) {
          e.preventDefault();
          var id = $(this).attr('href');
          if ($(id).length > 0)
              $('html,body').animate({ scrollTop: parseInt($(id).offset().top) }, 400);
          window.location.hash = $(this).attr('href');
      });

      // Quickjump on Pageload to hash position.
      if(window.location.hash) {
          var id = window.location.hash;
          if ($(id).length > 0)
              $('html,body').animate({ scrollTop: parseInt($(id).offset().top) }, 0);
      }


      function initDynamic() {
        // call scrollspy refresh method
        $('body').scrollspy('refresh');
      }

      initDynamic();

      // Pre- / Code-Format
      prettyPrint();

      //Convert elements with "marked" class to markdown
      processMarked();
    });

    function findNode(id, currentNode) {
        return (Object.keys(currentNode)[0] === id) ? currentNode : findNodeInChildren(id, currentNode);
    }

    function findNodeInChildren(id, currentNode) {
        for (let prop in currentNode) {
            if (currentNode.hasOwnProperty(prop)) {
                let currentChild = currentNode[prop];
                if (id === prop) {
                    return currentChild;
                } else {
                    // Search in the current child
                    if (typeof (currentChild) === 'object') {
                        let result = findNode(id, currentChild);
                        if (result !== false) {
                            return result;
                        }
                    }
                }
            }
        }
        return false;
    }

  </script>
  <script>
    // Script section to load models into a JS Var
    var defs = {}
    {{#models}}
    {{#model}}
    defs["{{name}}"] = {{{modelJson}}};
    {{/model}}
    {{/models}}

    var requestBodies = {};
    {{#requestBodies}}
    requestBodies["name"] = {{{jsonSchema}}};
    {{/requestBodies}}

    var responses = {};
    {{#responses}}
    responses["{{code}}"] = {{{jsonSchema}}};
    {{/responses}}

    var parameters = {};
    {{#parameters}}
    parameters["{{paramName}}"] = {{{jsonSchema}}};
    {{/parameters}}


    var errs = {};
    {{#swagger.vendorExtensions.x-shared-errors}}
    {
      let err = {{{.}}};
      errs[err.errorID] = err;
    }
    {{/swagger.vendorExtensions.x-shared-errors}}
  </script>
  <script src="js/jsonformatter.js"></script>
  <script src="js/jsonschemaview.js"></script>
  <script src="js/jsonschema-ref-parser.js"></script>
  <script src="js/jsonschemamergeallof.js"></script>
  <script src="js/json_stringify_safe.js"></script>
  <script src="js/webfontloader.js"></script>
  <script src="js/jsontreeviewer.js"></script>

  <script>
  var $RefParser = JsonSchemaRefParser;
  var schemaWrapper = {
      "components": {
          "schemas" : defs,
          "responses": responses,
          "parameters": parameters,

      }};
  defsParser = new $RefParser();
  defsParser.dereference(schemaWrapper).catch(function(err) {
    console.log(err);
  });

  $(document).ready(function () {
    $('body').scrollspy({ target: '#scrollingNav', offset: 18 });

    // To handle the examples
    $('.dropdown-examples').each(function() {
      $(this).find('.example-dropdown-value:first').show();
      $('body').scrollspy('refresh');
    });

    $('.example-dropdown-select').change(function() {
      $(this).parent().parent().find('.example-dropdown-value').hide();
      $(`.dropdown-examples div${this.value}`).show();
      $('body').scrollspy('refresh');
    });

    $(".response-header-tab").click(function() {
      const id = $(this).attr('id');
      const isCollapsed = $(this).hasClass('collapsed')
      if (isCollapsed){
        $(`#${id}-content`).slideDown(200, function() { $('body').scrollspy('refresh');});
        $(this).removeClass('collapsed');
      } else {
        $(`#${id}-content`).slideUp(200, function() { $('body').scrollspy('refresh');});
        $(this).addClass('collapsed');
      }
    });

    // Turns json into jsonviewer and makes sure the buttons work
    (function() {

      var copyToClipboard = function($btn, secretInfo) {
       $btn.html("Copying..");
        var $body = document.getElementsByTagName('body')[0];
        var $tempInput = document.createElement('INPUT');
        $body.appendChild($tempInput);
        $tempInput.setAttribute('value', secretInfo)
        $tempInput.select();
        document.execCommand('copy');
        $body.removeChild($tempInput);
        $btn.html("Copied");
        setTimeout(function() { $btn.html("Copy"); }, 1000)
      }

        $(".json-viewer").each(function() {
           const data = JSON.parse($(this).text());
           $(this).empty();
           const tree = jsonTree.create(data, this);
           this.getViewerInstance = () => tree;
        });

        $('.example-dropdown-value button[data-action="collapse"]').click(function() {
            const viewer  = $(this).parent().siblings('.json-viewer')[0];
            if (viewer.getViewerInstance) viewer.getViewerInstance().collapse();
        });

        $('.example-dropdown-value button[data-action="expand"]').click(function() {
            const viewer  = $(this).parent().siblings('.json-viewer')[0];
            if (viewer.getViewerInstance) viewer.getViewerInstance().expand();
        });

        $('.example-dropdown-value button[data-action="copy"]').click(function() {
            const viewer  = $(this).parent().siblings('.json-viewer')[0];
            if (viewer.getViewerInstance){
                copyToClipboard($(this), viewer.getViewerInstance().toSourceJSON());
            }
        });

    }())
  });
  </script>
</body>
</html>


