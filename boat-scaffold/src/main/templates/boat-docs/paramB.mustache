<div id="requests-{{baseName}}-{{nickname}}-{{code}}-wrapper" style='margin-bottom: 10px;'>
    <p class="marked">{{description}}</p>

    <ul id="requests-detail-{{baseName}}-{{nickname}}-{{code}}" class="nav nav-tabs nav-tabs-examples" >
        <li class="active">
            <a data-toggle="tab" href="#requests-{{baseName}}-{{nickname}}-{{code}}-schema">Schema</a>
        </li>
        {{#examples}}
            <li class="">
                <a data-toggle="tab" href="#requests-{{baseName}}-{{nickname}}-{{code}}-example-{{name}}">{{name}}</a>
            </li>
        {{/examples}}
    </ul>
    <div class="tab-content">
        <div class="tab-pane active" id="requests-{{baseName}}-{{nickname}}-{{code}}-schema">
            <div class="exampleStyle" id="requests-{{baseName}}-{{nickname}}-{{code}}-schema-data">
                <script>
                    $(document).ready(function() {
                        var schemaWrapper = {{{jsonSchema}}};
                        var schema = findNode('schema', schemaWrapper.content).schema;

                        if (!schema) {
                            schema = schemaWrapper.schema;
                        }
                        if (schema.$ref != null) {
                            schema = defsParser.$refs.get(schema.$ref);
                            if (schema.type === 'array' && schema.items != null && schema.items.$ref != null) {
                                schema.items = defsParser.$refs.get(schema.items.$ref);


                            }
                        }else if (schema.type === 'array' && schema.items != null && schema.items.$ref != null) {
                            schema.items = defsParser.$refs.get(schema.items.$ref);
                        } else {
                            schemaWrapper.definitions = Object.assign({}, defs);
                            $RefParser.dereference(schemaWrapper).catch(function(err) {
                                console.log(err);
                            });
                        }

                        if (schema && schema.allOf) {
                            schema.allOf = schema.allOf.map( i =>  i.$ref ? defsParser.$refs.get(i.$ref) : i).filter(Boolean);
                            schema = mergeAllOf(schema,  {
                                resolvers: {
                                    defaultResolver: mergeAllOf.options.resolvers.title
                                }
                            });
                        }

                        if (schema.items && schema.items.allOf) {
                            schema.items.allOf = schema.items.allOf.map( i =>  i.$ref ? defsParser.$refs.get(i.$ref) : i).filter(Boolean);
                            schema.items = mergeAllOf(schema.items,  {
                                resolvers: {
                                    defaultResolver: mergeAllOf.options.resolvers.title
                                }
                            });
                        }

                        var view = new JSONSchemaView(schema,2,{isBodyParam: true});
                        $('#requests-{{baseName}}-{{nickname}}-{{code}}-schema-data').val(JSON.stringify(schema));
                        var result = $('#requests-{{baseName}}-{{nickname}}-{{code}}-schema');
                        result.empty();
                        result.append(view.render());
                    });
                </script>
            </div>
            <input id='requests-{{baseName}}-{{nickname}}-{{code}}-schema-data' type='hidden' value=''/>
        </div>
        {{#examples}}
            <div class="tab-pane" id="requests-{{baseName}}-{{nickname}}-{{code}}-example-{{name}}">
                <pre class="prettyprint"><code class="json">{{{prettyPrintValue}}}</code></pre>
            </div>
        {{/examples}}
    </div>

</div>
