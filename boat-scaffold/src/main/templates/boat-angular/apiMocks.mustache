import { InjectionToken } from '@angular/core';
import { CONFIG_TOKEN, {{configurationClassName}} } from '../configuration';

export interface MockData {
    token: InjectionToken<{{configurationClassName}}>,
    examples: Array<{
        urlPattern: string;
        method: string;
        responses: Array<{
            status: number;
            body?: any;
       }>;
    }>;
}

{{#operations}}
    {{#operation}}
/**
* Mocks provider for {{{basePathWithoutHost}}}{{pattern}} URL pattern
*/
export const {{classname}}{{#lambda.titlecase}}{{nickname}}{{/lambda.titlecase}}MockData: MockData = {
    token: CONFIG_TOKEN,
    examples: [{
            urlPattern: "{{{basePathWithoutHost}}}{{pattern}}",
            method: "{{#lambda.uppercase}}{{httpMethod}}{{/lambda.uppercase}}",
            responses: [
            {{#responses}}
                {{#examples}}
                    {{#isJson}}
                    {
                        status: {{{code}}},
                        body: {{{prettyPrintValue}}}
                    },
                    {{/isJson}}
                    {{^isJson}}
                        {
                        status: {{{code}}},
                        body: "{{#escapeJavascript}}{{{prettyPrintValue}}}{{/escapeJavascript}}"
                        },
                    {{/isJson}}
                {{/examples}}
                {{#hasEmptyBody}}
                    {
                    status: {{{code}}},
                    body: ""
                    },
                {{/hasEmptyBody}}
            {{/responses}}
        ]
    }]
};
    {{/operation}}
{{/operations}}

export const {{classname}}MockData: MockData = {
    token: CONFIG_TOKEN,
    examples: [{{#operations}}
        {{#operation}}
        {
            urlPattern: "{{{basePathWithoutHost}}}{{pattern}}",
            method: "{{#lambda.uppercase}}{{httpMethod}}{{/lambda.uppercase}}",
            responses: [
            {{#responses}}

            {{#examples}}
                {{#isJson}}
                {
                    status: {{{code}}},
                    body: {{{prettyPrintValue}}}
                },
                {{/isJson}}
                {{^isJson}}
                    {
                    status: {{{code}}},
                    body: "{{#escapeJavascript}}{{{prettyPrintValue}}}{{/escapeJavascript}}"
                    },
                {{/isJson}}
            {{/examples}}
            {{#hasEmptyBody}}
            {
              status: {{{code}}},
              body: ""
            },
            {{/hasEmptyBody}}
        {{/responses}}
        ]
    },
        {{/operation}}
    {{/operations}}
    ],
};


