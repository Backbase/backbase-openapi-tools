openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
servers:
  - url: http://petstore.swagger.io/v1
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
              example:
                $ref: "#/paths/~1pets/get/responses/invalid/content/application~1json/example"

        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                $ref: "#/paths/~1pets/get/responses/default/content/application~2json/example"
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      responses:
        '201':
          description: Null response
        '401':
          description: BadRequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                $ref: "#/components/examples/BadRequestError"
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                $ref: "#/components/examples/InternalServerError"
        '400':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                $ref: "#/paths/~1pets~1%7BpetId%7D/get/responses/default/content/application~1json/example"
        '202':
          description: Expected response to a valid request
          content:
            application/json:
              examples:
                example:
                  summary: This is an example referenced in a horrible path
                  value: foo
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                $ref: "#/paths/~1pets/get/responses/default/content/application~1json/example"
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
              example:
                $ref: "#/paths/~1pets/get/responses/default/content/application~1json/example"
        '400':
          description: Expected response to a valid request
          content:
            application/json:
              example:
                $ref: "#/paths/~1pets/post/responses/202/content/application~1json/examples/example"
            application/xml:
              examples:
                Inexistent:
                  $ref: "#/paths/~1pets/post/responses/202/content/application~1json/examples/theinexistentexample"
                AnotheOne:
                  $ref: "#/paths/~1pets/post/responses/202/content/application~1json/examples/example"
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/BadRequestError"
                OtherError:
                  $ref: "#/components/examples/BadRequestError"
        '404':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/BadRequestError"
                OtherError:
                  $ref: "#/components/examples/InvalidReference"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                $ref: "#/paths/~1pets/post/responses/default/content/application~1json/example"
    put:
      summary: Update pet
      operationId: updatePet
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pet"
            example:
              id: 1
              name: "Joep"
              tag: "Gun dog"
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                $ref: "#/paths/~1pets/put/responses/default/content/application~1json/example"
    patch:
      summary: Update pet
      operationId: patchPet
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to patch
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pet"
            example:
              id: 1
              name: "Joep"
              tag: "Gun dog"
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                $ref: "#/paths/~1pets/patch/responses/default/content/application~1json/example"
    delete:
      summary: Delete pet
      operationId: deletePet
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to delete
          schema:
            type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                $ref: "#/paths/~1pets/delete/responses/default/content/application~1json/example"


components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  examples:
    BadRequestError:
      summary: BadRequestError
      value:
        message: Bad Request
        errors:
          - message: "Value Exceeded. Must be between {min} and {max}."
            key: common.api.shoesize
            context:
              max: "50"
              min: "1"