openapi: 3.0.4
info:
  title: Engagement Client
  description: "Manage engagements, including event-driven engagements (formerly known\
    \ as action recipe specifications)."
  version: 1.11.0
  x-icon: supervised_user_circle
  x-deprecated: false
  x-api-dashboard-tags:
  - name: Engage
servers:
- url: http://localhost/engagement
paths:
  /client-api/v1/banner/creatives:
    get:
      tags:
      - CreativeResource
      summary: "Return a list of Creative Resources, with each item in the list mapped\
        \ to one engagement. The list is sorted by the start date of the campaign."
      description: |
        Returns a list of Creative Resources with their content and metadata.
        Note that the API can be requested by anonymous users. Therefore WAF rate limiting for the following endpoint
        need to be configured
      operationId: selectCreatives
      parameters:
      - name: projectName
        in: query
        description: |
          The name of the project is defined in the remote config.
          A project represents a set of closely related apps that are managed together by a team.
          Therefore, it serves as a high-level node in the remote-config JSON.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: appName
        in: query
        description: "The name of the app is defined in the remote config. \nYour\
          \ organization provides an app to customers, enabling them to conduct financial\
          \ transactions remotely. \nThis app could be a mobile app downloaded from\
          \ the Apple App Store or Google Play Store, or a web app such as a single-page\
          \ application (SPA) or a combination of multiple SPAs.\n"
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: |
          The version as defined in the remote config.
          This version will be used to identify the correct version of the app that the user is currently using, so that we can only display creatives relevant to that specific version of the app.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: screenId
        in: query
        description: "The ID of the part of the application where the campaign slot\
          \ is located. Derived from screenName by default.\nThis is defined in the\
          \ remote config \nFor example, index.\n"
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: campaignSlotId
        in: query
        description: "The CampaignSlotId is the identifier of the campaign slot. \n\
          It is defined in the remote config. \nFor example, marketing_banner_1.\n"
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: locale
        in: query
        description: The engagement locale.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: dimensions
        in: query
        description: Dimensions of the creative for this engagement.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: size
        in: query
        description: The number of results per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 3
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: from
        in: query
        description: zero-based page index in list requests.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
        example: 0
      responses:
        "200":
          description: List of Creative Resources sorted by the Engagement Start Date
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
            X-Total-Count:
              $ref: '#/components/headers/xTotalCount'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativeResourceItems'
              example:
                $ref: '#/components/examples/CreativeResourceItemsExample'
        "400":
          description: |
            The server cannot process the request due to something perceived as a client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                badRequestError:
                  $ref: '#/components/examples/BadRequestExample'
                  value: null
        "401":
          description: Request lacks valid authentication credentials for the target
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
              examples:
                unauthorizedError:
                  $ref: '#/components/examples/UnauthorizedExample'
                  value: null
        "403":
          description: The user does not have the required permission to access the
            resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
              examples:
                forbiddenExample:
                  $ref: '#/components/examples/ForbiddenExample'
                  value: null
      x-BbAccessControl: false
  /client-api/v1/banner:
    get:
      tags:
      - selectBanner
      summary: Get a banner for a user based on a relevant engagement.
      description: "Retrieves a banner for given engagement with the specified spaceId,\
        \ dimensions, and locale."
      operationId: selectBanner
      parameters:
      - name: spaceId
        in: query
        description: |
          A derived key depending on the environment.
          If it is a Portal-based environment, it will be the combination of the portal name, page name, and widget name concatenated with a dot (.) For example, "portalName.pageName.widgetName"
          If it is a Remote-Config-based environment, "projectName" replaces "portalName" and it will be the combination of the project name, app name, and version. For example: "projectName.appName.widgetName"
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: dimensions
        in: query
        description: Dimensions of the creative for this engagement.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: locale
        in: query
        description: The engagement locale.
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns a banner for a given engagement. The impressions metric
            for this engagement is increased by one.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelectedBannerResource'
              example:
                $ref: '#/components/examples/SelectBannerGetResponseExample'
        "204":
          description: No matching engagement was found.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
        "400":
          description: |
            The server cannot or will not process the request due to something that is perceived to be a client error.
            For example, the request does not meet the API specification or contains validation errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                badRequestError:
                  $ref: '#/components/examples/BadRequestExample'
                  value: null
        "401":
          description: Request lacks valid authentication credentials for the target
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
              examples:
                unauthorizedError:
                  $ref: '#/components/examples/UnauthorizedExample'
                  value: null
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
        "404":
          description: User was not found in user segment service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        "500":
          description: If a runtime error occurs while processing the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simple-error'
              example:
                $ref: '#/components/examples/internal-server-error'
      x-BbAccessControl: false
  /client-api/v1/banner/metrics/click:
    post:
      tags:
      - engagementMetrics
      description: This API is used to store click metrics.
      operationId: clickMetric
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricClickPostRequest'
            examples:
              MetricClickPostRequestExample:
                $ref: '#/components/examples/MetricClickPostRequestExample'
                value: null
        required: true
      responses:
        "204":
          description: Click metrics are successfully computed.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
        "400":
          description: |
            The server cannot or will not process the request due to something that is perceived to be a client error.
            For example, the request does not meet the API specification or contains validation errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                badRequestError:
                  $ref: '#/components/examples/BadRequestExample'
                  value: null
        "401":
          description: Request lacks valid authentication credentials for the target
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
              examples:
                unauthorizedError:
                  $ref: '#/components/examples/UnauthorizedExample'
                  value: null
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
        "404":
          description: The creative or engagement has not been found.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
              examples:
                notFoundError:
                  $ref: '#/components/examples/NotFoundExample'
                  value: null
      x-BbAccessControl: false
  /client-api/v1/banner/redirect:
    get:
      tags:
      - engagementMetrics
      description: "Deprecated, the target URL location will be send from GET /client-api/v1/banner,\n\
        and click metrics will be stored with POST /client-api/v1/banner/metrics/click.\n\
        Redirects to the target URL of the banner identified by the query parameters.\
        \ \nConversion metrics for the given engagement are increased.\n"
      operationId: redirectBanner
      parameters:
      - name: utm_content
        in: query
        description: The channel content ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: utm_banner
        in: query
        description: The engagement channel ID.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: uuid
      responses:
        "302":
          description: Redirects to the targetUrl of the Banner channel.
          headers:
            Location:
              description: The target URL location.
              style: simple
              explode: false
              schema:
                type: string
        "400":
          description: utm_content or utm_banner are missing.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                badRequestError:
                  $ref: '#/components/examples/BadRequestExample'
                  value: null
        "401":
          description: Request lacks valid authentication credentials for the target
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
              examples:
                unauthorizedError:
                  $ref: '#/components/examples/UnauthorizedExample'
                  value: null
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
        "404":
          description: The banner channel or creative was not found.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
              examples:
                notFoundError:
                  $ref: '#/components/examples/NotFoundExample'
                  value: null
      deprecated: true
      x-BbAccessControl: false
  /client-api/v1/engagements:
    get:
      tags:
      - engagement
      description: Gets all engagements
      operationId: getEngagements
      parameters:
      - name: from
        in: query
        description: zero-based page index in list requests.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
        example: 0
      - name: size
        in: query
        description: the size of the page to be returned in list requests.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 25
        example: 25
      - name: endDateAfter
        in: query
        description: Filtering by endDate that is greater than or equal to the given
          value.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 2020-12-01T22:22:22.0000Z
      - name: endDateBefore
        in: query
        description: Filtering by endDate that is lower than or equal to the given
          value.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 2020-12-01T22:22:22.0000Z
      - name: state
        in: query
        description: A comma-separated array of the state to filter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: The engagement was successfully retrieved.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
            X-Total-Count:
              $ref: '#/components/headers/xTotalCount'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EngagementToDisplayResource'
              examples:
                EngagementsGetResponseExample:
                  $ref: '#/components/examples/EngagementsGetResponseExample'
                  value: null
        "400":
          description: |
            The server cannot or will not process the request due to something that is perceived to be a client error.
            For example, the request does not meet the API specification or contains validation errors.
        "401":
          description: Request lacks valid authentication credentials for the target
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
              examples:
                unauthorizedError:
                  $ref: '#/components/examples/UnauthorizedExample'
                  value: null
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
      x-BbAccessControl-resource: Engagements
      x-BbAccessControl-function: Custom Engagements
      x-BbAccessControl-privilege: view
  /client-api/v1/engagements/{engagementType}:
    get:
      tags:
      - engagement
      description: Gets all engagements for a given engagement type
      operationId: getEngagementsByType
      parameters:
      - name: engagementType
        in: path
        description: the type of engagement
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: custom
      - name: from
        in: query
        description: Specifies the page to start from.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        description: The number of the results per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 10
          type: integer
          format: int32
          default: 20
      - name: endDateAfter
        in: query
        description: Filtering by endDate that is greater than or equal to the given
          value.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 2020-12-01T22:22:22.0000Z
      - name: endDateBefore
        in: query
        description: Filtering by endDate that is lower than or equal to the given
          value.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 2020-12-01T22:22:22.0000Z
      responses:
        "200":
          description: The engagement was successfully retrieved.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
            X-Total-Count:
              $ref: '#/components/headers/xTotalCount'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EngagementToDisplayResource'
              example:
                $ref: '#/components/examples/EngagementsGetResponseExample'
        "400":
          description: |
            The server cannot or will not process the request due to something that is perceived to be a client error.
            For example, the request does not meet the API specification or contains validation errors.
        "401":
          description: Request lacks valid authentication credentials for the target
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
              examples:
                unauthorizedError:
                  $ref: '#/components/examples/UnauthorizedExample'
                  value: null
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
      x-BbAccessControl-resource: Engagements
      x-BbAccessControl-function: Custom Engagements
      x-BbAccessControl-privilege: view
    post:
      tags:
      - engagement
      description: Creates a new engagement.
      operationId: createEngagement
      parameters:
      - name: engagementType
        in: path
        description: the type of engagement
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: custom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EngagementRequestResource'
            example:
              $ref: '#/components/examples/EngagementPostRequestExample'
        required: true
      responses:
        "201":
          description: The new engagement was created.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngagementResource'
              example:
                $ref: '#/components/examples/EngagementPostResponseExample'
        "400":
          description: |
            The server cannot or will not process the request due to something that is perceived to be a client error.
            For example, the request does not meet the API specification or contains validation errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                badRequestError:
                  $ref: '#/components/examples/BadRequestExample'
                  value: null
        "401":
          description: Request lacks valid authentication credentials for the target
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
              examples:
                unauthorizedError:
                  $ref: '#/components/examples/UnauthorizedExample'
                  value: null
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
      x-BbAccessControl-resource: Engagements
      x-BbAccessControl-function: Custom Engagements
      x-BbAccessControl-privilege: create
  /client-api/v1/engagements/{engagementType}/{engagementId}:
    get:
      tags:
      - engagement
      description: Gets an engagement by its UUID.
      operationId: getEngagementByEngagementId
      parameters:
      - name: engagementId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: engagementType
        in: path
        description: the type of engagement
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: custom
      - name: status
        in: query
        description: "A comma-separated array of the status to filter. \nDeprecated,\
          \ after removing the versioning functionality, there will always be one\
          \ Engagement per UUID.\nThis query parameter will be removed in the next\
          \ API version.\n"
        required: false
        deprecated: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: version
        in: query
        description: |
          A specific version of the engagement to filter.
          Deprecated, the versioning functionality was removed.
          This query parameter will be removed in the next API version.
        required: false
        deprecated: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Gets an engagement by its engagement ID.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngagementResource'
              example:
                $ref: '#/components/examples/EngagementGetResponseExample'
        "400":
          description: |
            The server cannot or will not process the request due to something that is perceived to be a client error.
            For example, the request does not meet the API specification or contains validation errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                badRequestError:
                  $ref: '#/components/examples/BadRequestExample'
                  value: null
        "401":
          description: Request lacks valid authentication credentials for the target
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
              examples:
                unauthorizedError:
                  $ref: '#/components/examples/UnauthorizedExample'
                  value: null
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
        "404":
          description: The engagement with the given UUID was not found.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
              examples:
                notFoundError:
                  $ref: '#/components/examples/NotFoundExample'
                  value: null
      x-BbAccessControl-resource: Engagements
      x-BbAccessControl-function: Custom Engagements
      x-BbAccessControl-privilege: view
    put:
      tags:
      - engagement
      description: Updates an engagement.
      operationId: updateEngagement
      parameters:
      - name: engagementId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: engagementType
        in: path
        description: the type of engagement
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: custom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EngagementRequestResource'
            example:
              $ref: '#/components/examples/EngagementPutRequestExample'
      responses:
        "200":
          description: Updates an engagement.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngagementResource'
              example:
                $ref: '#/components/examples/EngagementPutResponseExample'
        "400":
          description: |
            The server cannot or will not process the request due to something that is perceived to be a client error.
            For example, the request does not meet the API specification or contains validation errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                badRequestError:
                  $ref: '#/components/examples/BadRequestExample'
                  value: null
        "401":
          description: Request lacks valid authentication credentials for the target
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
              examples:
                unauthorizedError:
                  $ref: '#/components/examples/UnauthorizedExample'
                  value: null
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
        "404":
          description: The engagement to update was not found.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
              examples:
                notFoundError:
                  $ref: '#/components/examples/NotFoundExample'
                  value: null
        "409":
          description: Could not update a message center channel that has already
            been sent or the engagement is ended.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
              examples:
                conflictError:
                  $ref: '#/components/examples/ConflictError'
                  value: null
      x-BbAccessControl-resource: Engagements
      x-BbAccessControl-function: Custom Engagements
      x-BbAccessControl-privilege: edit
    patch:
      tags:
      - engagement
      description: |
        Updates an engagement's state.
        The following requirements should met to launch engagement:
          - LIVE or SCHEDULED state should be sent in the payload
          - Engagement should have DRAFT or PAUSED state
        The following requirements should met to pause engagement:
          - PAUSED state should be sent in the payload
          - Engagement should have LIVE or SCHEDULED states
      operationId: updateEngagementState
      parameters:
      - name: engagementId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: engagementType
        in: path
        description: the type of engagement
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: custom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EngagementStateResource'
            example:
              $ref: '#/components/examples/EngagementStatePatchRequestExample'
      responses:
        "200":
          description: Updates an engagement state.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngagementResource'
              example:
                $ref: '#/components/examples/EngagementPutResponseExample'
        "400":
          description: If one or more request parameters don't comply with the specification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/bad-request-validation-error'
        "401":
          description: If the authentication credentials provided are invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/unauthorized-error'
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
        "404":
          description: The engagement to update was not found.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
              examples:
                notFoundError:
                  $ref: '#/components/examples/NotFoundExample'
                  value: null
      x-BbAccessControl-resource: Engagements
      x-BbAccessControl-function: Custom Engagements
      x-BbAccessControl-privilege: execute
  /client-api/v1/engagements/{engagementType}/{engagementId}/enable:
    put:
      tags:
      - engagement
      description: |
        Deprecated, PATCH /client-api/v1/engagements/{engagementType}/{engagementId} API should be used instead.
      operationId: enableEngagement
      parameters:
      - name: engagementId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: engagementType
        in: path
        description: the type of engagement
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: custom
      responses:
        "200":
          description: The engagement is resumed.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngagementResource'
              example:
                $ref: '#/components/examples/EnableEngagementPutResponseExample'
        "400":
          description: |
            The server cannot or will not process the request due to something that is perceived to be a client error.
            For example, the request does not meet the API specification or contains validation errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                badRequestError:
                  $ref: '#/components/examples/BadRequestExample'
                  value: null
        "401":
          description: Request lacks valid authentication credentials for the target
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
              examples:
                unauthorizedError:
                  $ref: '#/components/examples/UnauthorizedExample'
                  value: null
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
        "404":
          description: The engagement with the given UUID was not found.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
              examples:
                notFoundError:
                  $ref: '#/components/examples/NotFoundExample'
                  value: null
      deprecated: true
      x-BbAccessControl-resource: Engagements
      x-BbAccessControl-function: Custom Engagements
      x-BbAccessControl-privilege: execute
  /client-api/v1/engagements/{engagementType}/{engagementId}/disable:
    put:
      tags:
      - engagement
      description: |
        Deprecated, PATCH /client-api/v1/engagements/{engagementType}/{engagementId} API should be used instead.
      operationId: disableEngagement
      parameters:
      - name: engagementId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: engagementType
        in: path
        description: the type of engagement
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: custom
      responses:
        "200":
          description: The engagement is paused.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngagementResource'
              example:
                $ref: '#/components/examples/DisableEngagementPutResponseExample'
        "400":
          description: |
            The server cannot or will not process the request due to something that is perceived to be a client error.
            For example, the request does not meet the API Specification or contains validation errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                badRequestError:
                  $ref: '#/components/examples/BadRequestExample'
                  value: null
        "401":
          description: Request lacks valid authentication credentials for the target
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
              examples:
                unauthorizedError:
                  $ref: '#/components/examples/UnauthorizedExample'
                  value: null
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
        "404":
          description: The engagement with the given UUID was not found.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
              examples:
                notFoundError:
                  $ref: '#/components/examples/NotFoundExample'
                  value: null
      deprecated: true
      x-BbAccessControl-resource: Engagements
      x-BbAccessControl-function: Custom Engagements
      x-BbAccessControl-privilege: execute
  /client-api/v1/engagements/{engagementType}/{engagementId}/final:
    put:
      tags:
      - engagement
      description: |
        Deprecated, PATCH /client-api/v1/engagements/{engagementType}/{engagementId} API should be used instead.
      operationId: finalizeEngagement
      parameters:
      - name: engagementId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: engagementType
        in: path
        description: the type of engagement
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: custom
      responses:
        "200":
          description: The returned engagement is marked as final.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngagementResource'
              example:
                $ref: '#/components/examples/FinalEngagementPutResponseExample'
        "400":
          description: |
            The server cannot or will not process the request due to something that is perceived to be a client error.
            For example, the request does not meet the API specification or contains validation errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                badRequestError:
                  $ref: '#/components/examples/BadRequestExample'
                  value: null
        "401":
          description: Request lacks valid authentication credentials for the target
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
              examples:
                unauthorizedError:
                  $ref: '#/components/examples/UnauthorizedExample'
                  value: null
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
        "404":
          description: The engagement with the given ID was not found.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
              examples:
                notFoundError:
                  $ref: '#/components/examples/NotFoundExample'
                  value: null
      deprecated: true
      x-BbAccessControl-resource: Engagements
      x-BbAccessControl-function: Custom Engagements
      x-BbAccessControl-privilege: execute
  /client-api/v1/engagements/{engagementType}/{engagementId}/channels/{channelId}/metrics:
    get:
      tags:
      - engagementMetrics
      description: Return metrics for the given channel from the start date of the
        engagement till current date.
      operationId: getEngagementMetrics
      parameters:
      - name: engagementId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: channelId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: engagementType
        in: path
        description: the type of engagement
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: custom
      responses:
        "200":
          description: The engagement metrics.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResource'
              example:
                $ref: '#/components/examples/EngagementMetricsGetResponseExample'
        "400":
          description: |
            The server cannot or will not process the request due to something that is perceived to be a client error.
            For example, the request does not meet the API Specification or contains validation errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                badRequestError:
                  $ref: '#/components/examples/BadRequestExample'
                  value: null
        "401":
          description: Request lacks valid authentication credentials for the target
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
              examples:
                unauthorizedError:
                  $ref: '#/components/examples/UnauthorizedExample'
                  value: null
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
        "404":
          description: The engagement with the given ID in a final status was not
            found.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
              examples:
                notFoundError:
                  $ref: '#/components/examples/NotFoundExample'
                  value: null
      x-BbAccessControl-resource: Engagements
      x-BbAccessControl-function: Custom Engagements
      x-BbAccessControl-privilege: view
  /client-api/v1/notification-preferences:
    get:
      tags:
      - notification-preference
      description: Returns a list of the user's current notification preferences.
      operationId: getNotificationPreferences
      parameters:
      - name: generalNotificationId
        in: query
        description: A filter by the `general notification` ID.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: account-balance-low
      - name: active
        in: query
        description: A filter by the `active` flag.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: entityId
        in: query
        description: A filter by the internal ID of the entity. Should be used in
          conjunction with the `entityType` parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: uuid
        example: 4de6caa8-7f4a-4edb-a702-1fe1795f0a82
      - name: entityType
        in: query
        description: A filter by the entity type. Should be used in conjunction with
          the `entityId` parameter.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 32
          type: string
        example: arrangement
      responses:
        "200":
          description: A list of notification preferences.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsPreferencesGet'
              examples:
                response_when_two_general_notification_exists:
                  $ref: '#/components/examples/response_when_two_general_notification_exists'
                  value: null
                response_when_account_low_balance_contains_default:
                  $ref: '#/components/examples/response_when_account_low_balance_contains_default'
                  value: null
                response_when_business_banking_general_notifications_default:
                  $ref: '#/components/examples/response_when_business_banking_general_notifications_default'
                  value: null
        "400":
          description: If one or more request parameters don't comply with the specification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/bad-request-validation-error'
        "401":
          description: If the authentication credentials provided are invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/unauthorized-error'
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
        "404":
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/not-found-error'
      x-BbAccessControl-resource: Communication Preferences
      x-BbAccessControl-function: General Notification Preferences
      x-BbAccessControl-privilege: view
    post:
      tags:
      - notification-preference
      description: Creates a single notification preference.
      operationId: createNotificationPreference
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationPreferencePostRequest'
            examples:
              request_when_create_account_balance_low_preferences:
                $ref: '#/components/examples/request_when_create_account_balance_low_preferences'
                value: null
              request_when_create_payment_to_approve_preferences:
                $ref: '#/components/examples/request_when_create_payment_to_approve_preferences'
                value: null
        required: true
      responses:
        "201":
          description: The notification preference was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationPreference'
              examples:
                response_when_create_account_balance_low_preferences:
                  $ref: '#/components/examples/NotificationPreferencePostResponseExample'
                  value: null
                request_when_create_payment_to_approve_preferences:
                  $ref: '#/components/examples/NotificationPreferenceBusinessBankingPostResponseExample'
                  value: null
        "400":
          description: If one or more request parameters don't comply with the specification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/bad-request-validation-error'
        "401":
          description: If the authentication credentials provided are invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/unauthorized-error'
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
        "404":
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/not-found-error'
        "500":
          description: If a runtime error occurs while processing the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simple-error'
              example:
                $ref: '#/components/examples/internal-server-error'
      x-BbAccessControl-resource: Communication Preferences
      x-BbAccessControl-function: General Notification Preferences
      x-BbAccessControl-privilege: create
  /client-api/v1/notification-preferences/{id}:
    put:
      tags:
      - notification-preference
      description: Updates a particular notification preference using its unique ID
        for the current user.
      operationId: updateNotificationPreference
      parameters:
      - name: id
        in: path
        description: The unique ID of a notification preference.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        example: b1ac32e8-a8e6-11eb-bcbc-0242ac130002
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationPreferencePutRequest'
            example:
              $ref: '#/components/examples/v1-notification-preference-put-request'
        required: true
      responses:
        "200":
          description: The notification preference was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationPreference'
              examples:
                success:
                  $ref: '#/components/examples/NotificationPreferencePutResponseExample'
                  value: null
        "400":
          description: If one or more request parameters don't comply with the specification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/bad-request-validation-error'
        "401":
          description: If the authentication credentials provided are invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/unauthorized-error'
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
        "404":
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/not-found-error'
        "500":
          description: If a runtime error occurs while processing the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simple-error'
              example:
                $ref: '#/components/examples/internal-server-error'
      x-BbAccessControl-resource: Communication Preferences
      x-BbAccessControl-function: General Notification Preferences
      x-BbAccessControl-privilege: edit
  /client-api/v1/notification-preferences/batch:
    put:
      tags:
      - notification-preference
      description: Creates or updates notification preferences in batch.
      operationId: batchUpdateNotificationPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationPreferencePutBatchRequest'
            example:
              $ref: '#/components/examples/v1-notification-preference-put-batch-request'
        required: true
      responses:
        "204":
          description: The notification preferences were successfully updated.
        "400":
          description: If one or more request parameters don't comply with the specification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/bad-request-validation-error'
        "401":
          description: If the authentication credentials provided are invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/unauthorized-error'
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
        "404":
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/not-found-error'
        "500":
          description: If a runtime error occurs while processing the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simple-error'
              example:
                $ref: '#/components/examples/internal-server-error'
      x-BbAccessControl-resource: Communication Preferences
      x-BbAccessControl-function: General Notification Preferences
      x-BbAccessControl-privilege:
      - create
      - edit
  /client-api/v1/general-notifications:
    get:
      tags:
      - general-notification
      description: Returns a list of general notifications which are manageable in
        the Engage App.
      operationId: getGeneralNotifications
      parameters:
      - name: from
        in: query
        description: zero-based page index in list requests.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
        example: 0
      - name: size
        in: query
        description: the size of the page to be returned in list requests.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 25
        example: 25
      responses:
        "200":
          description: A list of general notifications available in the Engage App.
          headers:
            X-Total-Count:
              $ref: '#/components/headers/xTotalCount'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneralNotificationSummary'
              example:
                $ref: '#/components/examples/v1-get-general-notifications'
        "400":
          description: If one or more request parameters don't comply with the specification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/bad-request-validation-error'
        "401":
          description: If the authentication credentials provided are invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/unauthorized-error'
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
      x-BbAccessControl-resource: Engagements
      x-BbAccessControl-function: General Notifications
      x-BbAccessControl-privilege: view
  /client-api/v1/general-notifications/{id}:
    get:
      tags:
      - general-notification
      description: Returns the general notification details by its ID. Provides view-only
        access to general notifications details.
      operationId: getGeneralNotificationById
      parameters:
      - name: id
        in: path
        description: unique human readable general notification name key
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 100
          type: string
        example: new-message-received
      responses:
        "200":
          description: Details of a general notification for Engage app.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralNotification'
              examples:
                new_message_received:
                  $ref: '#/components/examples/new_message_received'
                  value: null
                new_transaction_occurred:
                  $ref: '#/components/examples/new_transaction_occurred'
                  value: null
                account_statement_ready:
                  $ref: '#/components/examples/account_statement_ready'
                  value: null
        "401":
          description: If the authentication credentials provided are invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/unauthorized-error'
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
        "404":
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/not-found-error'
      x-BbAccessControl-resource: Engagements
      x-BbAccessControl-function: General Notifications
      x-BbAccessControl-privilege: view
  /client-api/v1/engagements-approval:
    get:
      tags:
      - EngagementApproval
      description: Retrieve a list of engagement requests pending approval the logged
        in user can approve.
      operationId: getApprovals
      parameters:
      - name: from
        in: query
        description: zero-based page index in list requests.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
        example: 0
      - name: size
        in: query
        description: the size of the page to be returned in list requests.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 25
        example: 25
      - name: orderBy
        in: query
        description: The Property used to sort the result
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: direction
        in: query
        description: To determine whether to sort in Ascending or Descending order
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: name
        in: query
        description: the name string to be returned in the list requests to be searched
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: engagement
      responses:
        "200":
          description: List of engagement requests pending approval the logged in
            user can approve.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
            X-Total-Count:
              $ref: '#/components/headers/xTotalCount'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EngagementsApprovalResource'
              example:
                $ref: '#/components/examples/EngagementsApprovalResourceExample'
        "400":
          description: |
            The server cannot or will not process the request due to something that is perceived to be a client error.
            For example, the request does not meet the API specification or contains validation errors.
        "401":
          description: Request lacks valid authentication credentials for the target
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
              examples:
                unauthorizedError:
                  $ref: '#/components/examples/UnauthorizedExample'
                  value: null
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
      x-BbAccessControl-resource: Engagements
      x-BbAccessControl-function: Custom Engagements
      x-BbAccessControl-privilege: approve
    post:
      tags:
      - EngagementApproval
      description: Creates an approval request for the given engagement.
      operationId: submitEngagementForApproval
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEngagementApprovalRequest'
            example:
              $ref: '#/components/examples/CreateEngagementApprovalRequestExample'
      responses:
        "200":
          description: The approval request is created for the given engagement.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
            X-Total-Count:
              $ref: '#/components/headers/xTotalCount'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalDetails'
              example:
                $ref: '#/components/examples/CreateApprovalResponseExample'
        "400":
          description: |
            The server cannot or will not process the request due to something that is perceived to be a client error.
            For example, the request does not meet the API specification or contains validation errors.
        "401":
          description: Request lacks valid authentication credentials for the target
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
              examples:
                unauthorizedError:
                  $ref: '#/components/examples/UnauthorizedExample'
                  value: null
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
        "409":
          description: The Approval request cannot be created.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
              examples:
                conflictError:
                  $ref: '#/components/examples/ConflictError'
                  value: null
      x-BbAccessControl-resource: Engagements
      x-BbAccessControl-function: Custom Engagements
      x-BbAccessControl-privilege: create
  /client-api/v1/engagements-approval/{approvalId}/approve:
    put:
      tags:
      - EngagementApproval
      description: This api will approve the approval request submitted for the engagement.
        If the approval is final as per the approval policy. Engagement will be launched
      operationId: approve
      parameters:
      - name: approvalId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApprovalRequest'
            example:
              $ref: '#/components/examples/UpdateApprovalRequestExample'
      responses:
        "200":
          description: "The approval request is approved for the engagement. If the\
            \ approval is final, engagement would be launched. Response contains the\
            \ engagement Resource in the current state"
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngagementResource'
              example:
                $ref: '#/components/examples/EngagementsApproveResponseExample'
        "400":
          description: |
            The server cannot or will not process the request due to something that is perceived to be a client error.
            For example, the request does not meet the API specification or contains validation errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                badRequestError:
                  $ref: '#/components/examples/BadRequestExample'
                  value: null
        "401":
          description: Request lacks valid authentication credentials for the target
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
              examples:
                unauthorizedError:
                  $ref: '#/components/examples/UnauthorizedExample'
                  value: null
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
        "404":
          description: The approval with the given UUID was not found.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
              examples:
                notFoundError:
                  $ref: '#/components/examples/NotFoundExample'
                  value: null
        "409":
          description: "The Approval request is already actioned by another user,\
            \ and no action is needed."
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
              examples:
                conflictError:
                  $ref: '#/components/examples/ConflictError'
                  value: null
      x-BbAccessControl-resource: Engagements
      x-BbAccessControl-function: Custom Engagements
      x-BbAccessControl-privilege: approve
  /client-api/v1/engagements-approval/{approvalId}/reject:
    put:
      tags:
      - EngagementApproval
      description: This api will allow an approver to reject the approval request
        submitted for the engagement
      operationId: reject
      parameters:
      - name: approvalId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApprovalRequest'
            example:
              $ref: '#/components/examples/UpdateApprovalRequestExample'
      responses:
        "200":
          description: The approval request for the submitted engagement is rejected.
            Response contains the updated approval request.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalDetails'
              example:
                $ref: '#/components/examples/RejectApprovalResponseExample'
        "400":
          description: |
            The server cannot or will not process the request due to something that is perceived to be a client error.
            For example, the request does not meet the API specification or contains validation errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                badRequestError:
                  $ref: '#/components/examples/BadRequestExample'
                  value: null
        "401":
          description: Request lacks valid authentication credentials for the target
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
              examples:
                unauthorizedError:
                  $ref: '#/components/examples/UnauthorizedExample'
                  value: null
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
        "404":
          description: The approval with the given UUID was not found.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
              examples:
                notFoundError:
                  $ref: '#/components/examples/NotFoundExample'
                  value: null
        "409":
          description: "The Approval request is already actioned by another user,\
            \ and no action is needed."
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
              examples:
                conflictError:
                  $ref: '#/components/examples/ConflictError'
                  value: null
      x-BbAccessControl-resource: Engagements
      x-BbAccessControl-function: Custom Engagements
      x-BbAccessControl-privilege: approve
  /client-api/v1/engagements-approval/{approvalId}/cancel:
    put:
      tags:
      - EngagementApproval
      description: This api will allow the user who submitted the engagement to cancel
        the approval request
      operationId: cancel
      parameters:
      - name: approvalId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: The approval request submitted for the engagement is cancelled.
            Response contains the updated approval request.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalDetails'
              example:
                $ref: '#/components/examples/CancelApprovalResponseExample'
        "400":
          description: |
            The server cannot or will not process the request due to something that is perceived to be a client error.
            For example, the request does not meet the API specification or contains validation errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                badRequestError:
                  $ref: '#/components/examples/BadRequestExample'
                  value: null
        "401":
          description: Request lacks valid authentication credentials for the target
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
              examples:
                unauthorizedError:
                  $ref: '#/components/examples/UnauthorizedExample'
                  value: null
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
        "404":
          description: The engagement with the given UUID was not found.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
              examples:
                notFoundError:
                  $ref: '#/components/examples/NotFoundExample'
                  value: null
        "409":
          description: The Approval request is already actioned and the status is
            final. Engagement cannot be cancelled at this stage.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
              examples:
                conflictError:
                  $ref: '#/components/examples/ConflictError'
                  value: null
      x-BbAccessControl-resource: Engagements
      x-BbAccessControl-function: Custom Engagements
      x-BbAccessControl-privilege: create
  /client-api/v1/engagement-types:
    get:
      tags:
      - engagement-types
      description: Gets all engagement types that was provisioned on the system.
      operationId: getEngagementTypes
      responses:
        "200":
          description: A list of engagement types available in the Engage App.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EngagementTypeResource'
              examples:
                EngagementTypeResponseExample:
                  $ref: '#/components/examples/EngagementTypeResponseExample'
                  value: null
        "400":
          description: |
            The server cannot or will not process the request due to something that is perceived to be a client error.
            For example, the request does not meet the API specification or contains validation errors.
        "401":
          description: Request lacks valid authentication credentials for the target
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
              examples:
                unauthorizedError:
                  $ref: '#/components/examples/UnauthorizedExample'
                  value: null
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
      x-BbAccessControl-resource: Engagements
      x-BbAccessControl-function: Custom Engagements
      x-BbAccessControl-privilege: view
  /client-api/v1/engagement-preferences:
    get:
      tags:
      - engagement-preference
      description: Return all engagement preferences filtered by user.
      operationId: getEngagementPreferences
      responses:
        "200":
          description: Details of user engagement preferences for Retail app.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EngagementPreferencesResource'
              example:
                $ref: '#/components/examples/v1-get-engagement-preferences'
        "401":
          description: If the authentication credentials provided are invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/unauthorized-error'
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
      x-BbAccessControl-resource: Communication Preferences
      x-BbAccessControl-function: General Notification Preferences
      x-BbAccessControl-privilege:
      - view
      - edit
    post:
      tags:
      - engagement-preference
      description: Create engagement preference for user and service agreement
      operationId: createEngagementPreference
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EngagementPreferencePostRequest'
            example:
              $ref: '#/components/examples/EngagementPreferencePostExample'
        required: true
      responses:
        "201":
          description: New engagement preference was created for user
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngagementPreferencesResource'
              examples:
                child:
                  $ref: '#/components/examples/EngagementPreferenceChildResponseExample'
                  value: null
                parent:
                  $ref: '#/components/examples/EngagementPreferenceParentResponseExample'
                  value: null
        "400":
          description: |
            The server cannot or will not process the request due to something that is perceived to be a client error.
            For example, the request does not meet the API specification or contains validation errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                badRequestError:
                  $ref: '#/components/examples/BadRequestExample'
                  value: null
        "401":
          description: Request lacks valid authentication credentials for the target
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
              examples:
                unauthorizedError:
                  $ref: '#/components/examples/UnauthorizedExample'
                  value: null
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
        "409":
          description: Engagement preference already exists for user and service agreement.
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
      x-BbAccessControl-resource: Communication Preferences
      x-BbAccessControl-function: General Notification Preferences
      x-BbAccessControl-privilege:
      - view
      - edit
  /client-api/v1/engagement-preferences/{engagementPreferenceUuid}:
    put:
      tags:
      - engagement-preference
      description: Update engagement preference for user and service agreement
      operationId: updateEngagementPreference
      parameters:
      - name: engagementPreferenceUuid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EngagementPreferencePutRequest'
            example:
              $ref: '#/components/examples/EngagementPreferencePutExample'
        required: true
      responses:
        "200":
          description: Engagement preference updated for user
          headers:
            X-XSS-Protection:
              $ref: '#/components/headers/xXssProtection'
            X-Content-Type-Options:
              $ref: '#/components/headers/xContentTypeOptions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngagementPreferencesResource'
              examples:
                child:
                  $ref: '#/components/examples/EngagementPreferenceChildResponseExample'
                  value: null
                parent:
                  $ref: '#/components/examples/EngagementPreferenceParentResponseExample'
                  value: null
        "400":
          description: |
            The server cannot or will not process the request due to something that is perceived to be a client error.
            For example, the request does not meet the API specification or contains validation errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                badRequestError:
                  $ref: '#/components/examples/BadRequestExample'
                  value: null
        "401":
          description: Request lacks valid authentication credentials for the target
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
              examples:
                unauthorizedError:
                  $ref: '#/components/examples/UnauthorizedExample'
                  value: null
        "403":
          description: If the current user doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                $ref: '#/components/examples/forbidden-error'
        "404":
          description: Engagement preference not found for user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-BbAccessControl-resource: Communication Preferences
      x-BbAccessControl-function: General Notification Preferences
      x-BbAccessControl-privilege:
      - view
      - edit
components:
  schemas:
    EngagementBaseResource:
      required:
      - endDate
      - locale
      - name
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
        uuid:
          type: string
          format: uuid
        version:
          type: integer
        locale:
          maxLength: 20
          minLength: 1
          type: string
        startDate:
          type: string
          description: Start date and time.
          format: date-time
        endDate:
          type: string
          description: End date and time.
          format: date-time
        audience:
          $ref: '#/components/schemas/Audience'
        channels:
          type: array
          description: Channels of this engagement.
          items:
            $ref: '#/components/schemas/Channel'
    EngagementResource:
      allOf:
      - $ref: '#/components/schemas/EngagementBaseResource'
      - required:
        - audience
        - channels
        - status
        - uuid
        - version
        type: object
        properties:
          status:
            $ref: '#/components/schemas/engagement-status'
          engagementType:
            $ref: '#/components/schemas/engagement-type'
          approvalDetailsList:
            type: array
            items:
              $ref: '#/components/schemas/approval-details'
          state:
            $ref: '#/components/schemas/engagement-state'
    EngagementStateResource:
      required:
      - state
      type: object
      properties:
        state:
          $ref: '#/components/schemas/engagement-state'
    EngagementRequestResource:
      type: object
      properties:
        engagementTypeUuid:
          type: string
          format: uuid
      allOf:
      - $ref: '#/components/schemas/engagement-base-resource'
    EngagementToDisplayResource:
      allOf:
      - $ref: '#/components/schemas/engagement-base-resource'
      - required:
        - approvalStatus
        - status
        - uuid
        - version
        type: object
        properties:
          hasChanges:
            type: boolean
          metrics:
            $ref: '#/components/schemas/ConsolidatedMetricsResource'
          status:
            $ref: '#/components/schemas/engagement-status'
          approvalStatus:
            $ref: '#/components/schemas/approval-status'
          engagementType:
            $ref: '#/components/schemas/engagement-type'
          state:
            $ref: '#/components/schemas/engagement-state'
    Audience:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/AudienceType'
        id:
          maxLength: 36
          type: string
    Channel:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/EngagementChannelType'
        enabled:
          type: boolean
          description: Enables or disables this channel.
        uuid:
          type: string
          format: uuid
      discriminator:
        propertyName: type
        mapping:
          banner: '#/components/schemas/BannerChannel'
          message-center: '#/components/schemas/MessageCenterChannel'
          push: '#/components/schemas/PushChannel'
          overlays: '#/components/schemas/OverlaysChannel'
    EngagementChannelType:
      type: string
      description: The channel type.
      enum:
      - banner
      - message-center
      - push
    BannerChannel:
      description: Banner Channel
      allOf:
      - $ref: '#/components/schemas/Channel'
      - type: object
        properties:
          targetUrl:
            maxLength: 2000
            type: string
            description: |
              When deepLinkingEnabled is false, targetUrl will be validated to have
              a proper HTTP url containing protocol and domain.
              When deepLinkingEnabled is true, targetUrl wont be validated and can have
              relative paths without domain and protocol.
            example: https://www.backbase.com/home
          targetUrlDisplayMode:
            $ref: '#/components/schemas/TargetUrlDisplayModeResource'
          priority:
            type: string
            description: |
              The priority of the given banner. Banners from eligible engagements "compete" with one another based on this setting,
              where high-priority banners have a higher priority over the ones with a lower priority.
            enum:
            - low
            - medium
            - high
          creatives:
            type: array
            description: Creatives of this banner.
            items:
              $ref: '#/components/schemas/CreativeResource'
          campaignSlots:
            type: array
            description: Engagement slots of this banner.
            items:
              $ref: '#/components/schemas/CampaignSlot'
          startDate:
            type: string
            description: Start date and time.
            format: date-time
          endDate:
            type: string
            description: End date and time.
            format: date-time
          deepLinkingEnabled:
            type: boolean
            description: "Indicates if deep-linking id enabled or not. We can't solely\
              \ rely on the \nexisting of route object, because it's possible the\
              \ targetUrl contains a deep-link\nbut route field is not provided for\
              \ mobile. But when the request contains route\nthen deepLinkingEnabled\
              \ must be true.\n"
          routing:
            $ref: '#/components/schemas/Routing'
    MessageCenterChannel:
      allOf:
      - $ref: '#/components/schemas/Channel'
      - type: object
        properties:
          topicId:
            maxLength: 36
            type: string
            description: The topic ID to use with this message.
          draftContentId:
            maxLength: 200
            type: string
            description: The engagement template ID.
          draftRepositoryId:
            maxLength: 200
            type: string
            description: The repository ID of the engagement template.
          scheduledAt:
            type: string
            description: Indicates when this message should be sent to the communication-service.
            format: date-time
          deliveredAt:
            type: string
            description: Indicates when this message was delivered.
            format: date-time
    PushChannel:
      allOf:
      - $ref: '#/components/schemas/Channel'
      - type: object
        properties:
          channelSettings:
            type: object
            additionalProperties:
              type: object
              description: Simple key/value pair
            description: The channel settings for push.
          draftContentId:
            maxLength: 200
            type: string
            description: The engagement template ID.
          draftRepositoryId:
            maxLength: 200
            type: string
            description: The repository ID of the engagement template.
          scheduledAt:
            type: string
            description: Indicates when this message should be sent to the communication-service.
            format: date-time
          deliveredAt:
            type: string
            description: Indicates when this message was delivered.
            format: date-time
          deepLinkingEnabled:
            type: boolean
            description: "Indicates if deep-linking id enabled or not. We can't solely\
              \ rely on the \nexisting of route object, because it's possible the\
              \ targetUrl contains a deep-link\nbut route field is not provided for\
              \ mobile. But when the request contains route\nthen deepLinkingEnabled\
              \ must be true.\n"
          targetUrl:
            maxLength: 2000
            type: string
            description: |
              When deepLinkingEnabled is false, targetUrl will be validated to have
              a proper HTTP url containing protocol and domain.
              When deepLinkingEnabled is true, targetUrl wont be validated and can have
              relative paths without domain and protocol.
            example: https://www.backbase.com/home
          routing:
            $ref: '#/components/schemas/Routing'
    OverlaysChannel:
      allOf:
      - $ref: '#/components/schemas/Channel'
      - type: object
        properties:
          startDate:
            type: string
            description: Start date and time.
            format: date-time
          endDate:
            type: string
            description: End date and time.
            format: date-time
          draftContentId:
            maxLength: 200
            type: string
            description: The engagement template ID.
          draftRepositoryId:
            maxLength: 200
            type: string
            description: The repository ID of the engagement template.
          deliveredAt:
            type: string
            description: Indicates when this channel was delivered.
            format: date-time
          severityLevel:
            maxLength: 10
            type: integer
            description: "Overlay priority, identifies priority for overlay."
            example: 1
          placement:
            maxLength: 50
            type: string
            description: Unique overlay location identifier event id or screen id
              example.
            example: after_login
          channelInteractions:
            type: array
            description: Interaction items of the overlay.
            items:
              $ref: '#/components/schemas/ChannelInteraction'
    ConsolidatedMetricsResource:
      type: object
      properties:
        clicks:
          type: integer
        impressions:
          type: integer
        extendedMetrics:
          type: boolean
          description: indicate whether client has to fetch aggregated clicks and
            impressions count from metrics service
    AudienceType:
      type: string
      description: The audience type.
      enum:
      - none
      - id
      - all
    CreativeResourceItems:
      type: array
      items:
        $ref: '#/components/schemas/creative-resource-item'
    SelectedBannerResource:
      required:
      - creative
      - targetUrl
      type: object
      properties:
        bannerUrl:
          type: string
          description: The url of the banner.
          example: https://www.backbase.com/home
        routing:
          $ref: '#/components/schemas/Routing'
        utmConfig:
          type: object
          properties:
            engagement:
              type: string
              description: Id of the engagement.
              format: uuid
              example: e4e51d48-21e8-42e8-bd2d-0000a56ff360
            creative:
              type: string
              description: Id of the creative.
              format: uuid
              example: 808be33f-85c0-412a-8dc8-56926b2afe00
            destination:
              type: string
              description: "Destination of the API call, can be engagement or metric."
              example: metric|engagement
        targetUrl:
          type: string
          description: "Deprecated, use the property 'bannerUrl' instead."
          example: http://www.backbase.com/home
          deprecated: true
        targetUrlDisplayMode:
          $ref: '#/components/schemas/TargetUrlDisplayModeResource'
        creative:
          $ref: '#/components/schemas/SelectedCreativeResource'
    MetricsResource:
      required:
      - consolidated
      - creatives
      - metrics
      - unit
      type: object
      properties:
        unit:
          type: string
        metrics:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ClicksAndImpressionsResource'
        consolidated:
          $ref: '#/components/schemas/ClicksAndImpressionsResource'
        creatives:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ClicksAndImpressionsResource'
        extendedMetrics:
          type: boolean
          description: indicate whether client has to fetch aggregated clicks and
            impressions count from metrics service
    ClicksAndImpressionsResource:
      type: object
      properties:
        clicks:
          type: integer
        impressions:
          type: integer
    BaseCreativeResource:
      required:
      - dimensions
      - filename
      - uuid
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        dimensions:
          maxLength: 15
          type: string
          description: Dimensions of the creative's asset.
          example: 300x200
        filename:
          maxLength: 255
          type: string
          description: The filename of the creative asset
    CreativeResource:
      allOf:
      - $ref: '#/components/schemas/BaseCreativeResource'
      - required:
        - draftContentId
        - draftRepositoryId
        type: object
        properties:
          draftContentId:
            maxLength: 200
            type: string
            description: ID of the creative's content
          draftRepositoryId:
            maxLength: 200
            type: string
            description: ID of the creative's repository
    SelectedCreativeResource:
      allOf:
      - $ref: '#/components/schemas/BaseCreativeResource'
      - required:
        - content
        type: object
        properties:
          content:
            type: string
            description: Base64 encoded contents
    CampaignSlot:
      type: object
      properties:
        portalName:
          maxLength: 255
          type: string
        pageName:
          maxLength: 255
          type: string
        widgetName:
          maxLength: 255
          type: string
        creative:
          $ref: '#/components/schemas/CreativeResource'
      description: Specifies the space where the banner should be displayed.
    TargetUrlDisplayModeResource:
      type: string
      description: Configures how the target URL should be displayed.
      enum:
      - self
      - blank
    GeneralNotificationParent:
      required:
      - id
      - name
      type: object
      properties:
        id:
          maxLength: 100
          type: string
        name:
          maxLength: 200
          type: string
    GeneralNotificationSummary:
      description: Summary of all General Notifications
      allOf:
      - $ref: '#/components/schemas/GeneralNotificationParent'
      - required:
        - deliveryOptions
        - id
        - name
        type: object
        properties:
          deliveryOptions:
            type: array
            description: "A list of delivery option/channel codes for this general\
              \ notification. Must contain at least one element, otherwise a general\
              \ notification does not make sense."
            items:
              type: string
    GeneralNotification:
      description: Details of a General Notification
      allOf:
      - $ref: '#/components/schemas/GeneralNotificationParent'
      - required:
        - id
        - name
        - preferencesEnabled
        type: object
        properties:
          preferencesEnabled:
            type: boolean
            description: if this general notification manageable by end user in their
              app
          push:
            $ref: '#/components/schemas/PushMessagePayload'
          inAppNotification:
            $ref: '#/components/schemas/NotificationMessagePayload'
    NotificationMessagePayload:
      required:
      - channelSettings
      - engagementTemplates
      type: object
      properties:
        engagementTemplates:
          type: array
          items:
            $ref: '#/components/schemas/EngagementTemplate'
        channelSettings:
          $ref: '#/components/schemas/ChannelSettings'
      description: In-app notification message payload
    ChannelSettings:
      required:
      - origin
      - severityLevel
      type: object
      properties:
        severityLevel:
          $ref: '#/components/schemas/SeverityLevel'
        origin:
          maxLength: 200
          minLength: 1
          type: string
          description: Name of the capability where the notification originates from
      description: Channel-specific settings for Engage App to generate preview.
    SeverityLevel:
      type: string
      description: The notification severity level.
      enum:
      - ALERT
      - WARNING
      - SUCCESS
      - INFO
    PushMessagePayload:
      required:
      - engagementTemplates
      type: object
      properties:
        engagementTemplates:
          type: array
          items:
            $ref: '#/components/schemas/EngagementTemplate'
      description: "Notification, customizable for Android and IOS separately"
    NotificationsPreferencesGet:
      required:
      - notificationPreferences
      - totalCount
      type: object
      properties:
        totalCount:
          type: number
        notificationPreferences:
          type: array
          items:
            $ref: '#/components/schemas/NotificationPreference'
    NotificationPreferencePostRequest:
      required:
      - active
      - channels
      - generalNotificationId
      type: object
      properties:
        generalNotificationId:
          type: string
          description: A human-friendly unique name of a general notification to which
            this preference is bound.
        active:
          type: boolean
          description: If this preference is in effect or not.
        channels:
          type: array
          description: A selection of digital communications channels the user wants
            to be notified through.
          items:
            $ref: '#/components/schemas/DeliveryChannelRequest'
        eRef:
          type: string
          description: "The unique reference (UUID) for the entity used to create\
            \ an itemized notification preference. If this property is set in the\
            \ 'create notification preference' payload, 'eType' must also be set.\
            \ Otherwise, backend rejects the payload as invalid."
          format: uuid
          example: 6be7c465-37a7-4f1e-98b7-15d6c636c566
        conditions:
          type: object
          additionalProperties:
            type: object
          description: Custom notification preferences settings in key/value pairs
            that are user-configurable.
          example:
            amount: 100
    NotificationPreferencePutBatchRequest:
      type: array
      items:
        $ref: '#/components/schemas/notification-preference-put-batch-request'
    NotificationPreferencePutRequest:
      required:
      - active
      - channels
      type: object
      properties:
        active:
          type: boolean
          description: If this preference is in effect or not.
        channels:
          type: array
          description: A selection of digital communications channels the user wants
            to enable or disable.
          items:
            $ref: '#/components/schemas/DeliveryChannelRequest'
        conditions:
          type: object
          additionalProperties:
            type: object
          description: Custom notification preferences settings in key/value pairs
            that are user-configurable.
          example:
            amount: 100
    NotificationPreference:
      required:
      - active
      - channels
      - generalNotificationId
      type: object
      properties:
        id:
          type: string
          description: Unique ID (UUID)
          format: uuid
        generalNotificationId:
          type: string
          description: A human-friendly unique name of a general notification to which
            this preference is bound.
        active:
          type: boolean
          description: If this preference is in effect or not.
        channels:
          type: array
          description: A selection of digital communications channels the user wants
            to be notified through.
          items:
            $ref: '#/components/schemas/delivery-channel'
        userConditions:
          $ref: '#/components/schemas/user-conditions'
        createdOn:
          type: string
          description: Creation time.
          format: date-time
        lastUpdatedAt:
          type: string
          description: Last update time.
          format: date-time
    DeliveryChannelRequest:
      required:
      - channel
      - enabled
      type: object
      properties:
        channel:
          type: string
          description: Delivery channel representation
          example: push
        enabled:
          type: boolean
          description: If this delivery channel is active (enabled) or not.
    DeliveryChannel:
      required:
      - channel
      - enabled
      - userCanChange
      type: object
      properties:
        channel:
          type: string
          description: Delivery channel representation
          example: email
        enabled:
          type: boolean
          description: If this delivery channel is active (enabled) or not.
        userCanChange:
          type: boolean
          description: If the user can enable/disable this channel or not.
    UserConditions:
      required:
      - eType
      type: object
      properties:
        eType:
          type: string
          description: "The entity type used to create a notification preference for\
            \ a general notification. Front-end can rely on this field to build logic.\
            \ For example, render an account selector if the eType == 'arrangement').\
            \ Also, this parameter is mandatory when creating an itemized user notification\
            \ preference."
          example: arrangement
        eRef:
          type: string
          description: "The unique reference (UUID) for the entity used to create\
            \ an itemized notification preference. If this property is set in the\
            \ 'create notification preference' payload, 'eType' must also be set.\
            \ Otherwise, backend rejects the payload as invalid."
          format: uuid
          example: 6be7c465-37a7-4f1e-98b7-15d6c636c566
        conditions:
          type: object
          additionalProperties:
            type: object
          description: Custom notification preferences settings in key/value pairs
            that are user-configurable.
          example:
            amount: 100
      description: Custom notification preferences settings.
    EngagementsApprovalResource:
      required:
      - endDate
      - name
      - pendingSince
      - startDate
      - submittedBy
      - type
      - uuid
      type: object
      properties:
        name:
          type: string
          description: name of the engagement
        type:
          type: string
          description: engagement type
        startDate:
          type: string
          description: Start date and time.
          format: date-time
        endDate:
          type: string
          description: End date and time.
          format: date-time
        submittedOn:
          type: string
          format: date-time
        submittedBy:
          type: string
        uuid:
          type: string
          description: engagement id
          format: uuid
    UpdateApprovalRequest:
      type: object
      properties:
        comment:
          maxLength: 140
          minLength: 1
          type: string
          description: comment of the approver
    CreateEngagementApprovalRequest:
      type: object
      properties:
        engagementUuid:
          type: string
          description: uuid of the engagement
          format: uuid
    ApprovalDetails:
      type: object
      properties:
        approvalStatus:
          $ref: '#/components/schemas/approval-status'
        approvalId:
          type: string
          format: uuid
        submittedBy:
          type: string
          description: the user submitting the engagement request
        submittedOn:
          type: string
          description: the date time when the engagement was submitted
          format: date-time
        numberOfApprovalsProvided:
          type: integer
          description: total number of approvals provided so far
        totalNumberOfApprovalsNeeded:
          type: integer
          description: total number of approvals needed
        approvalRecords:
          type: array
          items:
            $ref: '#/components/schemas/approval-record'
        canApprove:
          type: boolean
          description: a boolean to indicate whether the user can approve this engagement
        canReject:
          type: boolean
          description: a boolean to indicate whether the user can reject this engagement
    EngagementTemplate:
      required:
      - contentPath
      - locale
      - repositoryId
      type: object
      properties:
        repositoryId:
          type: string
          description: The unique ID of the repository in which the engagement content
            is stored externally.
        contentPath:
          type: string
          description: A unique reference path of the engagement template which is
            stored externally within a repository.
        locale:
          maxLength: 5
          type: string
          description: The template locale.
    EngagementType:
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the engagement type stored during the creating process
          format: uuid
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: "Unique key that drives what is the engagement type, this key\
            \ will be used to create the engagement and also during provisioning to\
            \ inform whether it is new or existing engagement type"
        title:
          maxLength: 30
          minLength: 1
          type: string
          description: Friendly name to be displayed on both Engage App and Retail
            App
        parentType:
          description: Optional object with same structure as engagement type.
          allOf:
          - $ref: '#/components/schemas/EngagementType'
          - type: object
      description: Engagement Type
    EngagementTypeResource:
      required:
      - activeByDefault
      - engagement
      - title
      - userPreferenceEnabled
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the engagement type stored during the creating process
          format: uuid
        engagement:
          maxLength: 50
          minLength: 1
          type: string
          description: "Unique key that drives what is the engagement type, this key\
            \ will be used to create the engagement and also during provisioning to\
            \ inform whether it is new or existing engagement type"
        title:
          maxLength: 30
          minLength: 1
          type: string
          description: Friendly name to be displayed on both Engage App and Retail
            App
        description:
          maxLength: 120
          minLength: 0
          type: string
          description: "Friendly description to be displayed on Engage App, only the\
            \ description of the parent is displayed"
        userPreferenceEnabled:
          type: boolean
          description: "Inform whether the Engagement Type is manageable by the bank\
            \ customer or not. In case it is true, The bank customer can select their\
            \ engagement preferences (opti-in/opt-out) via Banking apps"
        activeByDefault:
          type: boolean
          description: Inform whether the Engagement Type toggle is enable or disable
            by default. Mainly this will drive the Banking apps to display or not
            the opt-in or opt-out option
        channels:
          type: array
          description: An object array of Strings to inform what are the available
            channels for the Engagement Type
          items:
            type: string
        subTypes:
          type: array
          description: Optional object with the same structure of the parent Engagement
            Type. It is recursive relationship with the parent meaning that all the
            properties follows the same rules of the parent Engagement Type
          items:
            required:
            - activeByDefault
            - engagement
            - title
            - userPreferenceEnabled
            - uuid
            type: object
            properties:
              uuid:
                type: string
                description: UUID of the engagement type stored during the creating
                  process
                format: uuid
              engagement:
                maxLength: 50
                minLength: 1
                type: string
                description: "Unique key that drives what is the engagement type,\
                  \ this key will be used to create the engagement and also during\
                  \ provisioning to inform whether it is new or existing engagement\
                  \ type"
              title:
                maxLength: 30
                minLength: 1
                type: string
                description: Friendly name to be displayed on both Engage App and
                  Retail App
              userPreferenceEnabled:
                type: boolean
                description: "Inform whether the Engagement Type is manageable by\
                  \ the bank customer or not. In case it is true, The bank customer\
                  \ can select their engagement preferences (opti-in/opt-out) via\
                  \ Banking apps"
              activeByDefault:
                type: boolean
                description: Inform whether the Engagement Type toggle is enable or
                  disable by default. Mainly this will drive the Banking apps to display
                  or not the opt-in or opt-out option
      description: Describes the Engagement Type resource
    EngagementPreferencesResource:
      description: Engagement Preference
      allOf:
      - $ref: '#/components/schemas/EngagementPreference'
      - type: object
        properties:
          subTypes:
            type: array
            items:
              $ref: '#/components/schemas/EngagementPreference'
    EngagementPreference:
      required:
      - active
      - engagement
      - engagementTypeId
      - title
      type: object
      properties:
        id:
          type: string
          format: uuid
        engagementTypeId:
          type: string
          format: uuid
        engagement:
          maxLength: 255
          minLength: 1
          type: string
        title:
          maxLength: 255
          minLength: 1
          type: string
        active:
          type: boolean
    EngagementPreferencePostRequest:
      required:
      - active
      - engagementTypeId
      type: object
      properties:
        engagementTypeId:
          type: string
          format: uuid
        active:
          type: boolean
    EngagementPreferencePutRequest:
      required:
      - active
      type: object
      properties:
        active:
          type: boolean
    MetricClickPostRequest:
      required:
      - engagement
      type: object
      properties:
        engagement:
          type: string
          description: Id of the engagement.
          format: uuid
          example: e4e51d48-21e8-42e8-bd2d-0000a56ff360
        creative:
          type: string
          description: Id of the creative.
          format: uuid
          example: 808be33f-85c0-412a-8dc8-56926b2afe00
    BadRequestError:
      title: BadRequestError
      required:
      - key
      - message
      type: object
      properties:
        message:
          minLength: 1
          type: string
          description: Any further information
        key:
          minLength: 1
          type: string
          description: Error summary
        errors:
          type: array
          description: Detailed error information
          items:
            $ref: '#/components/schemas/error-item'
    UnauthorizedError:
      title: UnauthorizedError
      required:
      - key
      - message
      type: object
      properties:
        message:
          minLength: 1
          type: string
          description: Any further information
        key:
          minLength: 1
          type: string
          description: Error summary
        errors:
          type: array
          description: Detailed error information
          items:
            $ref: '#/components/schemas/error-item'
    NotFoundError:
      title: NotFoundError
      required:
      - key
      - message
      type: object
      properties:
        message:
          minLength: 1
          type: string
          description: Any further information
        key:
          minLength: 1
          type: string
          description: Error summary
        errors:
          type: array
          description: Detailed error information
          items:
            $ref: '#/components/schemas/error-item'
    ConflictError:
      title: ConflictError
      required:
      - key
      - message
      type: object
      properties:
        message:
          minLength: 1
          type: string
          description: Any further information
        key:
          minLength: 1
          type: string
          description: Error summary
        errors:
          type: array
          description: Detailed error information
          items:
            $ref: '#/components/schemas/error-item'
    ForbiddenError:
      title: ForbiddenError
      required:
      - key
      - message
      type: object
      properties:
        message:
          minLength: 1
          type: string
          description: Any further information
        key:
          minLength: 1
          type: string
          description: Error summary
        errors:
          type: array
          description: Detailed error information
          items:
            $ref: '#/components/schemas/error-item'
    ErrorItem:
      title: ErrorItem
      required:
      - key
      - message
      type: object
      properties:
        message:
          minLength: 1
          type: string
          description: Any further information.
        key:
          minLength: 1
          type: string
          description: "{capability-name}.api.{api-key-name}. For generated validation\
            \ errors this is the path in the document the error resolves to. e.g.\
            \ object name + '.' + field"
        context:
          title: Context
          type: object
          additionalProperties:
            type: string
          description: Context can be anything used to construct localised messages.
    error:
      title: Error
      required:
      - key
      - message
      type: object
      properties:
        message:
          minLength: 1
          type: string
          description: Any further information
        key:
          minLength: 1
          type: string
          description: Error summary
        errors:
          type: array
          description: Detailed error information
          items:
            $ref: '#/components/schemas/error-item'
    simple-error:
      title: SimpleError
      type: object
      properties:
        message:
          minLength: 1
          type: string
          description: Any further information
        key:
          minLength: 1
          type: string
          description: Error summary
    engagement-base-resource:
      required:
      - endDate
      - locale
      - name
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
        uuid:
          type: string
          format: uuid
        version:
          type: integer
        locale:
          maxLength: 20
          minLength: 1
          type: string
        startDate:
          type: string
          description: Start date and time.
          format: date-time
        endDate:
          type: string
          description: End date and time.
          format: date-time
        audience:
          $ref: '#/components/schemas/Audience'
        channels:
          type: array
          description: Channels of this engagement.
          items:
            $ref: '#/components/schemas/Channel'
    engagement-resource:
      allOf:
      - $ref: '#/components/schemas/EngagementBaseResource'
      - required:
        - audience
        - channels
        - status
        - uuid
        - version
        type: object
        properties:
          status:
            $ref: '#/components/schemas/engagement-status'
          engagementType:
            $ref: '#/components/schemas/engagement-type'
          approvalDetailsList:
            type: array
            items:
              $ref: '#/components/schemas/approval-details'
          state:
            $ref: '#/components/schemas/engagement-state'
    engagement-state-request-resource:
      required:
      - state
      type: object
      properties:
        state:
          $ref: '#/components/schemas/engagement-state'
    engagement-request-resource:
      type: object
      properties:
        engagementTypeUuid:
          type: string
          format: uuid
      allOf:
      - $ref: '#/components/schemas/engagement-base-resource'
    engagement-to-display-resource:
      allOf:
      - $ref: '#/components/schemas/engagement-base-resource'
      - required:
        - approvalStatus
        - status
        - uuid
        - version
        type: object
        properties:
          hasChanges:
            type: boolean
          metrics:
            $ref: '#/components/schemas/ConsolidatedMetricsResource'
          status:
            $ref: '#/components/schemas/engagement-status'
          approvalStatus:
            $ref: '#/components/schemas/approval-status'
          engagementType:
            $ref: '#/components/schemas/engagement-type'
          state:
            $ref: '#/components/schemas/engagement-state'
    engagement-channel-type:
      type: string
      description: The channel type.
      enum:
      - banner
      - message-center
      - push
    banner-channel:
      description: Banner Channel
      allOf:
      - $ref: '#/components/schemas/Channel'
      - type: object
        properties:
          targetUrl:
            maxLength: 2000
            type: string
            description: |
              When deepLinkingEnabled is false, targetUrl will be validated to have
              a proper HTTP url containing protocol and domain.
              When deepLinkingEnabled is true, targetUrl wont be validated and can have
              relative paths without domain and protocol.
            example: https://www.backbase.com/home
          targetUrlDisplayMode:
            $ref: '#/components/schemas/TargetUrlDisplayModeResource'
          priority:
            type: string
            description: |
              The priority of the given banner. Banners from eligible engagements "compete" with one another based on this setting,
              where high-priority banners have a higher priority over the ones with a lower priority.
            enum:
            - low
            - medium
            - high
          creatives:
            type: array
            description: Creatives of this banner.
            items:
              $ref: '#/components/schemas/CreativeResource'
          campaignSlots:
            type: array
            description: Engagement slots of this banner.
            items:
              $ref: '#/components/schemas/CampaignSlot'
          startDate:
            type: string
            description: Start date and time.
            format: date-time
          endDate:
            type: string
            description: End date and time.
            format: date-time
          deepLinkingEnabled:
            type: boolean
            description: "Indicates if deep-linking id enabled or not. We can't solely\
              \ rely on the \nexisting of route object, because it's possible the\
              \ targetUrl contains a deep-link\nbut route field is not provided for\
              \ mobile. But when the request contains route\nthen deepLinkingEnabled\
              \ must be true.\n"
          routing:
            $ref: '#/components/schemas/Routing'
    message-center-channel:
      allOf:
      - $ref: '#/components/schemas/Channel'
      - type: object
        properties:
          topicId:
            maxLength: 36
            type: string
            description: The topic ID to use with this message.
          draftContentId:
            maxLength: 200
            type: string
            description: The engagement template ID.
          draftRepositoryId:
            maxLength: 200
            type: string
            description: The repository ID of the engagement template.
          scheduledAt:
            type: string
            description: Indicates when this message should be sent to the communication-service.
            format: date-time
          deliveredAt:
            type: string
            description: Indicates when this message was delivered.
            format: date-time
    push-channel:
      allOf:
      - $ref: '#/components/schemas/Channel'
      - type: object
        properties:
          channelSettings:
            type: object
            additionalProperties:
              type: object
              description: Simple key/value pair
            description: The channel settings for push.
          draftContentId:
            maxLength: 200
            type: string
            description: The engagement template ID.
          draftRepositoryId:
            maxLength: 200
            type: string
            description: The repository ID of the engagement template.
          scheduledAt:
            type: string
            description: Indicates when this message should be sent to the communication-service.
            format: date-time
          deliveredAt:
            type: string
            description: Indicates when this message was delivered.
            format: date-time
          deepLinkingEnabled:
            type: boolean
            description: "Indicates if deep-linking id enabled or not. We can't solely\
              \ rely on the \nexisting of route object, because it's possible the\
              \ targetUrl contains a deep-link\nbut route field is not provided for\
              \ mobile. But when the request contains route\nthen deepLinkingEnabled\
              \ must be true.\n"
          targetUrl:
            maxLength: 2000
            type: string
            description: |
              When deepLinkingEnabled is false, targetUrl will be validated to have
              a proper HTTP url containing protocol and domain.
              When deepLinkingEnabled is true, targetUrl wont be validated and can have
              relative paths without domain and protocol.
            example: https://www.backbase.com/home
          routing:
            $ref: '#/components/schemas/Routing'
    overlays-channel:
      allOf:
      - $ref: '#/components/schemas/Channel'
      - type: object
        properties:
          startDate:
            type: string
            description: Start date and time.
            format: date-time
          endDate:
            type: string
            description: End date and time.
            format: date-time
          draftContentId:
            maxLength: 200
            type: string
            description: The engagement template ID.
          draftRepositoryId:
            maxLength: 200
            type: string
            description: The repository ID of the engagement template.
          deliveredAt:
            type: string
            description: Indicates when this channel was delivered.
            format: date-time
          severityLevel:
            maxLength: 10
            type: integer
            description: "Overlay priority, identifies priority for overlay."
            example: 1
          placement:
            maxLength: 50
            type: string
            description: Unique overlay location identifier event id or screen id
              example.
            example: after_login
          channelInteractions:
            type: array
            description: Interaction items of the overlay.
            items:
              $ref: '#/components/schemas/ChannelInteraction'
    consolidated-metrics-resource:
      type: object
      properties:
        clicks:
          type: integer
        impressions:
          type: integer
        extendedMetrics:
          type: boolean
          description: indicate whether client has to fetch aggregated clicks and
            impressions count from metrics service
    audience-type:
      type: string
      description: The audience type.
      enum:
      - none
      - id
      - all
    creative-resource-item:
      required:
      - content
      - interaction
      - utmConfig
      type: object
      properties:
        utmConfig:
          $ref: '#/components/schemas/utmConfig'
        interaction:
          $ref: '#/components/schemas/interaction'
        content:
          $ref: '#/components/schemas/content'
    utmConfig:
      required:
      - creative
      - engagement
      type: object
      properties:
        engagement:
          type: string
          description: Universally Unique Identifier (UUID) of the engagement
          format: uuid
        creative:
          type: string
          description: Universally Unique Identifier (UUID) of the creative
          format: uuid
      description: The Urchin Tracking Module (UTM) config of a creative that is used
        to track the engagement it belongs to.
    interaction:
      type: object
      properties:
        displayMode:
          type: string
          description: Configures how the target URL should be displayed.
          default: blank
        url:
          type: string
          description: The external URL that is mapped with the creative to enable
            navigation upon user click.
        routing:
          $ref: '#/components/schemas/Routing'
      description: Interaction with the external URL
    content:
      required:
      - body
      - dimensions
      type: object
      properties:
        dimensions:
          type: string
          description: The dimensions of the creative's asset. Users can choose a
            slot with specific dimensions (width * height) when uploading the asset.
            The corresponding slot ID is then used to display the banner.
        body:
          type: string
          description: Base64-encoded content stream of the creative
      description: Content of the creative
    selected-banner-resource:
      required:
      - creative
      - targetUrl
      type: object
      properties:
        bannerUrl:
          type: string
          description: The url of the banner.
          example: https://www.backbase.com/home
        routing:
          $ref: '#/components/schemas/Routing'
        utmConfig:
          type: object
          properties:
            engagement:
              type: string
              description: Id of the engagement.
              format: uuid
              example: e4e51d48-21e8-42e8-bd2d-0000a56ff360
            creative:
              type: string
              description: Id of the creative.
              format: uuid
              example: 808be33f-85c0-412a-8dc8-56926b2afe00
            destination:
              type: string
              description: "Destination of the API call, can be engagement or metric."
              example: metric|engagement
        targetUrl:
          type: string
          description: "Deprecated, use the property 'bannerUrl' instead."
          example: http://www.backbase.com/home
          deprecated: true
        targetUrlDisplayMode:
          $ref: '#/components/schemas/TargetUrlDisplayModeResource'
        creative:
          $ref: '#/components/schemas/SelectedCreativeResource'
    metrics-resource:
      required:
      - consolidated
      - creatives
      - metrics
      - unit
      type: object
      properties:
        unit:
          type: string
        metrics:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ClicksAndImpressionsResource'
        consolidated:
          $ref: '#/components/schemas/ClicksAndImpressionsResource'
        creatives:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ClicksAndImpressionsResource'
        extendedMetrics:
          type: boolean
          description: indicate whether client has to fetch aggregated clicks and
            impressions count from metrics service
    clicks-and-impressions-resource:
      type: object
      properties:
        clicks:
          type: integer
        impressions:
          type: integer
    base-creative-resource:
      required:
      - dimensions
      - filename
      - uuid
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        dimensions:
          maxLength: 15
          type: string
          description: Dimensions of the creative's asset.
          example: 300x200
        filename:
          maxLength: 255
          type: string
          description: The filename of the creative asset
    creative-resource:
      allOf:
      - $ref: '#/components/schemas/BaseCreativeResource'
      - required:
        - draftContentId
        - draftRepositoryId
        type: object
        properties:
          draftContentId:
            maxLength: 200
            type: string
            description: ID of the creative's content
          draftRepositoryId:
            maxLength: 200
            type: string
            description: ID of the creative's repository
    selected-creative-resource:
      allOf:
      - $ref: '#/components/schemas/BaseCreativeResource'
      - required:
        - content
        type: object
        properties:
          content:
            type: string
            description: Base64 encoded contents
    campaign-slot:
      type: object
      properties:
        portalName:
          maxLength: 255
          type: string
        pageName:
          maxLength: 255
          type: string
        widgetName:
          maxLength: 255
          type: string
        creative:
          $ref: '#/components/schemas/CreativeResource'
      description: Specifies the space where the banner should be displayed.
    target-url-display-mode-resource:
      type: string
      description: Configures how the target URL should be displayed.
      enum:
      - self
      - blank
    general-notification-parent:
      required:
      - id
      - name
      type: object
      properties:
        id:
          maxLength: 100
          type: string
        name:
          maxLength: 200
          type: string
    general-notification-summary:
      description: Summary of all General Notifications
      allOf:
      - $ref: '#/components/schemas/GeneralNotificationParent'
      - required:
        - deliveryOptions
        - id
        - name
        type: object
        properties:
          deliveryOptions:
            type: array
            description: "A list of delivery option/channel codes for this general\
              \ notification. Must contain at least one element, otherwise a general\
              \ notification does not make sense."
            items:
              type: string
    general-notification:
      description: Details of a General Notification
      allOf:
      - $ref: '#/components/schemas/GeneralNotificationParent'
      - required:
        - id
        - name
        - preferencesEnabled
        type: object
        properties:
          preferencesEnabled:
            type: boolean
            description: if this general notification manageable by end user in their
              app
          push:
            $ref: '#/components/schemas/PushMessagePayload'
          inAppNotification:
            $ref: '#/components/schemas/NotificationMessagePayload'
    notification-message-payload:
      required:
      - channelSettings
      - engagementTemplates
      type: object
      properties:
        engagementTemplates:
          type: array
          items:
            $ref: '#/components/schemas/EngagementTemplate'
        channelSettings:
          $ref: '#/components/schemas/ChannelSettings'
      description: In-app notification message payload
    channel-settings:
      required:
      - origin
      - severityLevel
      type: object
      properties:
        severityLevel:
          $ref: '#/components/schemas/SeverityLevel'
        origin:
          maxLength: 200
          minLength: 1
          type: string
          description: Name of the capability where the notification originates from
      description: Channel-specific settings for Engage App to generate preview.
    severity-level:
      type: string
      description: The notification severity level.
      enum:
      - ALERT
      - WARNING
      - SUCCESS
      - INFO
    push-message-payload:
      required:
      - engagementTemplates
      type: object
      properties:
        engagementTemplates:
          type: array
          items:
            $ref: '#/components/schemas/EngagementTemplate'
      description: "Notification, customizable for Android and IOS separately"
    notification-preference-get:
      required:
      - notificationPreferences
      - totalCount
      type: object
      properties:
        totalCount:
          type: number
        notificationPreferences:
          type: array
          items:
            $ref: '#/components/schemas/NotificationPreference'
    notification-preference-post-request:
      required:
      - active
      - channels
      - generalNotificationId
      type: object
      properties:
        generalNotificationId:
          type: string
          description: A human-friendly unique name of a general notification to which
            this preference is bound.
        active:
          type: boolean
          description: If this preference is in effect or not.
        channels:
          type: array
          description: A selection of digital communications channels the user wants
            to be notified through.
          items:
            $ref: '#/components/schemas/DeliveryChannelRequest'
        eRef:
          type: string
          description: "The unique reference (UUID) for the entity used to create\
            \ an itemized notification preference. If this property is set in the\
            \ 'create notification preference' payload, 'eType' must also be set.\
            \ Otherwise, backend rejects the payload as invalid."
          format: uuid
          example: 6be7c465-37a7-4f1e-98b7-15d6c636c566
        conditions:
          type: object
          additionalProperties:
            type: object
          description: Custom notification preferences settings in key/value pairs
            that are user-configurable.
          example:
            amount: 100
    notification-preference-put-batch-request:
      required:
      - active
      - channels
      type: object
      properties:
        generalNotificationId:
          type: string
          description: A human-friendly unique name of a general notification to which
            this preference is bound. Should be present only for creating operation.
        id:
          type: string
          description: Identifier of the notification preference to update. Should
            be present only for updating operation.
          format: uuid
        active:
          type: boolean
          description: If this preference is in effect or not.
        channels:
          type: array
          description: A selection of digital communications channels the user wants
            to be notified through.
          items:
            $ref: '#/components/schemas/DeliveryChannelRequest'
        eRef:
          type: string
          description: "The unique reference (UUID) for the entity used to create\
            \ an itemized notification preference. If this property is set in the\
            \ 'create notification preference' payload, 'eType' must also be set.\
            \ Otherwise, backend rejects the payload as invalid."
          format: uuid
          example: 6be7c465-37a7-4f1e-98b7-15d6c636c566
        conditions:
          type: object
          additionalProperties:
            type: object
          description: Custom notification preferences settings in key/value pairs
            that are user-configurable.
          example:
            amount: 100
    notification-preference-put-request:
      required:
      - active
      - channels
      type: object
      properties:
        active:
          type: boolean
          description: If this preference is in effect or not.
        channels:
          type: array
          description: A selection of digital communications channels the user wants
            to enable or disable.
          items:
            $ref: '#/components/schemas/DeliveryChannelRequest'
        conditions:
          type: object
          additionalProperties:
            type: object
          description: Custom notification preferences settings in key/value pairs
            that are user-configurable.
          example:
            amount: 100
    notification-preference:
      required:
      - active
      - channels
      - generalNotificationId
      type: object
      properties:
        id:
          type: string
          description: Unique ID (UUID)
          format: uuid
        generalNotificationId:
          type: string
          description: A human-friendly unique name of a general notification to which
            this preference is bound.
        active:
          type: boolean
          description: If this preference is in effect or not.
        channels:
          type: array
          description: A selection of digital communications channels the user wants
            to be notified through.
          items:
            $ref: '#/components/schemas/delivery-channel'
        userConditions:
          $ref: '#/components/schemas/user-conditions'
        createdOn:
          type: string
          description: Creation time.
          format: date-time
        lastUpdatedAt:
          type: string
          description: Last update time.
          format: date-time
    delivery-channel-request:
      required:
      - channel
      - enabled
      type: object
      properties:
        channel:
          type: string
          description: Delivery channel representation
          example: push
        enabled:
          type: boolean
          description: If this delivery channel is active (enabled) or not.
    delivery-channel:
      required:
      - channel
      - enabled
      - userCanChange
      type: object
      properties:
        channel:
          type: string
          description: Delivery channel representation
          example: email
        enabled:
          type: boolean
          description: If this delivery channel is active (enabled) or not.
        userCanChange:
          type: boolean
          description: If the user can enable/disable this channel or not.
    user-conditions:
      required:
      - eType
      type: object
      properties:
        eType:
          type: string
          description: "The entity type used to create a notification preference for\
            \ a general notification. Front-end can rely on this field to build logic.\
            \ For example, render an account selector if the eType == 'arrangement').\
            \ Also, this parameter is mandatory when creating an itemized user notification\
            \ preference."
          example: arrangement
        eRef:
          type: string
          description: "The unique reference (UUID) for the entity used to create\
            \ an itemized notification preference. If this property is set in the\
            \ 'create notification preference' payload, 'eType' must also be set.\
            \ Otherwise, backend rejects the payload as invalid."
          format: uuid
          example: 6be7c465-37a7-4f1e-98b7-15d6c636c566
        conditions:
          type: object
          additionalProperties:
            type: object
          description: Custom notification preferences settings in key/value pairs
            that are user-configurable.
          example:
            amount: 100
      description: Custom notification preferences settings.
    engagement-approval-resource:
      required:
      - endDate
      - name
      - pendingSince
      - startDate
      - submittedBy
      - type
      - uuid
      type: object
      properties:
        name:
          type: string
          description: name of the engagement
        type:
          type: string
          description: engagement type
        startDate:
          type: string
          description: Start date and time.
          format: date-time
        endDate:
          type: string
          description: End date and time.
          format: date-time
        submittedOn:
          type: string
          format: date-time
        submittedBy:
          type: string
        uuid:
          type: string
          description: engagement id
          format: uuid
    update-approval-request:
      type: object
      properties:
        comment:
          maxLength: 140
          minLength: 1
          type: string
          description: comment of the approver
    create-engagement-approval-request:
      type: object
      properties:
        engagementUuid:
          type: string
          description: uuid of the engagement
          format: uuid
    approval-details:
      type: object
      properties:
        approvalStatus:
          $ref: '#/components/schemas/approval-status'
        approvalId:
          type: string
          format: uuid
        submittedBy:
          type: string
          description: the user submitting the engagement request
        submittedOn:
          type: string
          description: the date time when the engagement was submitted
          format: date-time
        numberOfApprovalsProvided:
          type: integer
          description: total number of approvals provided so far
        totalNumberOfApprovalsNeeded:
          type: integer
          description: total number of approvals needed
        approvalRecords:
          type: array
          items:
            $ref: '#/components/schemas/approval-record'
        canApprove:
          type: boolean
          description: a boolean to indicate whether the user can approve this engagement
        canReject:
          type: boolean
          description: a boolean to indicate whether the user can reject this engagement
    engagement-template:
      required:
      - contentPath
      - locale
      - repositoryId
      type: object
      properties:
        repositoryId:
          type: string
          description: The unique ID of the repository in which the engagement content
            is stored externally.
        contentPath:
          type: string
          description: A unique reference path of the engagement template which is
            stored externally within a repository.
        locale:
          maxLength: 5
          type: string
          description: The template locale.
    engagement-type:
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the engagement type stored during the creating process
          format: uuid
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: "Unique key that drives what is the engagement type, this key\
            \ will be used to create the engagement and also during provisioning to\
            \ inform whether it is new or existing engagement type"
        title:
          maxLength: 30
          minLength: 1
          type: string
          description: Friendly name to be displayed on both Engage App and Retail
            App
        parentType:
          description: Optional object with same structure as engagement type.
          allOf:
          - $ref: '#/components/schemas/EngagementType'
          - type: object
      description: Engagement Type
    engagement-type-resource:
      required:
      - activeByDefault
      - engagement
      - title
      - userPreferenceEnabled
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the engagement type stored during the creating process
          format: uuid
        engagement:
          maxLength: 50
          minLength: 1
          type: string
          description: "Unique key that drives what is the engagement type, this key\
            \ will be used to create the engagement and also during provisioning to\
            \ inform whether it is new or existing engagement type"
        title:
          maxLength: 30
          minLength: 1
          type: string
          description: Friendly name to be displayed on both Engage App and Retail
            App
        description:
          maxLength: 120
          minLength: 0
          type: string
          description: "Friendly description to be displayed on Engage App, only the\
            \ description of the parent is displayed"
        userPreferenceEnabled:
          type: boolean
          description: "Inform whether the Engagement Type is manageable by the bank\
            \ customer or not. In case it is true, The bank customer can select their\
            \ engagement preferences (opti-in/opt-out) via Banking apps"
        activeByDefault:
          type: boolean
          description: Inform whether the Engagement Type toggle is enable or disable
            by default. Mainly this will drive the Banking apps to display or not
            the opt-in or opt-out option
        channels:
          type: array
          description: An object array of Strings to inform what are the available
            channels for the Engagement Type
          items:
            type: string
        subTypes:
          type: array
          description: Optional object with the same structure of the parent Engagement
            Type. It is recursive relationship with the parent meaning that all the
            properties follows the same rules of the parent Engagement Type
          items:
            required:
            - activeByDefault
            - engagement
            - title
            - userPreferenceEnabled
            - uuid
            type: object
            properties:
              uuid:
                type: string
                description: UUID of the engagement type stored during the creating
                  process
                format: uuid
              engagement:
                maxLength: 50
                minLength: 1
                type: string
                description: "Unique key that drives what is the engagement type,\
                  \ this key will be used to create the engagement and also during\
                  \ provisioning to inform whether it is new or existing engagement\
                  \ type"
              title:
                maxLength: 30
                minLength: 1
                type: string
                description: Friendly name to be displayed on both Engage App and
                  Retail App
              userPreferenceEnabled:
                type: boolean
                description: "Inform whether the Engagement Type is manageable by\
                  \ the bank customer or not. In case it is true, The bank customer\
                  \ can select their engagement preferences (opti-in/opt-out) via\
                  \ Banking apps"
              activeByDefault:
                type: boolean
                description: Inform whether the Engagement Type toggle is enable or
                  disable by default. Mainly this will drive the Banking apps to display
                  or not the opt-in or opt-out option
      description: Describes the Engagement Type resource
    engagement-preference-resource:
      description: Engagement Preference
      allOf:
      - $ref: '#/components/schemas/EngagementPreference'
      - type: object
        properties:
          subTypes:
            type: array
            items:
              $ref: '#/components/schemas/EngagementPreference'
    engagement-preference:
      required:
      - active
      - engagement
      - engagementTypeId
      - title
      type: object
      properties:
        id:
          type: string
          format: uuid
        engagementTypeId:
          type: string
          format: uuid
        engagement:
          maxLength: 255
          minLength: 1
          type: string
        title:
          maxLength: 255
          minLength: 1
          type: string
        active:
          type: boolean
    engagement-preference-post-request:
      required:
      - active
      - engagementTypeId
      type: object
      properties:
        engagementTypeId:
          type: string
          format: uuid
        active:
          type: boolean
    engagement-preference-put-request:
      required:
      - active
      type: object
      properties:
        active:
          type: boolean
    metric-click-post-request-resource:
      required:
      - engagement
      type: object
      properties:
        engagement:
          type: string
          description: Id of the engagement.
          format: uuid
          example: e4e51d48-21e8-42e8-bd2d-0000a56ff360
        creative:
          type: string
          description: Id of the creative.
          format: uuid
          example: 808be33f-85c0-412a-8dc8-56926b2afe00
    bad-request-error:
      title: BadRequestError
      required:
      - key
      - message
      type: object
      properties:
        message:
          minLength: 1
          type: string
          description: Any further information
        key:
          minLength: 1
          type: string
          description: Error summary
        errors:
          type: array
          description: Detailed error information
          items:
            $ref: '#/components/schemas/error-item'
    unauthorized-error:
      title: UnauthorizedError
      required:
      - key
      - message
      type: object
      properties:
        message:
          minLength: 1
          type: string
          description: Any further information
        key:
          minLength: 1
          type: string
          description: Error summary
        errors:
          type: array
          description: Detailed error information
          items:
            $ref: '#/components/schemas/error-item'
    not-found-error:
      title: NotFoundError
      required:
      - key
      - message
      type: object
      properties:
        message:
          minLength: 1
          type: string
          description: Any further information
        key:
          minLength: 1
          type: string
          description: Error summary
        errors:
          type: array
          description: Detailed error information
          items:
            $ref: '#/components/schemas/error-item'
    conflict-error:
      title: ConflictError
      required:
      - key
      - message
      type: object
      properties:
        message:
          minLength: 1
          type: string
          description: Any further information
        key:
          minLength: 1
          type: string
          description: Error summary
        errors:
          type: array
          description: Detailed error information
          items:
            $ref: '#/components/schemas/error-item'
    forbidden-error:
      title: ForbiddenError
      required:
      - key
      - message
      type: object
      properties:
        message:
          minLength: 1
          type: string
          description: Any further information
        key:
          minLength: 1
          type: string
          description: Error summary
        errors:
          type: array
          description: Detailed error information
          items:
            $ref: '#/components/schemas/error-item'
    error-item:
      title: ErrorItem
      required:
      - key
      - message
      type: object
      properties:
        message:
          minLength: 1
          type: string
          description: Any further information.
        key:
          minLength: 1
          type: string
          description: "{capability-name}.api.{api-key-name}. For generated validation\
            \ errors this is the path in the document the error resolves to. e.g.\
            \ object name + '.' + field"
        context:
          title: Context
          type: object
          additionalProperties:
            type: string
          description: Context can be anything used to construct localised messages.
    engagement-state:
      maxLength: 25
      type: string
      description: |
        Describes the current state of the engagement. Possible values are:
        DRAFT When the engagement is not launched yet
        SCHEDULED When the engagement is launched but start date is in the future
        LIVE When the engagement is launched and active
        PAUSED When the engagement is paused
        ENDED When the end date is passed
      example: LIVE
    Routing:
      type: object
      properties:
        where-to:
          maxLength: 64
          type: string
          description: "String representing the target destination in the mobile apps.\
            \ \nSince Engagement by design doesn't have insight on how the mobile\
            \ screens\nare organised, \"where-to\" does NOT necessarily correspond\
            \ to any specific screen. \nIt is rather a hint which should be possible\
            \ to map to the correct screen\nby mobile application.\n"
        data:
          type: object
          additionalProperties: true
          description: |
            There are two major distinct use-cases covered by this "data"
            object. First: facilitate routing to an existing resource using its id. This is achieved by populating "data" object
            with the "id" field. Second: facilitate form pre-populating. In this scenario
            there is no existing object that widget could query from the backend.
            In this scenario, the structure of "data" object should conform to the
            JSON schema known to the target screen.
    approval-status:
      type: string
      description: The approval status.
      enum:
      - PENDING
      - APPROVED
      - REJECTED
      - CANCELLED
    approval-record:
      type: object
      properties:
        comment:
          maxLength: 140
          minLength: 1
          type: string
          description: comment provided by approver
        userFullName:
          type: string
          description: full name of the approver
        status:
          $ref: '#/components/schemas/approval-record-status'
        createdAt:
          type: string
          description: Approver update Date
          format: date-time
    engagement-status:
      type: string
      description: "Deprecated, replaced with the field state."
      deprecated: true
      enum:
      - draft
      - final
      - superseded
      - paused
    ChannelInteraction:
      type: object
      properties:
        deepLinkingEnabled:
          type: boolean
          description: "Indicates if deep-linking id enabled or not. We can't solely\
            \ rely on the \nexisting of route object, because it's possible the targetUrl\
            \ contains a deep-link\nbut route field is not provided for mobile. But\
            \ when the request contains route\nthen deepLinkingEnabled must be true.\n"
        url:
          maxLength: 2000
          type: string
          description: |
            When deepLinkingEnabled is false, url will be validated to have
            a proper HTTP url containing protocol and domain.
            When deepLinkingEnabled is true, url wont be validated and can have
            relative paths without domain and protocol.
          example: https://www.backbase.com/home
        actionId:
          maxLength: 200
          type: string
          description: Represents id of the button which users can interact in the
            content card creative.
        displayMode:
          maxLength: 50
          type: string
          description: "Control on how page should be opened upon click (window/tab,\
            \ etc.). Possible values SELF, BLANK"
        routing:
          $ref: '#/components/schemas/Routing'
    approval-record-status:
      type: string
      description: The approval record status.
      enum:
      - APPROVED
      - REJECTED
      - SUBMITTED
      - CANCELLED
  responses:
    "403Forbidden":
      description: If the current user doesn't have sufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            $ref: '#/components/examples/forbidden-error'
    "500InternalServerError":
      description: If a runtime error occurs while processing the request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/simple-error'
          example:
            $ref: '#/components/examples/internal-server-error'
    "400BadRequest":
      description: If one or more request parameters don't comply with the specification
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            $ref: '#/components/examples/bad-request-validation-error'
    "401Unauthorized":
      description: If the authentication credentials provided are invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            $ref: '#/components/examples/unauthorized-error'
    "404NotFound":
      description: Not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            $ref: '#/components/examples/not-found-error'
  parameters:
    projectNameParam:
      name: projectName
      in: query
      description: |
        The name of the project is defined in the remote config.
        A project represents a set of closely related apps that are managed together by a team.
        Therefore, it serves as a high-level node in the remote-config JSON.
      required: true
      style: form
      explode: true
      schema:
        type: string
    appNameParam:
      name: appName
      in: query
      description: "The name of the app is defined in the remote config. \nYour organization\
        \ provides an app to customers, enabling them to conduct financial transactions\
        \ remotely. \nThis app could be a mobile app downloaded from the Apple App\
        \ Store or Google Play Store, or a web app such as a single-page application\
        \ (SPA) or a combination of multiple SPAs.\n"
      required: true
      style: form
      explode: true
      schema:
        type: string
    versionParam:
      name: version
      in: query
      description: |
        The version as defined in the remote config.
        This version will be used to identify the correct version of the app that the user is currently using, so that we can only display creatives relevant to that specific version of the app.
      required: true
      style: form
      explode: true
      schema:
        type: string
    screenIdParam:
      name: screenId
      in: query
      description: "The ID of the part of the application where the campaign slot\
        \ is located. Derived from screenName by default.\nThis is defined in the\
        \ remote config \nFor example, index.\n"
      required: true
      style: form
      explode: true
      schema:
        type: string
    campaignSlotIdParam:
      name: campaignSlotId
      in: query
      description: "The CampaignSlotId is the identifier of the campaign slot. \n\
        It is defined in the remote config. \nFor example, marketing_banner_1.\n"
      required: true
      style: form
      explode: true
      schema:
        type: string
    creativeSizeParam:
      name: size
      in: query
      description: The number of results per page.
      required: false
      style: form
      explode: true
      schema:
        maximum: 3
        minimum: 1
        type: integer
        format: int32
        default: 1
    spaceIdParam:
      name: spaceId
      in: query
      description: |
        A derived key depending on the environment.
        If it is a Portal-based environment, it will be the combination of the portal name, page name, and widget name concatenated with a dot (.) For example, "portalName.pageName.widgetName"
        If it is a Remote-Config-based environment, "projectName" replaces "portalName" and it will be the combination of the project name, app name, and version. For example: "projectName.appName.widgetName"
      required: true
      style: form
      explode: true
      schema:
        type: string
    dimensionsParam:
      name: dimensions
      in: query
      description: Dimensions of the creative for this engagement.
      required: true
      style: form
      explode: true
      schema:
        type: string
    localeParam:
      name: locale
      in: query
      description: The engagement locale.
      required: true
      style: form
      explode: true
      schema:
        type: string
    engagementIdParam:
      name: engagementId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    approvalIdParam:
      name: approvalId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    channelIdParam:
      name: channelId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    orderByParam:
      name: orderBy
      in: query
      description: The Property used to sort the result
      required: false
      style: form
      explode: true
      schema:
        type: string
    directionParam:
      name: direction
      in: query
      description: To determine whether to sort in Ascending or Descending order
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - ASC
        - DESC
    fromParam:
      name: from
      in: query
      description: Specifies the page to start from.
      required: false
      style: form
      explode: true
      schema:
        minimum: 1
        type: integer
        format: int32
        default: 1
    sizeParam:
      name: size
      in: query
      description: The number of the results per page.
      required: false
      style: form
      explode: true
      schema:
        maximum: 100
        minimum: 10
        type: integer
        format: int32
        default: 20
    endDateAfterParam:
      name: endDateAfter
      in: query
      description: Filtering by endDate that is greater than or equal to the given
        value.
      required: false
      style: form
      explode: false
      schema:
        type: string
      example: 2020-12-01T22:22:22.0000Z
    endDateBeforeParam:
      name: endDateBefore
      in: query
      description: Filtering by endDate that is lower than or equal to the given value.
      required: false
      style: form
      explode: false
      schema:
        type: string
      example: 2020-12-01T22:22:22.0000Z
    from:
      name: from
      in: query
      description: zero-based page index in list requests.
      required: false
      style: form
      explode: true
      schema:
        minimum: 0
        type: integer
        format: int32
        default: 0
      example: 0
    size:
      name: size
      in: query
      description: the size of the page to be returned in list requests.
      required: false
      style: form
      explode: true
      schema:
        maximum: 100
        minimum: 1
        type: integer
        format: int32
        default: 25
      example: 25
    name:
      name: name
      in: query
      description: the name string to be returned in the list requests to be searched
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: engagement
    engagementTypeParam:
      name: engagementType
      in: path
      description: the type of engagement
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: custom
    engagementPreferenceUuidParam:
      name: engagementPreferenceUuid
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  examples:
    NotificationPreferencePostResponseExample:
      summary: NotificationPreferencePostResponseExample
      value:
        id: b1ac32e8-a8e6-11eb-bcbc-0242ac130002
        generalNotificationId: account-balance-low
        active: true
        channels:
        - channel: in-app-notification
          enabled: true
          userCanChange: true
        - channel: push
          enabled: true
          userCanChange: true
        userConditions:
          eType: arrangement
          eRef: b1ac32e8-a8e6-11eb-bcbc-0242ac130002
          conditions:
            amount: 5000
        createdOn: 2020-01-17T12:52:34.000+0000
        lastUpdatedAt: 2020-01-17T12:52:34.000+0000
    NotificationPreferenceBusinessBankingPostResponseExample:
      summary: NotificationPreferenceBusinessBankingPostResponseExample
      value:
        id: 9737d520-c4bf-453f-a28f-9ff4eb0e7029
        generalNotificationId: payment-to-approve
        active: true
        channels:
        - channel: in-app-notification
          enabled: true
          userCanChange: false
        - channel: push
          enabled: true
          userCanChange: false
        userConditions:
          eType: null
          eRef: null
          conditions: null
        createdOn: 2022-01-17T12:52:34.000+0000
        lastUpdatedAt: 2022-01-17T12:52:34.000+0000
    NotificationPreferencePutResponseExample:
      summary: NotificationPreferencePutResponseExample
      value:
        id: b1ac32e8-a8e6-11eb-bcbc-0242ac130002
        generalNotificationId: account-balance-low
        active: true
        channels:
        - channel: in-app-notification
          enabled: true
          userCanChange: true
        - channel: push
          enabled: false
          userCanChange: true
        userConditions:
          eType: arrangement
          eRef: b1ac32e8-a8e6-11eb-bcbc-0242ac130002
          conditions:
            amount: 2000
        createdOn: 2020-01-17T12:52:34.000+0000
        lastUpdatedAt: 2020-01-17T12:52:34.000+0000
    EngagementMetricsGetResponseExample:
      summary: EngagementMetricsGetResponseExample
      value:
        unit: null
        metrics:
          "2022-03-21T00:00Z":
            clicks: 0
            impressions: 1
          "2022-03-22T00:00Z":
            clicks: 0
            impressions: 0
          "2022-03-23T00:00Z":
            clicks: 4
            impressions: 1
        consolidated:
          clicks: 0
          impressions: 1
        creatives:
          "808be33f-85c0-412a-8dc8-56926b2afe00":
            clicks: 0
            impressions: 1
    EngagementsGetResponseExample:
      summary: EngagementsGetResponseExample
      value:
      - name: Engagement sample
        uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1154
        version: 1
        locale: en
        startDate: 2022-03-03T00:01:00Z
        endDate: 2022-03-03T23:45:00Z
        audience:
          type: id
          id: 7ef02b1b-35eb-4b23-8cdf-b9e00be4a8d3
        channels:
        - type: banner
          enabled: true
          uuid: 1ae944c1-6053-461d-8270-c9f9360a3dd3
          targetUrl: https://google.com
          targetUrlDisplayMode: blank
          priority: high
          creatives:
          - uuid: aa5f32a0-28e6-45b1-be3a-567cabaef2a0
            dimensions: 328x430
            filename: traveling-with-cards-red.html
            draftContentId: /engagement/c57b9aee-a71c-4cb8-91a0-a036037d70ea/banner/32610c85-4a3e-4f97-8745-34ed78ff3093/dimensions/328x430/0/traveling-with-cards-red.html
            draftRepositoryId: engagement-template-custom
          - uuid: 61689aef-a82c-45ec-b932-1ef0a9d81f62
            dimensions: 328x430
            filename: traveling-with-cards-blue.html
            draftContentId: /engagement/c57b9aee-a71c-4cb8-91a0-a036037d70ea/banner/6a05d039-e7fd-4bb3-83fc-4f883cb549e3/dimensions/328x430/0/traveling-with-cards-blue.html
            draftRepositoryId: engagement-template-custom
          campaignSlots:
          - portalName: retail-app
            pageName: page-index-ezc2na
            widgetName: bb-campaign-space-ang-_-245931b4340d
            creative:
              uuid: aa5f32a0-28e6-45b1-be3a-567cabaef2a0
              dimensions: 328x430
              filename: traveling-with-cards-red.html
              draftContentId: /engagement/c57b9aee-a71c-4cb8-91a0-a036037d70ea/banner/32610c85-4a3e-4f97-8745-34ed78ff3093/dimensions/328x430/0/traveling-with-cards-red.html
              draftRepositoryId: engagement-template-custom
          - portalName: retail-app
            pageName: page-index-ezc2na
            widgetName: bb-campaign-space-ang-_-245931b4341
            creative:
              uuid: 61689aef-a82c-45ec-b932-1ef0a9d81f62
              dimensions: 328x430
              filename: traveling-with-cards-blue.html
              draftContentId: /engagement/c57b9aee-a71c-4cb8-91a0-a036037d70ea/banner/6a05d039-e7fd-4bb3-83fc-4f883cb549e3/dimensions/328x430/0/traveling-with-cards-blue.html
              draftRepositoryId: engagement-template-custom
          startDate: 2022-03-03T00:01:00Z
          endDate: 2022-03-03T23:45:00Z
        hasChanges: false
        metrics:
          clicks: 0
          impressions: 0
        status: final
        state: LIVE
        approvalStatus: APPROVED
        engagementType:
          uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1153
          title: Custom
          name: custom
      - name: MC_Engagement_126542
        uuid: 6cecb120-3b24-42b9-9b1a-808d97d06227
        version: 1
        locale: en
        startDate: 2022-03-03T00:01:00Z
        endDate: 2022-03-03T23:45:00Z
        audience:
          type: id
          id: 7ef02b1b-35eb-4b23-8cdf-b9e00be4a8d3
        channels:
        - type: message-center
          enabled: true
          uuid: 5231f345-6127-4070-b534-737478320ca1
          topicId: 06844396-9260-43ee-8312-995d10d411cf
          draftContentId: /engagement/lot-of-cards-message-center/message-center/6cecb120-3b24-42b9-9b1a-808d97d06227/1/engagementTemplate
          draftRepositoryId: engagement-template-custom
          scheduledAt: 2022-03-03T00:15:00Z
          deliveredAt: 2022-03-03T21:02:28Z
        hasChanges: false
        metrics: null
        status: final
        state: LIVE
        approvalStatus: APPROVED
        engagementType:
          uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1153
          title: Saving
          parentType:
            uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1153
            title: Offers
            name: offers
      - name: Banner_Engagement_193459
        uuid: de575e14-ceb0-4ad4-8419-afdb23aa3f66
        version: 1
        locale: en
        startDate: 2022-03-04T00:01:00Z
        endDate: 2022-03-04T23:45:00Z
        audience:
          type: id
          id: 7ef02b1b-35eb-4b23-8cdf-b9e00be4a8d3
        channels:
        - type: banner
          enabled: true
          uuid: 1428c148-cb91-4eb2-95bd-f789d1cb8f25
          targetUrl: https://google.com
          targetUrlDisplayMode: blank
          priority: high
          creatives:
          - uuid: 39501cfe-2d8b-493c-96ce-cba768f44c47
            dimensions: 328x430
            filename: traveling-with-cards-red.html
            draftContentId: /engagement/de575e14-ceb0-4ad4-8419-afdb23aa3f66/banner/6b895647-937e-4b16-8042-97ba1efc7396/dimensions/328x430/0/traveling-with-cards-red.html
            draftRepositoryId: engagement-template-custom
          - uuid: ee69d525-8925-4e3d-835e-ad9919abc66e
            dimensions: 328x430
            filename: traveling-with-cards-blue.html
            draftContentId: /engagement/de575e14-ceb0-4ad4-8419-afdb23aa3f66/banner/6cbbf130-1c3c-404b-b29c-d251b2ced0f0/dimensions/328x430/0/traveling-with-cards-blue.html
            draftRepositoryId: engagement-template-custom
          campaignSlots:
          - portalName: retail-app
            pageName: page-index-ezc2na
            widgetName: bb-campaign-space-ang-_-245931b4340d
            creative:
              uuid: 39501cfe-2d8b-493c-96ce-cba768f44c47
              dimensions: 328x430
              filename: traveling-with-cards-red.html
              draftContentId: /engagement/de575e14-ceb0-4ad4-8419-afdb23aa3f66/banner/6b895647-937e-4b16-8042-97ba1efc7396/dimensions/328x430/0/traveling-with-cards-red.html
              draftRepositoryId: engagement-template-custom
          - portalName: retail-app
            pageName: page-index-ezc2na
            widgetName: bb-campaign-space-ang-_-245931b4341
            creative:
              uuid: 61689aef-a82c-45ec-b932-1ef0a9d81f62
              dimensions: 328x430
              filename: traveling-with-cards-blue.html
              draftContentId: /engagement/c57b9aee-a71c-4cb8-91a0-a036037d70ea/banner/6a05d039-e7fd-4bb3-83fc-4f883cb549e3/dimensions/328x430/0/traveling-with-cards-blue.html
              draftRepositoryId: engagement-template-custom
          startDate: 2022-03-04T00:01:00Z
          endDate: 2022-03-04T23:45:00Z
        hasChanges: false
        metrics:
          clicks: 0
          impressions: 0
        status: final
        state: LIVE
        approvalStatus: APPROVED
        engagementType:
          uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1153
          title: Custom
          name: custom
      - name: MC_Engagement_757451
        uuid: 6c594472-7ed9-4ae4-9bff-b8b5a89df589
        version: 1
        locale: en
        startDate: 2022-03-04T00:01:00Z
        endDate: 2022-03-04T23:45:00Z
        audience:
          type: id
          id: 7ef02b1b-35eb-4b23-8cdf-b9e00be4a8d3
        channels:
        - type: message-center
          enabled: true
          uuid: 842f0cf2-c92b-4ea8-b50a-2412300a33d4
          topicId: 06844396-9260-43ee-8312-995d10d411cf
          draftContentId: /engagement/lot-of-cards-message-center/message-center/6c594472-7ed9-4ae4-9bff-b8b5a89df589/1/engagementTemplate
          draftRepositoryId: engagement-template-custom
          scheduledAt: 2022-03-04T00:15:00Z
          deliveredAt: 2022-03-04T21:02:40Z
        hasChanges: false
        metrics: null
        status: final
        state: LIVE
        approvalStatus: APPROVED
        engagementType:
          uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1153
          title: Custom
          name: custom
      - name: Banner_Engagement_528131
        uuid: 0342f6dd-1da7-4a13-a26c-720398c6a8b8
        version: 1
        locale: en
        startDate: 2022-03-05T00:01:00Z
        endDate: 2022-03-05T23:45:00Z
        audience:
          type: id
          id: 7ef02b1b-35eb-4b23-8cdf-b9e00be4a8d3
        channels:
        - type: banner
          enabled: true
          uuid: 76935042-a1a9-4617-8515-b6bb6149a0ed
          targetUrl: https://google.com
          targetUrlDisplayMode: blank
          priority: high
          creatives:
          - uuid: 920aa1a1-56a6-4f9d-a132-b1e816deef39
            dimensions: 328x430
            filename: traveling-with-cards-blue.html
            draftContentId: /engagement/0342f6dd-1da7-4a13-a26c-720398c6a8b8/banner/1d96160b-5b67-4a70-b8c8-cc9612d21d3f/dimensions/328x430/0/traveling-with-cards-blue.html
            draftRepositoryId: engagement-template-custom
          - uuid: 6b8347f1-e98c-4d72-9b29-6d5363848d0f
            dimensions: 328x430
            filename: traveling-with-cards-red.html
            draftContentId: /engagement/0342f6dd-1da7-4a13-a26c-720398c6a8b8/banner/8dbf21a0-50c2-4281-a668-9771c7220794/dimensions/328x430/0/traveling-with-cards-red.html
            draftRepositoryId: engagement-template-custom
          campaignSlots:
          - portalName: retail-app
            pageName: page-index-ezc2na
            widgetName: bb-campaign-space-ang-_-245931b4340d
            creative:
              uuid: 920aa1a1-56a6-4f9d-a132-b1e816deef39
              dimensions: 328x430
              filename: traveling-with-cards-blue.html
              draftContentId: /engagement/0342f6dd-1da7-4a13-a26c-720398c6a8b8/banner/1d96160b-5b67-4a70-b8c8-cc9612d21d3f/dimensions/328x430/0/traveling-with-cards-blue.html
              draftRepositoryId: engagement-template-custom
          - portalName: retail-app
            pageName: page-index-ezc2na
            widgetName: bb-campaign-space-ang-_-245931b4341
            creative:
              uuid: 61689aef-a82c-45ec-b932-1ef0a9d81f62
              dimensions: 328x430
              filename: traveling-with-cards-blue.html
              draftContentId: /engagement/c57b9aee-a71c-4cb8-91a0-a036037d70ea/banner/6a05d039-e7fd-4bb3-83fc-4f883cb549e3/dimensions/328x430/0/traveling-with-cards-blue.html
              draftRepositoryId: engagement-template-custom
          startDate: 2022-03-05T00:01:00Z
          endDate: 2022-03-05T23:45:00Z
        hasChanges: false
        metrics:
          clicks: 0
          impressions: 0
        status: final
        state: LIVE
        approvalStatus: APPROVED
        engagementType:
          uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1153
          title: Custom
          name: custom
      - name: MC_Engagement_332905
        uuid: 31f3a5e0-108d-444b-a791-ac98c00eaa00
        version: 1
        locale: en
        startDate: 2022-03-05T00:01:00Z
        endDate: 2022-03-05T23:45:00Z
        audience:
          type: id
          id: 7ef02b1b-35eb-4b23-8cdf-b9e00be4a8d3
        channels:
        - type: message-center
          enabled: true
          uuid: 3d20092d-386b-41e0-9f0d-ccaeeb47955e
          topicId: 06844396-9260-43ee-8312-995d10d411cf
          draftContentId: /engagement/lot-of-cards-message-center/message-center/31f3a5e0-108d-444b-a791-ac98c00eaa00/1/engagementTemplate
          draftRepositoryId: engagement-template-custom
          scheduledAt: 2022-03-05T00:15:00Z
          deliveredAt: 2022-03-05T21:01:51Z
        hasChanges: false
        metrics: null
        status: final
        state: LIVE
        approvalStatus: APPROVED
      - name: Banner_Engagement_938957
        uuid: f4c96414-47f2-4047-a05d-ea8a15c90139
        version: 1
        locale: en
        startDate: 2022-03-06T00:01:00Z
        endDate: 2022-03-06T23:45:00Z
        audience:
          type: id
          id: 7ef02b1b-35eb-4b23-8cdf-b9e00be4a8d3
        channels:
        - type: banner
          enabled: true
          uuid: a5f708a5-1fae-47aa-85e4-e353b8dd65e1
          targetUrl: https://google.com
          targetUrlDisplayMode: blank
          priority: high
          creatives:
          - uuid: 1527656d-3970-4d26-8747-51f6a4b54c1d
            dimensions: 328x430
            filename: traveling-with-cards-red.html
            draftContentId: /engagement/f4c96414-47f2-4047-a05d-ea8a15c90139/banner/36614d1a-7e1a-4ae4-b04b-afdb4cdc7add/dimensions/328x430/0/traveling-with-cards-red.html
            draftRepositoryId: engagement-template-custom
          - uuid: bd64fd40-d07b-4367-9b80-c5e8f405eeea
            dimensions: 328x430
            filename: traveling-with-cards-blue.html
            draftContentId: /engagement/f4c96414-47f2-4047-a05d-ea8a15c90139/banner/ea9cf521-183d-4e2c-9086-d6e708cfeb98/dimensions/328x430/0/traveling-with-cards-blue.html
            draftRepositoryId: engagement-template-custom
          campaignSlots:
          - portalName: retail-app
            pageName: page-index-ezc2na
            widgetName: bb-campaign-space-ang-_-245931b4340d
            creative:
              uuid: 1527656d-3970-4d26-8747-51f6a4b54c1d
              dimensions: 328x430
              filename: traveling-with-cards-red.html
              draftContentId: /engagement/f4c96414-47f2-4047-a05d-ea8a15c90139/banner/36614d1a-7e1a-4ae4-b04b-afdb4cdc7add/dimensions/328x430/0/traveling-with-cards-red.html
              draftRepositoryId: engagement-template-custom
          - portalName: retail-app
            pageName: page-index-ezc2na
            widgetName: bb-campaign-space-ang-_-245931b4341
            creative:
              uuid: 61689aef-a82c-45ec-b932-1ef0a9d81f62
              dimensions: 328x430
              filename: traveling-with-cards-blue.html
              draftContentId: /engagement/c57b9aee-a71c-4cb8-91a0-a036037d70ea/banner/6a05d039-e7fd-4bb3-83fc-4f883cb549e3/dimensions/328x430/0/traveling-with-cards-blue.html
              draftRepositoryId: engagement-template-custom
          startDate: 2022-03-06T00:01:00Z
          endDate: 2022-03-06T23:45:00Z
        hasChanges: false
        metrics:
          clicks: 0
          impressions: 0
        status: final
        state: LIVE
        approvalStatus: APPROVED
        engagementType:
          uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1153
          title: Custom
          name: custom
      - name: MC_Engagement_918079
        uuid: 46d9a68d-f139-4445-a3c0-bc79c390c6c0
        version: 1
        locale: en
        startDate: 2022-03-06T00:01:00Z
        endDate: 2022-03-06T23:45:00Z
        audience:
          type: id
          id: 7ef02b1b-35eb-4b23-8cdf-b9e00be4a8d3
        channels:
        - type: message-center
          enabled: true
          uuid: 11b49ee2-9953-47f7-8e03-7ad4ab220ae4
          topicId: 06844396-9260-43ee-8312-995d10d411cf
          draftContentId: /engagement/lot-of-cards-message-center/message-center/46d9a68d-f139-4445-a3c0-bc79c390c6c0/1/engagementTemplate
          draftRepositoryId: engagement-template-custom
          scheduledAt: 2022-03-06T00:15:00Z
          deliveredAt: 2022-03-06T21:02:02Z
        hasChanges: false
        metrics: null
        status: final
        state: LIVE
        approvalStatus: APPROVED
        engagementType:
          uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1153
          title: Custom
          name: custom
      - name: Banner_Engagement_679642
        uuid: 17204a9f-ce13-410d-a24b-57fc8da0ba90
        version: 1
        locale: en
        startDate: 2022-03-07T00:01:00Z
        endDate: 2022-03-07T23:45:00Z
        audience:
          type: id
          id: 7ef02b1b-35eb-4b23-8cdf-b9e00be4a8d3
        channels:
        - type: banner
          enabled: true
          uuid: 23d203d5-39ea-43f5-812e-d8b3851fe879
          targetUrl: https://google.com
          targetUrlDisplayMode: blank
          priority: high
          creatives:
          - uuid: ea210b92-ddef-41cf-b549-2342b2d6a0b3
            dimensions: 328x430
            filename: traveling-with-cards-red.html
            draftContentId: /engagement/17204a9f-ce13-410d-a24b-57fc8da0ba90/banner/4b160736-e6a6-4623-9770-02e37a9e1e3a/dimensions/328x430/0/traveling-with-cards-red.html
            draftRepositoryId: engagement-template-custom
          - uuid: 4ae9b7e0-8e63-46f1-b063-ec43f3999f3c
            dimensions: 328x430
            filename: traveling-with-cards-blue.html
            draftContentId: /engagement/17204a9f-ce13-410d-a24b-57fc8da0ba90/banner/eeefdf4a-ed53-4a5c-8f9f-5ce2f13ec9e2/dimensions/328x430/0/traveling-with-cards-blue.html
            draftRepositoryId: engagement-template-custom
          campaignSlots:
          - portalName: retail-app
            pageName: page-index-230ajj
            widgetName: bb-campaign-space-ang-_-245931b4340d
            creative:
              uuid: ea210b92-ddef-41cf-b549-2342b2d6a0b3
              dimensions: 328x430
              filename: traveling-with-cards-red.html
              draftContentId: /engagement/17204a9f-ce13-410d-a24b-57fc8da0ba90/banner/4b160736-e6a6-4623-9770-02e37a9e1e3a/dimensions/328x430/0/traveling-with-cards-red.html
              draftRepositoryId: engagement-template-custom
          - portalName: retail-app
            pageName: page-index-ezc2na
            widgetName: bb-campaign-space-ang-_-245931b4341
            creative:
              uuid: 61689aef-a82c-45ec-b932-1ef0a9d81f62
              dimensions: 328x430
              filename: traveling-with-cards-blue.html
              draftContentId: /engagement/c57b9aee-a71c-4cb8-91a0-a036037d70ea/banner/6a05d039-e7fd-4bb3-83fc-4f883cb549e3/dimensions/328x430/0/traveling-with-cards-blue.html
              draftRepositoryId: engagement-template-custom
          startDate: 2022-03-07T00:01:00Z
          endDate: 2022-03-07T23:45:00Z
        hasChanges: false
        metrics:
          clicks: 0
          impressions: 0
        status: final
        state: LIVE
        approvalStatus: APPROVED
        engagementType:
          uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1153
          title: Custom
          name: custom
      - name: MC_Engagement_282435
        uuid: 03a6c7cb-dc88-4058-9233-8bde503bf2c4
        version: 1
        locale: en
        startDate: 2022-03-07T00:01:00Z
        endDate: 2022-03-07T23:45:00Z
        audience:
          type: id
          id: 7ef02b1b-35eb-4b23-8cdf-b9e00be4a8d3
        channels:
        - type: message-center
          enabled: true
          uuid: 3326acbf-5c0a-44b3-b9b9-a743bd791d5e
          topicId: 06844396-9260-43ee-8312-995d10d411cf
          draftContentId: /engagement/lot-of-cards-message-center/message-center/03a6c7cb-dc88-4058-9233-8bde503bf2c4/1/engagementTemplate
          draftRepositoryId: engagement-template-custom
          scheduledAt: 2022-03-07T00:15:00Z
          deliveredAt: 2022-03-07T21:02:33Z
        hasChanges: false
        metrics: null
        status: final
        state: LIVE
        approvalStatus: APPROVED
        engagementType:
          uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1153
          title: Custom
          name: custom
    EngagementGetResponseExample:
      summary: EngagementGetResponseExample
      value:
        name: Engagement sample
        uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1154
        version: 1
        locale: en
        startDate: 2022-03-09T23:00:00Z
        endDate: 2022-03-13T23:00:00Z
        audience: null
        channels:
        - type: banner
          enabled: true
          uuid: 1ae944c1-6053-461d-8270-c9f9360a3dd3
          targetUrl: https://google.com
          targetUrlDisplayMode: blank
          priority: high
          creatives:
          - uuid: aa5f32a0-28e6-45b1-be3a-567cabaef2a0
            dimensions: 328x430
            filename: traveling-with-cards-red.html
            draftContentId: /engagement/c57b9aee-a71c-4cb8-91a0-a036037d70ea/banner/32610c85-4a3e-4f97-8745-34ed78ff3093/dimensions/328x430/0/traveling-with-cards-red.html
            draftRepositoryId: engagement-template-custom
          - uuid: 61689aef-a82c-45ec-b932-1ef0a9d81f62
            dimensions: 328x430
            filename: traveling-with-cards-blue.html
            draftContentId: /engagement/c57b9aee-a71c-4cb8-91a0-a036037d70ea/banner/6a05d039-e7fd-4bb3-83fc-4f883cb549e3/dimensions/328x430/0/traveling-with-cards-blue.html
            draftRepositoryId: engagement-template-custom
          campaignSlots:
          - portalName: retail-app
            pageName: page-index-ezc2na
            widgetName: bb-campaign-space-ang-_-245931b4340d
            creative:
              uuid: aa5f32a0-28e6-45b1-be3a-567cabaef2a0
              dimensions: 328x430
              filename: traveling-with-cards-red.html
              draftContentId: /engagement/c57b9aee-a71c-4cb8-91a0-a036037d70ea/banner/32610c85-4a3e-4f97-8745-34ed78ff3093/dimensions/328x430/0/traveling-with-cards-red.html
              draftRepositoryId: engagement-template-custom
          - portalName: retail-app
            pageName: page-index-ezc2na
            widgetName: bb-campaign-space-ang-_-245931b4341
            creative:
              uuid: 61689aef-a82c-45ec-b932-1ef0a9d81f62
              dimensions: 328x430
              filename: traveling-with-cards-blue.html
              draftContentId: /engagement/c57b9aee-a71c-4cb8-91a0-a036037d70ea/banner/6a05d039-e7fd-4bb3-83fc-4f883cb549e3/dimensions/328x430/0/traveling-with-cards-blue.html
              draftRepositoryId: engagement-template-custom
          startDate: 2022-03-03T00:01:00Z
          endDate: 2022-03-03T23:45:00Z
        status: draft
        state: DRAFT
        engagementType:
          uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1153
          title: Custom
          name: custom
        approvalDetailsList:
        - approvalStatus: APPROVED
          approvalId: 45689aef-a82c-45ec-b932-1ef0a9d81e93
          submittedBy: Steve Han
          submittedOn: 2018-01-12T13:44:02Z
          numberOfApprovalsProvided: 1
          totalNumberOfApprovalsNeeded: 1
          canApprove: false
          canReject: false
          approvalRecords:
          - comment: null
            userFullName: Steve Han
            status: SUBMITTED
            createdAt: 2018-01-12T13:44:02Z
          - comment: null
            userFullName: Roger
            status: APPROVED
            createdAt: 2018-02-12T13:44:02Z
    EngagementPostResponseExample:
      summary: EngagementPostResponseExample
      value:
        name: Engagement sample
        uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1154
        version: 1
        locale: en
        startDate: 2022-03-09T23:00:00Z
        endDate: 2022-03-13T23:00:00Z
        audience: null
        channels: []
        status: draft
        state: DRAFT
        engagementType:
          uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1153
          title: Saving
          parentType:
            uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1153
            title: Offers
            name: offers
    EngagementPutResponseExample:
      summary: EngagementPutResponseExample
      value:
        name: Engagement Test Update Demo
        uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1154
        version: 1
        locale: en
        startDate: 2022-03-09T23:00:00Z
        endDate: 2022-03-13T23:00:00Z
        audience: null
        channels: []
        status: draft
        state: DRAFT
        engagementType:
          uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1153
          title: Saving
          parentType:
            uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1153
            title: Offers
            name: offers
        approvalDetailsList:
        - approvalStatus: APPROVED
          approvalId: 45689aef-a82c-45ec-b932-1ef0a9d81e93
          submittedBy: Steve Han
          submittedOn: 2018-01-12T13:44:02Z
          numberOfApprovalsProvided: 0
          totalNumberOfApprovalsNeeded: 2
          canApprove: false
          canReject: false
          approvalRecords:
          - comment: null
            userFullName: Steve Han
            status: SUBMITTED
            createdAt: 2018-01-12T13:44:02Z
    EnableEngagementPutResponseExample:
      summary: EnableEngagementPutResponseExample
      value:
        name: Engagement sample
        uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1154
        version: 1
        locale: en
        startDate: 2022-03-15T23:00:00Z
        endDate: 2022-03-29T22:00:00Z
        audience:
          type: id
          id: 6900fb88-208c-4c4e-ac52-d42ef7310d9c
        channels:
        - type: banner
          enabled: true
          uuid: e4e51d48-21e8-42e8-bd2d-a56ff360c5cb
          targetUrl: https://www.backbase.com/
          targetUrlDisplayMode: self
          priority: medium
          creatives:
          - uuid: 808be33f-85c0-412a-8dc8-56926b2afe00
            dimensions: 328x430
            filename: SampleHTMLTemplateS.html
            draftContentId: /engagement/7eabf309-8cb2-4b36-bb35-da0f8d2e6f02/banner/03717d04-98bd-487b-b6d9-c6ec05193f4a/dimensions/328x430/0/SampleHTMLTemplateS.html
            draftRepositoryId: engagement-template-custom
          campaignSlots:
          - portalName: retail-app
            pageName: page-index-8mq4cb
            widgetName: bb-campaign-space-ang-_-245931b4340d
          startDate: 2022-03-15T23:00:00Z
          endDate: 2022-03-29T22:00:00Z
        status: final
        state: LIVE
        engagementType:
          uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1153
          title: Custom
          name: custom
        approvalDetailsList:
        - approvalStatus: APPROVED
          approvalId: 45689aef-a82c-45ec-b932-1ef0a9d81e93
          submittedBy: Steve Han
          submittedOn: 2018-01-12T13:44:02Z
          numberOfApprovalsProvided: 1
          totalNumberOfApprovalsNeeded: 1
          canApprove: false
          canReject: false
          approvalRecords:
          - comment: null
            userFullName: Steve Han
            status: SUBMITTED
            createdAt: 2018-01-12T13:44:02Z
          - comment: null
            userFullName: Roger
            status: APPROVED
            createdAt: 2018-02-12T13:44:02Z
    DisableEngagementPutResponseExample:
      summary: DisableEngagementPutResponseExample
      value:
        name: Engagement sample
        uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1154
        version: 1
        locale: en
        startDate: 2022-03-15T23:00:00Z
        endDate: 2022-03-29T22:00:00Z
        audience:
          type: id
          id: 6900fb88-208c-4c4e-ac52-d42ef7310d9c
        channels:
        - type: banner
          enabled: true
          uuid: e4e51d48-21e8-42e8-bd2d-a56ff360c5cb
          targetUrl: https://www.backbase.com/
          targetUrlDisplayMode: self
          priority: medium
          creatives:
          - uuid: 808be33f-85c0-412a-8dc8-56926b2afe00
            dimensions: 328x430
            filename: SampleHTMLTemplateS.html
            draftContentId: /engagement/7eabf309-8cb2-4b36-bb35-da0f8d2e6f02/banner/03717d04-98bd-487b-b6d9-c6ec05193f4a/dimensions/328x430/0/SampleHTMLTemplateS.html
            draftRepositoryId: engagement-template-custom
          campaignSlots:
          - portalName: retail-app
            pageName: page-index-8mq4cb
            widgetName: bb-campaign-space-ang-_-245931b4340d
          startDate: 2022-03-15T23:00:00Z
          endDate: 2022-03-29T22:00:00Z
        status: paused
        state: PAUSED
        engagementType:
          uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1153
          title: Custom
          name: custom
        approvalDetailsList:
        - approvalStatus: APPROVED
          approvalId: 45689aef-a82c-45ec-b932-1ef0a9d81e93
          submittedBy: Steve Han
          submittedOn: 2018-01-12T13:44:02Z
          numberOfApprovalsProvided: 1
          totalNumberOfApprovalsNeeded: 1
          canApprove: false
          canReject: false
          approvalRecords:
          - comment: null
            userFullName: Steve Han
            status: SUBMITTED
            createdAt: 2018-01-12T13:44:02Z
          - comment: null
            userFullName: Roger
            status: APPROVED
            createdAt: 2018-02-12T13:44:02Z
    FinalEngagementPutResponseExample:
      summary: FinalEngagementPutResponseExample
      value:
        name: Engagement sample
        uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1154
        version: 1
        locale: en
        startDate: 2022-03-15T23:00:00Z
        endDate: 2022-03-29T22:00:00Z
        audience:
          type: id
          id: 6900fb88-208c-4c4e-ac52-d42ef7310d9c
        channels:
        - type: banner
          enabled: true
          uuid: e4e51d48-21e8-42e8-bd2d-a56ff360c5cb
          targetUrl: https://www.backbase.com/
          targetUrlDisplayMode: self
          priority: medium
          creatives:
          - uuid: 808be33f-85c0-412a-8dc8-56926b2afe00
            dimensions: 328x430
            filename: SampleHTMLTemplateS.html
            draftContentId: /engagement/7eabf309-8cb2-4b36-bb35-da0f8d2e6f02/banner/03717d04-98bd-487b-b6d9-c6ec05193f4a/dimensions/328x430/0/SampleHTMLTemplateS.html
            draftRepositoryId: engagement-template-custom
          campaignSlots:
          - portalName: retail-app
            pageName: page-index-8mq4cb
            widgetName: bb-campaign-space-ang-_-245931b4340d
          startDate: 2022-03-15T23:00:00Z
          endDate: 2022-03-29T22:00:00Z
        status: final
        state: LIVE
        engagementType:
          uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1153
          title: Custom
          name: custom
        approvalDetailsList:
        - approvalStatus: APPROVED
          approvalId: 45689aef-a82c-45ec-b932-1ef0a9d81e93
          submittedBy: Steve Han
          submittedOn: 2018-01-12T13:44:02Z
          numberOfApprovalsProvided: 1
          totalNumberOfApprovalsNeeded: 1
          canApprove: false
          canReject: false
          approvalRecords:
          - comment: null
            userFullName: Steve Han
            status: SUBMITTED
            createdAt: 2018-01-12T13:44:02Z
          - comment: null
            userFullName: Roger
            status: APPROVED
            createdAt: 2018-02-12T13:44:02Z
    CreativeResourceItemsExample:
      summary: CreativeResourceItemsExample
      value:
      - utmConfig:
          engagement: 2faced93-04a0-400c-bd91-7da469cd054d
          creative: 213110dd-e9fe-4645-9df5-d81d1633ad9f
        interaction:
          url: https://www.bank.com/loans
          displayMode: blank
          routing:
            where-to: dashboard-view
            data:
              price: 5
        content:
          dimensions: 300x250
          body: PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImV
      - utmConfig:
          engagement: 3eaced93-04a0-400c-bd91-7da469cd055f
          creative: a33110dd-e9fe-4645-9df5-d81d1633ad1a
        interaction:
          url: https://www.bank.com/credit
          displayMode: blank
        content:
          dimensions: 300x250
          body: POfet0nuwvbLIh0bWw+cjxodG1sigxhbmc9NA
    SelectBannerGetResponseExample:
      summary: SelectBannerGetResponseExample
      value:
        bannerUrl: https://www.example.com/actual_banner_url
        utmConfig:
          engagement: e4e51d48-21e8-42e8-bd2d-a56ff360
          creative: 808be33f-85c0-412a-8dc8-56926b2afe00
          destination: metric
        targetUrl: /client-api/v1/banner/redirect?utm_content=808be33f-85c0-412a-8dc8-56926b2afe00&utm_banner=e4e51d48-21e8-42e8-bd2d-a56ff360c5cb&key=3630d5b2-84b9-4fda-89bf-1553c4645221
        targetUrlDisplayMode: self
        creative:
          uuid: 808be33f-85c0-412a-8dc8-56926b2afe00
          dimensions: 328x430
          filename: SampleHTMLTemplateS.html
          content: PCFET0NUWVBFIGh0bWw+C...
    EngagementPutRequestExample:
      summary: EngagementPutRequestExample
      value:
        name: Engagement Test Update Demo
        uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1154
        version: 1
        locale: en
        startDate: 2022-03-09T23:00:00Z
        endDate: 2022-03-13T23:00:00Z
        audience: null
        channels: []
        status: draft
        state: DRAFT
    EngagementStatePatchRequestExample:
      summary: EngagementStatePatchRequestExample
      value:
        state: DRAFT
    EngagementPostRequestExample:
      summary: EngagementPostRequestExample
      value:
        name: Engagement sample
        startDate: 2022-03-09T23:00:00Z
        endDate: 2022-03-13T23:00:00Z
        locale: en
        channels: []
    EngagementsApprovalResourceExample:
      summary: EngagementsApprovalResourceExample
      value:
      - name: Custom Engagement 1
        type: Product Offers
        startDate: 2022-03-15T23:00:00Z
        endDate: 2022-03-29T22:00:00Z
        submittedOn: 2022-03-13T23:00:00Z
        pendingSince: 10
        submittedBy: Robin Green
        uuid: 606d4532-f8d9-4a5f-840a-887baf88fa24
      - name: Custom Engagement 2
        type: Custom
        startDate: 2022-04-15T23:00:00Z
        endDate: 2022-04-29T22:00:00Z
        submittedOn: 2022-04-13T23:00:00Z
        submittedBy: Nicholas B
        uuid: 613d4532-f8d9-4a5f-840a-887baf88fd58
    EngagementsApproveResponseExample:
      summary: EngagementsApproveResponseExample
      value:
        name: Engagement Test Update Demo
        uuid: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1154
        version: 1
        locale: en
        startDate: 2022-03-09T23:00:00Z
        endDate: 2022-03-13T23:00:00Z
        audience: null
        channels: []
        status: final
        state: LIVE
        approvalDetailsList:
        - approvalStatus: APPROVED
          approvalId: 45689aef-a82c-45ec-b932-1ef0a9d81e93
          submittedBy: Steve Han
          submittedOn: 2018-01-12T13:44:02Z
          numberOfApprovalsProvided: 1
          totalNumberOfApprovalsNeeded: 1
          canApprove: false
          canReject: false
          approvalRecords:
          - comment: null
            userFullName: Steve Han
            status: SUBMITTED
            createdAt: 2018-01-12T13:44:02Z
          - comment: null
            userFullName: Roger
            status: APPROVED
            createdAt: 2018-02-12T13:44:02Z
    UpdateApprovalRequestExample:
      summary: UpdateApprovalRequestExample
      value:
        comment: This request is actioned by John based on the channel information
    CreateEngagementApprovalRequestExample:
      summary: CreateEngagementApprovalRequestExample
      value:
        engagementUUID: 0c8b3e8b-fbff-4a4c-bb7b-9ff47aba1154
    CreateApprovalResponseExample:
      summary: CreateApprovalResponseExample
      value:
        approvalStatus: PENDING
        approvalId: 45689aef-a82c-45ec-b932-1ef0a9d81e93
        submittedBy: Steve Han
        submittedOn: 2018-01-12T13:44:02Z
        numberOfApprovalsProvided: 0
        totalNumberOfApprovalsNeeded: 2
        canApprove: false
        canReject: false
        approvalRecords:
        - comment: null
          userFullName: Steve Han
          status: SUBMITTED
          createdAt: 2018-01-12T13:44:02Z
    RejectApprovalResponseExample:
      summary: RejectApprovalResponseExample
      value:
        approvalStatus: REJECTED
        approvalId: 45689aef-a82c-45ec-b932-1ef0a9d81e93
        submittedBy: Steve Han
        submittedOn: 2018-01-12T13:44:02Z
        numberOfApprovalsProvided: 1
        totalNumberOfApprovalsNeeded: 2
        canApprove: false
        canReject: false
        approvalRecords:
        - comment: null
          userFullName: Steve Han
          status: SUBMITTED
          createdAt: 2018-01-12T13:44:02Z
        - comment: null
          userFullName: Roger
          status: APPROVED
          createdAt: 2018-02-12T13:44:02Z
        - comment: null
          userFullName: Mike
          status: REJECTED
          createdAt: 2018-03-12T13:44:02Z
    CancelApprovalResponseExample:
      summary: CancelApprovalResponseExample
      value:
        approvalStatus: CANCELLED
        approvalId: 45689aef-a82c-45ec-b932-1ef0a9d81e93
        submittedBy: Steve Han
        submittedOn: 2018-01-12T13:44:02Z
        numberOfApprovalsProvided: 1
        totalNumberOfApprovalsNeeded: 2
        canApprove: false
        canReject: false
        approvalRecords:
        - comment: null
          userFullName: Steve Han
          status: SUBMITTED
          createdAt: 2018-01-12T13:44:02Z
        - comment: null
          userFullName: Roger
          status: APPROVED
          createdAt: 2018-02-12T13:44:02Z
        - comment: null
          userFullName: Steve
          status: CANCELLED
          createdAt: 2018-03-12T13:44:02Z
    EngagementTypeResponseExample:
      summary: EngagementTypeResponseExample
      value:
      - uuid: 98f2767d-ce21-4758-8b5a-d7b461d87004
        engagement: custom
        title: Custom
        description: "App maintenance, new products, new features..."
        userPreferenceEnabled: false
        activeByDefault: true
        channels:
        - message-center
        - banner
      - uuid: f0623cce-92ca-48ff-b63d-074fe09af5bf
        engagement: offers
        title: Product Offers
        description: This engagement type is for when you’re looking...
        userPreferenceEnabled: true
        activeByDefault: true
        channels:
        - message-center
        - banner
        subTypes:
        - uuid: ab3047dd-8a23-4cde-b4cf-a9adc79b3920
          engagement: checking
          title: Checking
          userPreferenceEnabled: true
          activeByDefault: true
        - uuid: a700aacc-e714-4bd5-925c-35cb4964ee4b
          engagement: saving
          title: Savings
          userPreferenceEnabled: true
          activeByDefault: true
    EngagementPreferencePostExample:
      summary: EngagementPreferencePostExample
      value:
        engagementTypeId: 4b920e58-3a81-4c4d-b85c-430ea7984814
        active: true
    EngagementPreferencePutExample:
      summary: EngagementPreferencePutExample
      value:
        active: true
    EngagementPreferenceChildResponseExample:
      summary: EngagementPreferenceChildResponseExample
      value:
        id: 83abedf6-72c5-4615-877a-e1ba2ca413dd
        engagementTypeId: b600172e-cb8b-4a42-97e7-3394b98881c0
        engagement: checking
        title: Checking
        active: true
    EngagementPreferenceParentResponseExample:
      summary: EngagementPreferenceParentResponseExample
      value:
        id: e3dd83c6-1c12-4f72-9628-3b3c3a59fdc0
        engagementTypeId: 4b920e58-3a81-4c4d-b85c-430ea7984814
        engagement: offers
        title: Product Offers
        active: true
        subTypes:
        - id: 83abedf6-72c5-4615-877a-e1ba2ca413dd
          engagementTypeId: b600172e-cb8b-4a42-97e7-3394b98881c0
          engagement: checking
          title: Checking
          active: true
        - id: 614974b0-6046-4e35-895b-9eac0c2cdf1e
          engagementTypeId: cc573afe-8d75-4abb-bf54-7edb46654adb
          engagement: saving
          title: Savings
          active: true
        - id: c041eb2e-59de-4253-9212-74e0d60c4498
          engagementTypeId: 85b3005b-f1e8-44a2-853e-498aa1f2408c
          engagement: mortgages
          title: Mortgages
          active: true
    MetricClickPostRequestExample:
      summary: MetricClickPostRequestExample
      value:
        engagement: e4e51d48-21e8-42e8-bd2d-a56ff360
        creative: 808be33f-85c0-412a-8dc8-56926b2afe00
    BadRequestExample:
      summary: BadRequestExample
      value:
        message: Bad Request
        key: GENERAL_ERROR
        errors:
        - message: "Value Exceeded. Must be between {min} and {max}."
          key: common.api.shoesize
          context:
            max: "50"
            min: "1"
    UnauthorizedExample:
      summary: UnauthorizedExample
      value:
        message: Access to requested resource denied.
        key: GENERAL_ERROR
        errors:
        - message: Resource access denied due to invalid credentials.
          key: common.api.token
          context:
            accessToken: expired
    NotFoundExample:
      summary: NotFoundExample
      value:
        message: Resource not found.
        key: GENERAL_ERROR
        errors:
        - message: "Unable to find the resource requested resource: {resource}."
          key: common.api.resource
          context:
            resource: aResource
    ConflictError:
      summary: ConflictError
      value:
        message: Conflict error
        key: GENERAL_ERROR
        errors:
        - message: The request could not be completed due to a conflict with the current
            state of the resource.
          key: transactions.api.billingstatus.transaction
          context:
            billingStatus: BILLED
    ForbiddenExample:
      summary: ForbiddenExample
      value:
        message: Access to requested resource denied.
        key: GENERAL_ERROR
        errors:
        - message: "Resource access denied due to an insufficient user quota of {quota}."
          key: common.api.quota
          context:
            quota: someQuota
    ErrorItem:
      summary: ErrorItem
      value:
        message: "Value Exceeded. Must be between {min} and {max}."
        key: common.api.shoesize
        context:
          max: "50"
          min: "1"
    InternalServerErrorExample:
      summary: InternalServerErrorExample
      value:
        message: Description of error
    response_when_two_general_notification_exists:
      summary: response_when_two_general_notification_exists
      value:
        totalCount: 2
        notificationPreferences:
        - id: 0acf0053-29ab-4b13-a32f-903bf8288e18
          generalNotificationId: account-balance-low
          active: false
          createdOn: 2020-01-17T12:52:34.000+0000
          lastUpdatedAt: 2020-01-31T18:52:34.000+0000
          channels:
          - channel: in-app-notification
            enabled: true
            userCanChange: false
          - channel: push
            enabled: true
            userCanChange: true
          userConditions:
            eType: arrangement
            eRef: b1ac32e8-a8e6-11eb-bcbc-0242ac130002
            conditions:
              amount: -200
        - id: 4d3ce254-24cc-4cdf-8a64-275f824a157e
          generalNotificationId: new-transaction-occurred
          active: false
          createdOn: 2020-01-17T12:52:34.000+0000
          lastUpdatedAt: 2020-01-31T18:52:34.000+0000
          channels:
          - channel: in-app-notification
            enabled: true
            userCanChange: false
          - channel: push
            enabled: true
            userCanChange: true
          userConditions:
            eType: arrangement
            eRef: b1ac32e8-a8e6-11eb-bcbc-0242ac130002
            conditions: null
    response_when_account_low_balance_contains_default:
      summary: response_when_account_low_balance_contains_default
      value:
        totalCount: 3
        notificationPreferences:
        - id: null
          generalNotificationId: account-balance-low
          active: false
          createdOn: 2020-01-17T12:52:34.000+0000
          lastUpdatedAt: 2020-01-19T12:52:11.000+0000
          channels:
          - channel: in-app-notification
            enabled: true
            userCanChange: false
          - channel: push
            enabled: false
            userCanChange: true
          userConditions:
            eType: arrangement
            eRef: null
            conditions:
              amount: 100
        - id: 0acf0053-29ab-4b13-a32f-903bf8288e18
          generalNotificationId: account-balance-low
          active: false
          createdOn: 2020-01-17T12:52:34.000+0000
          lastUpdatedAt: 2020-01-31T18:52:34.000+0000
          channels:
          - channel: in-app-notification
            enabled: true
            userCanChange: false
          - channel: push
            enabled: true
            userCanChange: true
          userConditions:
            eType: arrangement
            eRef: b1ac32e8-a8e6-11eb-bcbc-0242ac130002
            conditions:
              amount: -200
        - id: 4d3ce254-24cc-4cdf-8a64-275f824a157e
          generalNotificationId: new-transaction-occurred
          active: false
          createdOn: 2020-01-17T12:52:34.000+0000
          lastUpdatedAt: 2020-01-31T18:52:34.000+0000
          channels:
          - channel: in-app-notification
            enabled: true
            userCanChange: false
          - channel: push
            enabled: true
            userCanChange: true
          userConditions:
            eType: arrangement
            eRef: b1ac32e8-a8e6-11eb-bcbc-0242ac130002
            conditions: null
    response_when_business_banking_general_notifications_default:
      summary: response_when_business_banking_general_notifications_default
      value:
        totalCount: 4
        notificationPreferences:
        - id: null
          generalNotificationId: payment-to-approve
          active: false
          createdOn: 2022-01-17T12:52:34.000+0000
          lastUpdatedAt: 2022-01-31T18:52:34.000+0000
          channels:
          - channel: in-app-notification
            enabled: true
            userCanChange: false
          - channel: push
            enabled: true
            userCanChange: false
          userConditions:
            eType: null
            eRef: null
            conditions: null
        - id: null
          generalNotificationId: contact-to-approve
          active: false
          createdOn: 2022-01-17T12:52:34.000+0000
          lastUpdatedAt: 2022-01-31T18:52:34.000+0000
          channels:
          - channel: in-app-notification
            enabled: true
            userCanChange: false
          - channel: push
            enabled: true
            userCanChange: false
          userConditions:
            eType: null
            eRef: null
            conditions: null
        - id: null
          generalNotificationId: payment-status-updated-rejected
          active: false
          createdOn: 2022-01-17T12:52:34.000+0000
          lastUpdatedAt: 2022-01-31T18:52:34.000+0000
          channels:
          - channel: in-app-notification
            enabled: true
            userCanChange: false
          - channel: push
            enabled: true
            userCanChange: false
          userConditions:
            eType: null
            eRef: null
            conditions: null
        - id: null
          generalNotificationId: contact-status-updated-rejected
          active: false
          createdOn: 2022-01-17T12:52:34.000+0000
          lastUpdatedAt: 2022-01-31T18:52:34.000+0000
          channels:
          - channel: in-app-notification
            enabled: true
            userCanChange: false
          - channel: push
            enabled: true
            userCanChange: false
          userConditions:
            eType: null
            eRef: null
            conditions: null
    request_when_create_account_balance_low_preferences:
      summary: request_when_create_account_balance_low_preferences
      value:
        generalNotificationId: account-balance-low
        active: true
        channels:
        - channel: in-app-notification
          enabled: true
        - channel: push
          enabled: true
        eRef: b1ac32e8-a8e6-11eb-bcbc-0242ac130002
        conditions:
          amount: 5000
    request_when_create_payment_to_approve_preferences:
      summary: request_when_create_payment_to_approve_preferences
      value:
        generalNotificationId: payment-to-approve
        active: true
        channels:
        - channel: in-app-notification
          enabled: true
        - channel: push
          enabled: true
        eRef: null
        conditions: null
    v1-notification-preference-put-request:
      summary: v1-notification-preference-put-request
      value:
        active: true
        channels:
        - channel: in-app-notification
          enabled: true
        - channel: push
          enabled: false
        conditions:
          amount: 2000
    v1-notification-preference-put-batch-request:
      summary: v1-notification-preference-put-batch-request
      value:
      - generalNotificationId: account-balance-low
        active: true
        channels:
        - channel: in-app-notification
          enabled: true
        - channel: push
          enabled: true
        eRef: b1ac32e8-a8e6-11eb-bcbc-0242ac130002
        conditions:
          amount: 5000
      - generalNotificationId: new-transaction-occurred
        active: true
        channels:
        - channel: in-app-notification
          enabled: true
        - channel: push
          enabled: true
        eRef: b1ac32e8-a8e6-11eb-bcbc-0242ac130002
      - id: 4178be1f-855d-414b-9a22-f485b27a8fef
        active: true
        channels:
        - channel: in-app-notification
          enabled: true
        - channel: push
          enabled: false
        conditions:
          amount: 650.1
    v1-get-general-notifications:
      summary: v1-get-general-notifications
      value:
      - id: account-statement-ready
        name: Account Statement Is Ready
        deliveryOptions:
        - in-app-notification
        - push
      - id: new-message-received
        name: New Message Received FFS
        deliveryOptions:
        - in-app-notification
        - push
      - id: new-transaction-occurred
        name: New Transaction Occurred
        deliveryOptions:
        - in-app-notification
        - push
    new_message_received:
      summary: new_message_received
      value:
        id: new-message-received
        name: New Message Received
        preferencesEnabled: false
        push:
          engagementTemplates:
          - repositoryId: engagement-template-notification
            contentPath: /new-message-received/push/en_US/engagement-template.json
            locale: en_US
        inAppNotification:
          engagementTemplates:
          - repositoryId: engagement-template-notification
            contentPath: /new-message-received/in-app-notification/en_US/engagement-template.json
            locale: en_US
          channelSettings:
            severityLevel: INFO
            origin: MessageCenter
    new_transaction_occurred:
      summary: new_transaction_occurred
      value:
        id: new-transaction-occurred
        name: New Transaction Occurred
        preferencesEnabled: true
        push:
          engagementTemplates:
          - repositoryId: engagement-template-notification
            contentPath: /new-transaction-occurred/push/en_US/engagement-template.json
            locale: en_US
        inAppNotification:
          engagementTemplates:
          - repositoryId: engagement-template-notification
            contentPath: /new-transaction-occurred/in-app-notification/en_US/engagement-template.json
            locale: en_US
          channelSettings:
            severityLevel: ALERT
            origin: Transaction
    account_statement_ready:
      summary: account_statement_ready
      value:
        id: account-statement-ready
        name: Account Statement Is Ready
        preferencesEnabled: false
        push:
          engagementTemplates:
          - repositoryId: engagement-template-notification
            contentPath: /account-statement-ready/push/en_US/engagement-template.json
            locale: en_US
        inAppNotification:
          engagementTemplates:
          - repositoryId: engagement-template-notification
            contentPath: /account-statement-ready/in-app-notification/en_US/engagement-template.json
            locale: en_US
          channelSettings:
            severityLevel: SUCCESS
            origin: AccountStatement
    v1-get-engagement-preferences:
      summary: v1-get-engagement-preferences
      value:
      - id: e3dd83c6-1c12-4f72-9628-3b3c3a59fdc0
        engagementTypeId: 4b920e58-3a81-4c4d-b85c-430ea7984814
        engagement: offers
        title: Product Offers
        active: true
        subTypes:
        - id: 83abedf6-72c5-4615-877a-e1ba2ca413dd
          engagementTypeId: b600172e-cb8b-4a42-97e7-3394b98881c0
          engagement: checking
          title: Checking
          active: true
        - id: 614974b0-6046-4e35-895b-9eac0c2cdf1e
          engagementTypeId: cc573afe-8d75-4abb-bf54-7edb46654adb
          engagement: saving
          title: Savings
          active: true
        - id: c041eb2e-59de-4253-9212-74e0d60c4498
          engagementTypeId: 85b3005b-f1e8-44a2-853e-498aa1f2408c
          engagement: mortgages
          title: Mortgages
          active: true
      - id: 4933a51c-10f9-46c0-b2a1-9a8fbfcbef19
        engagementTypeId: dd7a889f-f5ae-4004-9410-d67a8c1c2299
        engagement: newsletter
        title: Newsletter
        active: true
        subTypes:
        - id: 6c358e55-e606-48b0-ac8f-f59beedf1749
          engagementTypeId: 1687bc3b-1861-442b-9df7-638c7dd6b06f
          engagement: checking
          title: Checking
          active: false
        - id: 9fc77117-364e-4a6d-bd1a-c3b8f19df728
          engagementTypeId: f90cf002-4bdb-4009-a8a1-cbce8c10680e
          engagement: saving
          title: Savings
          active: true
        - id: 1d545e00-4e29-4d57-92c7-c0954dc36693
          engagementTypeId: 2eb997f8-6f02-4c79-bb48-fc43ef25eed4
          engagement: mortgages
          title: Mortgages
          active: false
    forbidden-error:
      summary: forbidden-error
      value:
        message: Access to requested resource denied.
        key: GENERAL_ERROR
        errors:
        - message: "Resource access denied due to an insufficient user quota of {quota}."
          key: common.api.quota
          context:
            quota: someQuota
    internal-server-error:
      summary: internal-server-error
      value:
        message: Description of error
    bad-request-validation-error:
      summary: bad-request-validation-error
      value:
        message: Bad Request
        key: GENERAL_ERROR
        errors:
        - message: "Value Exceeded. Must be between {min} and {max}."
          key: common.api.shoesize
          context:
            max: "50"
            min: "1"
    unauthorized-error:
      summary: unauthorized-error
      value:
        message: Access to requested resource denied.
        key: GENERAL_ERROR
        errors:
        - message: Resource access denied due to invalid credentials.
          key: common.api.token
          context:
            accessToken: expired
    not-found-error:
      summary: not-found-error
      value:
        message: Resource not found.
        key: GENERAL_ERROR
        errors:
        - message: "Unable to find the resource requested resource: {resource}."
          key: common.api.resource
          context:
            resource: aResource
  headers:
    xXssProtection:
      description: XSS protection header
      style: simple
      explode: false
      schema:
        type: string
    xContentTypeOptions:
      description: Indicates that the MIME types advertised in the Content-Type headers
        should be followed and cannot be changed.
      style: simple
      explode: false
      schema:
        type: string
    xTotalCount:
      description: The total number of elements.
      style: simple
      explode: false
      schema:
        type: integer
        format: int32
