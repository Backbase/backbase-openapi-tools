name: Release

on:
  push:
    branches:
      - release

jobs:
  test:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Setup Build Cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2
          restore-keys: |
            ${{ runner.os }}-m2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build & Test
        run: mvn -B test
  sonar:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project
      uses: actions/checkout@v2
    - name: Setup Build Cache
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2
        restore-keys: |
          ${{ runner.os }}-m2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build and Analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify sonar:sonar

  publish:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ubuntu-latest
    needs: [test, sonar]
    steps:
    - name: Checkout project
      uses: actions/checkout@v2
    - name: Setup Build Cache
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2
        restore-keys: |
          ${{ runner.os }}-m2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Configure Git user
      run: |
        git config user.email "actions@github.com"
        git config user.name "GitHub Actions"

    - name: Build and Publish
      uses: samuelmeuli/action-maven-publish@v1
      with:
        maven_goals_phases: "release:prepare release:perform"
        maven_args: "-DskipTests"
        gpg_private_key: ${{ secrets.gpg_private_key }}
        gpg_passphrase: ${{ secrets.gpg_passphrase }}
        nexus_username: ${{ secrets.nexus_username }}
        nexus_password: ${{ secrets.nexus_password }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}